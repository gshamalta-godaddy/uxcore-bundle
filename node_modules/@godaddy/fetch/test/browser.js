/**
 * This might seem contradictionary to test the browser having `fetch`, however
 * JSDOM does not support the GlobalFetch API: https://github.com/jsdom/jsdom/issues/1724.
 * However, this actually matches IE11 better than having a global available `fetch`.
 * Evergreen browsers already support all GlobalFetch API constructors and are well
 * tested. This WhatWG compliant `fetch` ponyfill is added to JSDOM similar to how
 * we are adding `fetch` to IE11 in the real world through polyfill.io.
 */
import 'whatwg-fetch';

import fetch, { AbortController, Request, Headers, Response } from '../browser.js';
import { describe, it } from 'mocha';
import {
  assertExportedClasses,
  assertFetchPolyfillIO,
  assertAbortableFetch,
  assertFetchGoDaddyPost,
  assertReadFetch
} from './utils.js';

describe('fetch is available in browsers', function () {
  this.timeout(5e3);

  it('exposes default classes', assertExportedClasses(Request, Headers, Response));
  it('can fetch resources', assertFetchPolyfillIO(fetch));
  it('fetch can POST to API', assertFetchGoDaddyPost(fetch));
  it('can abort fetch', assertAbortableFetch(fetch, AbortController));
  it('reads window.fetch', assertReadFetch(fetch));
});
