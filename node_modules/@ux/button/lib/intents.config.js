"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _intents = _interopRequireWildcard(require("@ux/intents"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// eslint-disable-next-line max-statements
var _default = function () {
  const intents = new _intents.default();
  intents.create('@ux/button', {
    styleProperties: [_intents.enums.properties.FOREGROUND_COLOR, _intents.enums.properties.BACKGROUND_COLOR, _intents.enums.properties.BORDER_COLOR, _intents.enums.properties.OUTLINE_COLOR, _intents.enums.properties.BORDER_RADIUS, _intents.enums.properties.BORDER_WIDTH],
    expressions: [_intents.enums.expressions.PRIMARY, _intents.enums.expressions.SECONDARY, _intents.enums.expressions.CRITICAL, _intents.enums.expressions.CONTROL, 'Link'],
    interactions: [_intents.enums.interactions.FOCUSED, _intents.enums.interactions.HOVERED, _intents.enums.interactions.CHOSEN]
  }); // Font styles

  intents.uxButton.borderRadius = intents.ux.action.borderRadius;
  intents.uxButton.borderWidth = intents.ux.action.borderWidth; // Default colors (ghost)

  intents.uxButton.foregroundColor = intents.ux.action.foregroundColor;
  intents.uxButton.backgroundColor = intents.ux.action.backgroundColor;
  intents.uxButton.borderColor = intents.ux.action.borderColor;
  intents.uxButtonFocused.foregroundColor = intents.ux.actionFocused.foregroundColor;
  intents.uxButtonFocused.backgroundColor = intents.ux.actionFocused.backgroundColor;
  intents.uxButtonFocused.borderColor = intents.ux.actionFocused.borderColor;
  intents.uxButtonFocused.outlineColor = intents.ux.actionFocused.outlineColor;
  intents.uxButtonHovered.foregroundColor = intents.ux.actionHovered.foregroundColor;
  intents.uxButtonHovered.backgroundColor = intents.ux.actionHovered.backgroundColor;
  intents.uxButtonHovered.borderColor = intents.ux.actionHovered.borderColor;
  intents.uxButtonChosen.foregroundColor = intents.ux.actionChosen.foregroundColor;
  intents.uxButtonChosen.backgroundColor = intents.ux.actionChosen.backgroundColor;
  intents.uxButtonChosen.borderColor = intents.ux.actionChosen.borderColor; // Primary button

  intents.uxButtonPrimary.foregroundColor = intents.ux.actionPrimary.foregroundColor;
  intents.uxButtonPrimary.backgroundColor = intents.ux.actionPrimary.backgroundColor;
  intents.uxButtonPrimary.borderColor = intents.ux.actionPrimary.borderColor;
  intents.uxButtonPrimaryFocused.foregroundColor = intents.ux.actionPrimaryFocused.foregroundColor;
  intents.uxButtonPrimaryFocused.backgroundColor = intents.ux.actionPrimaryFocused.backgroundColor;
  intents.uxButtonPrimaryFocused.borderColor = intents.ux.actionPrimaryFocused.borderColor;
  intents.uxButtonPrimaryFocused.outlineColor = intents.ux.actionPrimaryFocused.outlineColor;
  intents.uxButtonPrimaryHovered.foregroundColor = intents.ux.actionPrimaryHovered.foregroundColor;
  intents.uxButtonPrimaryHovered.backgroundColor = intents.ux.actionPrimaryHovered.backgroundColor;
  intents.uxButtonPrimaryHovered.borderColor = intents.ux.actionPrimaryHovered.borderColor;
  intents.uxButtonPrimaryChosen.foregroundColor = intents.ux.actionPrimaryChosen.foregroundColor;
  intents.uxButtonPrimaryChosen.backgroundColor = intents.ux.actionPrimaryChosen.backgroundColor;
  intents.uxButtonPrimaryChosen.borderColor = intents.ux.actionPrimaryChosen.borderColor; // Secondary button

  intents.uxButtonSecondary.foregroundColor = intents.ux.actionSecondary.foregroundColor;
  intents.uxButtonSecondary.backgroundColor = intents.ux.actionSecondary.backgroundColor;
  intents.uxButtonSecondary.borderColor = intents.ux.actionSecondary.borderColor;
  intents.uxButtonSecondaryFocused.foregroundColor = intents.ux.actionSecondaryFocused.foregroundColor;
  intents.uxButtonSecondaryFocused.backgroundColor = intents.ux.actionSecondaryFocused.backgroundColor;
  intents.uxButtonSecondaryFocused.borderColor = intents.ux.actionSecondaryFocused.borderColor;
  intents.uxButtonSecondaryFocused.outlineColor = intents.ux.actionSecondaryFocused.outlineColor;
  intents.uxButtonSecondaryHovered.foregroundColor = intents.ux.actionSecondaryHovered.foregroundColor;
  intents.uxButtonSecondaryHovered.backgroundColor = intents.ux.actionSecondaryHovered.backgroundColor;
  intents.uxButtonSecondaryHovered.borderColor = intents.ux.actionSecondaryHovered.borderColor;
  intents.uxButtonSecondaryChosen.foregroundColor = intents.ux.actionSecondaryChosen.foregroundColor;
  intents.uxButtonSecondaryChosen.backgroundColor = intents.ux.actionSecondaryChosen.backgroundColor;
  intents.uxButtonSecondaryChosen.borderColor = intents.ux.actionSecondaryChosen.borderColor; // Critical button (danger)

  intents.uxButtonCritical.foregroundColor = intents.ux.actionCritical.foregroundColor;
  intents.uxButtonCritical.backgroundColor = intents.ux.actionCritical.backgroundColor;
  intents.uxButtonCritical.borderColor = intents.ux.actionCritical.borderColor;
  intents.uxButtonCriticalFocused.foregroundColor = intents.ux.actionCriticalFocused.foregroundColor;
  intents.uxButtonCriticalFocused.backgroundColor = intents.ux.actionCriticalFocused.backgroundColor;
  intents.uxButtonCriticalFocused.borderColor = intents.ux.actionCriticalFocused.borderColor;
  intents.uxButtonCriticalFocused.outlineColor = intents.ux.actionCriticalFocused.outlineColor;
  intents.uxButtonCriticalHovered.foregroundColor = intents.ux.actionCriticalHovered.foregroundColor;
  intents.uxButtonCriticalHovered.backgroundColor = intents.ux.actionCriticalHovered.backgroundColor;
  intents.uxButtonCriticalHovered.borderColor = intents.ux.actionCriticalHovered.borderColor;
  intents.uxButtonCriticalChosen.foregroundColor = intents.ux.actionCriticalChosen.foregroundColor;
  intents.uxButtonCriticalChosen.backgroundColor = intents.ux.actionCriticalChosen.backgroundColor;
  intents.uxButtonCriticalChosen.borderColor = intents.ux.actionCriticalChosen.borderColor; // Control button (used specifically in forms)

  intents.uxButtonControl.foregroundColor = intents.ux.actionControl.foregroundColor;
  intents.uxButtonControl.backgroundColor = intents.ux.actionControl.backgroundColor;
  intents.uxButtonControl.borderColor = intents.ux.actionControl.borderColor;
  intents.uxButtonControlFocused.foregroundColor = intents.ux.actionControlFocused.foregroundColor;
  intents.uxButtonControlFocused.backgroundColor = intents.ux.actionControlFocused.backgroundColor;
  intents.uxButtonControlFocused.borderColor = intents.ux.actionControlFocused.borderColor;
  intents.uxButtonControlFocused.outlineColor = intents.ux.actionControlFocused.outlineColor;
  intents.uxButtonControlHovered.foregroundColor = intents.ux.actionControlHovered.foregroundColor;
  intents.uxButtonControlHovered.backgroundColor = intents.ux.actionControlHovered.backgroundColor;
  intents.uxButtonControlHovered.borderColor = intents.ux.actionControlHovered.borderColor;
  intents.uxButtonControlChosen.foregroundColor = intents.ux.actionControlChosen.foregroundColor;
  intents.uxButtonControlChosen.backgroundColor = intents.ux.actionControlChosen.backgroundColor;
  intents.uxButtonControlChosen.borderColor = intents.ux.actionControlChosen.borderColor; // Link button (used specifically for inline links)

  intents.uxButtonLink.foregroundColor = intents.ux.navigate.foregroundColor;
  intents.uxButtonLinkHovered.foregroundColor = intents.ux.navigateHovered.foregroundColor;
  return intents;
}();

exports.default = _default;