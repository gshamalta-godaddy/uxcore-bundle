import { Component } from 'react';
import PropTypes from 'prop-types';

/**
 * Panel base class.
 *
 * @public
 */
export default class Base extends Component {
  constructor(props, ...args) {
    super(props, ...args);

    this.state = {
      open: !!this.props.open
    };
    this.onClick = this.onClick.bind(this);
  }

  /**
   * When rendering the component as child of a different component, it can be
   * that this parent component wants to set a new open/close state on the
   * component. We need to correctly process these props and set the correct
   * open state again.
   *
   * @param {Object} prevProps THe previous props.
   * @private
   */
  componentDidUpdate(prevProps) {
    if (this.props.open !== prevProps.open) {
      this.setState({ open: this.props.open });
    }
  }
}

/**
 * Property validation.
 *
 * @type {Object}
 * @public
 */
Base.propTypes = {
  /** Render the panel opened or closed. */
  open: PropTypes.bool,
  /** Handler to run when the collapsible heading is clicked. */
  onClick: PropTypes.func,
  /** The element to show inside of the collapsible. */
  children: PropTypes.node,
  /** The title for the collapsible. */
  title: PropTypes.oneOfType([
    PropTypes.string,
    PropTypes.element
  ]).isRequired,
  /** Optional visual status indicator. */
  indicator: PropTypes.object
};
