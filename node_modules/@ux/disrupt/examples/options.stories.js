/* eslint-disable no-console */
import Disrupt from '../src';
import React from 'react';

const options = ['apples', 'bananas', 'pears', 'grapes'];

export default function Options() {
  const [show, setShow] = React.useState(false);
  const onClick = (ev) => {
    console.log(`You like ${ev.target.value}`); setShow(false);
  };

  return (
    <div>
      <aside>
        <p>Real applications should be using @ux/button for these interactive points.</p>
        <p>Move focus using the react-focus-lock options provided within</p>
        <button onClick={ () => setShow(true) } tabIndex={ !show ? 0 : -1 } id='show-overlay'>What fruit would you like?</button>
      </aside>
      { show &&
        <Disrupt
          portalElem={ document.body }
          onClose={ () => console.log('Pick a fruit first!') }
          focusLock={ true }
          stretch={ true }>
          <ul className='content'>
            { options.map((fruit) => <li key={ fruit }>
              <button onClick={ onClick } value={ fruit }>{ fruit }</button>
            </li>) }
          </ul>
        </Disrupt>
      }
    </div>
  );
}
