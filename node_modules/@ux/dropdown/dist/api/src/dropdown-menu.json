[
  {
    "description": "DropdownMenu renders a wrapping div to handle menu alignment (left or right)\nand wires up all children by cloning them with additional properties.\n\n@class DropdownMenu\n@displayName DropdownMenu (Web)\n@private",
    "displayName": "DropdownMenu",
    "methods": [
      {
        "name": "children",
        "docblock": "Return DropdownItems of the menu. Dividers and Headers will be ignored. If the\ndropdown is of type (multi)selected the DropdownItem will be enhanced with\nadditional properties and event handlers.\n\n@returns {Array} React elements.\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "React elements.",
          "type": {
            "name": "Array"
          }
        },
        "description": "Return DropdownItems of the menu. Dividers and Headers will be ignored. If the\ndropdown is of type (multi)selected the DropdownItem will be enhanced with\nadditional properties and event handlers."
      },
      {
        "name": "onKeyDown",
        "docblock": null,
        "modifiers": [],
        "params": [
          {
            "name": "e",
            "optional": false,
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "alignmentOverride": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'left'",
              "computed": false
            },
            {
              "value": "'right'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Force alignment of dropdown menu"
      },
      "menuAlignment": {
        "type": {
          "name": "enum",
          "computed": true,
          "value": "alignmentValues"
        },
        "required": false,
        "description": "Specify alignment of dropdown menu (when possible)",
        "defaultValue": {
          "value": "'left'",
          "computed": false
        }
      },
      "enableFullscreen": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Boolean whether the dropdown menu is full screen for mobile devices"
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "onChange event handler"
      },
      "onKeyDown": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "onKeyDown event handler"
      },
      "selected": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "Array of selected dropdown item indexes",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "toggle": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Function that toggles the menu open and closed",
        "defaultValue": {
          "value": "() => {}",
          "computed": false
        }
      },
      "ariaLabels": {
        "type": {
          "name": "shape",
          "value": {
            "close": {
              "name": "string",
              "description": "Label for mobile-view menu close button",
              "required": false
            },
            "menu": {
              "name": "string",
              "description": "Label for dropdown-menu",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Screenreader labels for sub-elements",
        "defaultValue": {
          "value": "{\n  close: 'Close',\n  menu: 'Menu items'\n}",
          "computed": false
        }
      },
      "type": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Type of dropdown items in the menu",
        "defaultValue": {
          "value": "'button'",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "children to be rendered"
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "ID attribute for the dropdown"
      }
    }
  }
]