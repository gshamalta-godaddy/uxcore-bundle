"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

const _excluded = ["children", "className", "disabled", "invalid", "flyoutPlacement", "stretch"];
const UX_FIELD_FRAME_CLASSNAME = 'ux-field-frame';
/**
 * Field frame functional component
 * @param {Object} props - Information for the props can be found in the PropTypes below and in TextEntry propTypes
 * @param {React.Element} props.children - Children for component, only allowing <Button/>, <TextEntry/> and <hr/> elements
 * @param {String} [props.className] - Optional class name
 * @param {Boolean} [props.disabled] - Sets component as disabled
 * @param {Boolean} [props.invalid] - Sets component as invalid
 * @param {String} [props.flyoutPlacement] - Specifically used with flyout, identifies what side the flyout is on
 * @param {Boolean} [props.stretch] - Sets component to parent's full width
 * @param {Object} ref - Forwarded ref to TextEntry
 * @returns {React.Component} FieldFrame component
 */

const FieldFrame = /*#__PURE__*/_react.default.forwardRef(function fieldFrame(props, ref) {
  const {
    children,
    className,
    disabled,
    invalid,
    flyoutPlacement,
    stretch = true
  } = props,
        rest = (0, _objectWithoutProperties2.default)(props, _excluded);
  delete rest.style;
  return /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
    className: (0, _classnames.default)(UX_FIELD_FRAME_CLASSNAME, className, {
      [`${UX_FIELD_FRAME_CLASSNAME}--invalid`]: invalid,
      [`${UX_FIELD_FRAME_CLASSNAME}--stretch`]: stretch
    }),
    disabled: disabled,
    "data-flyout": flyoutPlacement,
    ref: ref
  }, rest), children);
});

FieldFrame.propTypes = {
  /** Verify children as Button, TextEntry or hr element */
  children: _propTypes.default.node,

  /** Optional classname for positioning */
  className: _propTypes.default.string,

  /** Sets as disabled */
  disabled: _propTypes.default.bool,

  /** Sets as invalid  */
  invalid: _propTypes.default.bool,

  /** Specifically used with flyout, identifies what side the flyout is on */
  flyoutPlacement: _propTypes.default.string,

  /** Stretches the width of the container */
  stretch: _propTypes.default.bool
};
var _default = FieldFrame;
exports.default = _default;