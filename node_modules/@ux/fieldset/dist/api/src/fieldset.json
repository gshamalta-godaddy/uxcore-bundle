[
  {
    "description": "Platform independant Fieldset base class.\n\n@Constructor\n@public",
    "displayName": "Base",
    "methods": [
      {
        "name": "includes",
        "docblock": "Check if the child input elements contain a given property.\n\n@param {Array} children Child elements.\n@param {String} prop Name of the property that should be present.\n@returns {Boolean} Results\n@private",
        "modifiers": [],
        "params": [
          {
            "name": "children",
            "description": "Child elements.",
            "type": {
              "name": "Array"
            },
            "optional": false
          },
          {
            "name": "prop",
            "description": "Name of the property that should be present.",
            "type": {
              "name": "String"
            },
            "optional": false
          }
        ],
        "returns": {
          "description": "Results",
          "type": {
            "name": "Boolean"
          }
        },
        "description": "Check if the child input elements contain a given property."
      },
      {
        "name": "invalid",
        "docblock": "Check if our given input is invalid.\n\n@param {Array} children Child elements.\n@returns {Boolean} Results\n@public",
        "modifiers": [],
        "params": [
          {
            "name": "children",
            "description": "Child elements.",
            "type": {
              "name": "Array"
            },
            "optional": false
          }
        ],
        "returns": {
          "description": "Results",
          "type": {
            "name": "Boolean"
          }
        },
        "description": "Check if our given input is invalid."
      },
      {
        "name": "valid",
        "docblock": "Check if our given input is valid.\n\n@param {Array} children Child elements.\n@returns {Boolean} Results\n@public",
        "modifiers": [],
        "params": [
          {
            "name": "children",
            "description": "Child elements.",
            "type": {
              "name": "Array"
            },
            "optional": false
          }
        ],
        "returns": {
          "description": "Results",
          "type": {
            "name": "Boolean"
          }
        },
        "description": "Check if our given input is valid."
      },
      {
        "name": "proxy",
        "docblock": "Default proxy value.\n\nTODO (crobbins): Should be combined with index.js since it only has\none concrete implementation.\n\n@public",
        "modifiers": [
          "get"
        ],
        "params": [],
        "returns": null,
        "description": "Default proxy value.\n\nTODO (crobbins): Should be combined with index.js since it only has\none concrete implementation."
      },
      {
        "name": "view",
        "docblock": "Default view value.\n\nTODO (crobbins): Should be combined with index.js since it only has\none concrete implementation.\n\n@public",
        "modifiers": [
          "get"
        ],
        "params": [],
        "returns": null,
        "description": "Default view value.\n\nTODO (crobbins): Should be combined with index.js since it only has\none concrete implementation."
      }
    ],
    "props": {
      "proxy": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Determines if the children are wrapped in a proxy component"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Child components in the fieldset"
      }
    }
  }
]