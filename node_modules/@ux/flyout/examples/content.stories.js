/* eslint-disable jsx-a11y/no-autofocus */
import Flyout from '../src';
import React from 'react';

export default function Content(args) {
  const [show, setShow] = React.useState(false);
  const anchorRef = React.useRef(null);

  const flyoutTrigger = (
    <button
      aria-labelledby='with-content'
      ref={ anchorRef }
      onClick={ () => setShow(!show) }>
      Click to toggle flyout
    </button>
  );

  const flyoutContent = (
    <div>
      <p>
        The onClose prop is setup so that if you cause a click/focus event outside of the flyout context
        then this flyout will close.
      </p>
      <p>
        This flyout will also close when clicking the button within the flyout.
      </p>
      <p>
        Remember to handle focus properly, focus order is not maintained by this component.
      </p>
      <button onClick={ () => onClose() } autoFocus>
        Click to close flyout
      </button>

    </div>
  );

  function onClose() {
    setShow(false);
    anchorRef.current.focus();
  }

  return (
    <div className='scroll-container'>
      <div className='canvas-container' style={{ maxWidth: '50ch', border: '1px solid orange' }}>
        <a href='#before'>before focus</a>
        { flyoutTrigger }
        { show && <Flyout anchorRef={ anchorRef } onClose={ onClose } className='content' { ...args }>
          { flyoutContent }
        </Flyout> }
        <a href='#after'>after focus</a>
      </div>
    </div>
  );
}

Content.args = {
  id: 'with-content',
  placement: 'bottom-start',
  strategy: 'absolute'
};
