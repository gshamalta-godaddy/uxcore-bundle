[
  {
    "description": "The primary criteria component.\n\n@displayName Criteria\n\n@class Criteria\n@public",
    "displayName": "Criteria",
    "methods": [
      {
        "name": "validate",
        "docblock": "Validates the criteria by making sure every child is valid.\n\n@param {Object} valids The map of childs to their validities.\n@returns {Boolean} Whether or not every child is valid.",
        "modifiers": [],
        "params": [
          {
            "name": "valids",
            "description": "The map of childs to their validities.",
            "type": {
              "name": "Object"
            },
            "optional": false
          }
        ],
        "returns": {
          "description": "Whether or not every child is valid.",
          "type": {
            "name": "Boolean"
          }
        },
        "description": "Validates the criteria by making sure every child is valid."
      },
      {
        "name": "setupRules",
        "docblock": "Wires up Rule child components.\n\n@returns {Array} The resulting children with wired up Rules.\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "The resulting children with wired up Rules.",
          "type": {
            "name": "Array"
          }
        },
        "description": "Wires up Rule child components."
      },
      {
        "name": "onValidChange",
        "docblock": "Wrap the onValidChange handler to set this.state.validates\n\n@param {string} name The criteria name\n@param {boolean} isValid Whether the rule is valid\n@param {boolean} wasValid Whether the rule used to be valid\n@private",
        "modifiers": [],
        "params": [
          {
            "name": "name",
            "description": "The criteria name",
            "type": {
              "name": "string"
            },
            "optional": false
          },
          {
            "name": "isValid",
            "description": "Whether the rule is valid",
            "type": {
              "name": "boolean"
            },
            "optional": false
          },
          {
            "name": "wasValid",
            "description": "Whether the rule used to be valid",
            "type": {
              "name": "boolean"
            },
            "optional": false
          }
        ],
        "returns": null,
        "description": "Wrap the onValidChange handler to set this.state.validates"
      }
    ],
    "props": {
      "value": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "The value of the data to which to apply the criteria"
      },
      "name": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The name of the criteria",
        "defaultValue": {
          "value": "''",
          "computed": false
        }
      },
      "onValidChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Called when the validation state changes"
      },
      "visible": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Whether the element is visible",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The child elements"
      },
      "standalone": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Specifies if the criteria is a standalone control or if it's\n  tied to a form field",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "enableModern": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Enable control animations and absolute positioning.\nThis should be avoided unless your app/site is experiencing\nmajor issues as this will be removed shortly.",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "iconDesign": {
        "type": {
          "name": "any"
        },
        "required": false,
        "description": "Use custom criteria checkmark design for Criteria.Rules"
      }
    }
  }
]