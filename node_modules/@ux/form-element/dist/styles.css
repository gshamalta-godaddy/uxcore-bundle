@import '~@ux/button/dist/styles.css';
@import '~@ux/dropdown/dist/styles.css';
/* stylelint-disable selector-no-qualifying-type */


/* Icons below are specifically for checkboxes */

@import '~@ux/icon/checkmark/index.css';

@import '~@ux/icon/delete/index.css';

@import '~@ux/icon/minus/index.css';

@import '~@ux/icon/search/index.css';

@import '~@ux/icon/plus/index.css';

@import '~@ux/icon/refresh/index.css';

@import '~@ux/icon/checkmark/index.css';


/* Textual form controls */

.form-control {
  display: block;
  min-height: 2.75rem;
  width: 100%;
  padding: 0.375rem 0.75rem;
  font-family: var(--ux-1ovvts5, var(--ux-9wtaa3, sans-serif));
  font-size: var(--ux-53fuhi, var(--ux-oc0naw, 1rem));
  font-weight: var(--ux-1vxl8j7, var(--ux-3z6ccd, 400));
  line-height: var(--ux-if3mvl, var(--ux-hm1ty7, 1.5));
  color: var(--ux-9ui686, var(--ux-1glcx6s, black));
  background-color: var(--ux-1taz3lf, var(--ux-1nu8itt, white));
  border: 1px solid var(--ux-2a5bxt, var(--ux-by6mab, lightgray));
  vertical-align: middle;
  transition: .3s all ease-in-out;
  border-radius: var(--ux-5skx2s, var(--ux-1oqjeuu, 2px));
}

.form-control:focus {
  outline: var(--uxp-focus-visible-outline, none);
}


/* Placeholder */

.form-control::placeholder {
  color: var(--ux-1vsptyg, var(--ux-1nk9qds, black));
      /* Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526. */
  opacity: 1;
}


/* Disabled and read-only inputs
    HTML5 says that controls under a fieldset > legend:first-child won't be
    disabled if the fieldset is disabled. Due to implementation difficulty, we
    don't honor that edge case; we style them as disabled anyway. */

.form-control:disabled,
    .form-control[readonly] {
  opacity: .4;
}

.form-control:disabled:hover,
.form-control[readonly]:hover {
  cursor: not-allowed;
  box-shadow: none;
}

body:not(.keyboard-navigation) .form-control:focus {
  border: 1px solid var(--ux-1hgz900, var(--ux-1im0suq, blue));
}

.form-element-header {
  display: flex;
  align-items: center;
}

.form-element-header .form-element-controls {
  margin-left: auto;
}

.form-element-header .form-element-controls > * {
  margin-left: .5rem;
}

.form-element-textual {
  position: relative;
}

.form-element-textual .form-element-clear {
  position: absolute;
  top: 0;
  right: 0;
  height: calc(100% - 1px);
  margin-inline-end: 1em;
}

.form-element-textual .form-control-sm + .form-element-clear {
  font-size: 87.5%;
}

[dir="rtl"] .form-element-textual .form-element-clear {
  right: auto;
  left: 0;
}


/* Form control sizing
    Build on '.form-control' with modifier classes to decrease or increase the
    height and font-size of form controls.

    The '.form-group-* form-control' variations are sadly duplicated to avoid the
    issue documented in https://github.com/twbs/bootstrap/issues/15074. */

.form-control-sm {
  padding: calc(0.375rem - .125rem) 0.75rem;
  font-size: 87.5%;
  min-height: 2rem;
}

.form-control-merch {
  height: 3.25rem;
}

.form-control-merch.form-control-sm {
  height: 2.5rem;
}

.form-group {
  margin-bottom: 1.5rem;
}

.form-group label {
  text-transform: none;
}


/* Checkboxes and radios */

.ux-custom-control.ux-custom-control-inline {
  display: inline-block;
}

.ux-custom-control .ux-control-indicator {
  font-size: 87.5%;
  margin-inline-end: .5em;
  flex-shrink: 0;
  align-self: flex-start;
  height: calc(1.5em - 1px); /* subtract border from size */
  width: calc(1.5em - 1px); /* subtract border from size */
}

.ux-custom-control.ux-custom-radio .ux-control-indicator {
  display: block;
  border-radius: 1.5em;
  box-shadow: inset 0 0 0 .25em var(--ux-2b7365, var(--ux-1nu8itt, white));
}

.ux-custom-control label {
  margin: 0;
  font-family: var(--ux-1ovvts5, var(--ux-9wtaa3, sans-serif));
  font-size: var(--ux-53fuhi, var(--ux-oc0naw, 1rem));
  font-weight: var(--ux-1vxl8j7, var(--ux-3z6ccd, 400));
  line-height: var(--ux-if3mvl, var(--ux-hm1ty7, 1.5));
}

.ux-custom-control .ux-custom-target {
  position: relative;
  display: flex;
  align-items: center;
  cursor: pointer;
}

.ux-custom-control .ux-custom-target.ux-button > * {
  pointer-events: initial;
}

.ux-custom-control .ux-custom-target:not(.ux-button) {
  margin: 0 1rem 1rem 0;
}

.ux-custom-control .ux-custom-target[disabled] {
  cursor: not-allowed;
  opacity: .4;
}

.ux-custom-control .ux-custom-target > input {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  cursor: inherit;
  height: 1.25em;
  width: 1.25em;
}

.ux-custom-control .ux-custom-target > input + .ux-control-indicator {
  border: 1px solid var(--ux-1bpnz67, var(--ux-by6mab, lightgray));
  background-color: var(--ux-2b7365, var(--ux-1nu8itt, white));
}

.ux-custom-control .ux-custom-target > input + .ux-control-indicator use {
  display: none; /** Dark mode extensions clobber the fill above */
}

.ux-custom-control .ux-custom-target > input:checked + .ux-control-indicator {
  border: 1px solid var(--ux-jv8jyp, var(--ux-f7kpiw, blue));
  background-color: var(--ux-jv8jyp, var(--ux-f7kpiw, blue));
}

.ux-custom-control .ux-custom-target > input:checked + .ux-control-indicator use {
  fill: var(--ux-1aoramc, var(--ux-1no0ng9, white));
  display: initial; /** Dark mode extensions clobber the fill above */
}

.ux-custom-control .ux-custom-target > input:focus + svg.ux-control-indicator {
  outline: var(--uxp-focus-visible-outline);
}


/* Form validation */

.has-danger .form-text {
  color: var(--ux-16d2ul, var(--ux-1fhc073, red));
}

.has-danger .form-control {
  color: inherit;
  border-color: var(--ux-1zfisa, var(--ux-1fhc073, red));
  background-color: inherit;
  box-shadow: none;
}

.has-danger .form-control:focus {
  border-color: currentColor;
  color: var(--ux-1hgz900, var(--ux-1im0suq, blue));
}


/* Inline forms

   Make forms appear inline(-block) by adding the '.form-inline' class. Inline
   forms begin stacked on extra small (mobile) devices and then go inline when
   viewports reach <768px.

   Requires wrapping inputs and labels with '.form-group' for proper display of
   default HTML form controls and our custom form controls (e.g., input groups). */

.form-inline {
  display: flex;
  flex-flow: row wrap;
  align-items: center;;
}


/* fieldset doesn't take flex properties, need to wrap in an additional element */

.form-inline .form-element-flex {
  display: flex;
}


/* Prevent shorter elements from growing to same height as others (e.g., small buttons growing to normal sized button height) */

.form-inline label {
  margin-right: .5rem;
  font-family: var(--ux-x3pz72, var(--ux-15ks663, sans-serif));
  font-size: var(--ux-pi1dfh, var(--ux-16aixzc, 1rem));
  font-weight: var(--ux-lmsau0, var(--ux-aarlu5, 400));
  line-height: var(--ux-1il6wsa, var(--ux-h93mi7, 1.5));
}


/* Kick in the inline */

@media (min-width: 520px) {
  .form-inline {       /* Allow folks to *not* use '.form-group' */       /* Re-override the feedback icon. */;
  }
  .form-inline label {
    display: inline-flex;
    align-items: center;
    justify-content: flex-start;
    margin-bottom: 0;
  }
  .form-inline .form-group {
    margin-bottom: 0;
  }
  .form-inline .form-group + .form-group {
    margin-left: 1em;
  }
  .form-inline .form-control {
    display: inline-block;
    width: auto; /* Prevent labels from stacking above inputs in '.form-group' */
    vertical-align: middle;
  }
  .form-inline .input-group {
    width: auto;
  }
  .form-inline .form-control-label {
    margin-bottom: 0;
    vertical-align: middle;
  }
  .form-inline .has-feedback .form-control-feedback {
    top: 0;
  }
}

form:not(.form-inline) > .form-group {
  width: 100%;
}

.form-element-flex {
  width: 100%;
}


/* Labels */

.form-control-label {
  padding: 0;
  margin-bottom: .3125rem;
  font-family: var(--ux-x3pz72, var(--ux-15ks663, sans-serif));
  font-size: var(--ux-pi1dfh, var(--ux-16aixzc, 1rem));
  font-weight: var(--ux-lmsau0, var(--ux-aarlu5, 400));
  line-height: var(--ux-1il6wsa, var(--ux-h93mi7, 1.5));
}


/* Textarea */

textarea.form-control {
  height: auto;
  padding-top: .5rem;
  padding-bottom: .5rem;
}


/* Form messages */

.form-text {
  display: block;
  margin-top: .25rem;
  margin-bottom: .75rem;
  font-family: var(--ux-2wulf2, var(--ux-1gutwvn, sans-serif));
  font-size: var(--ux-1ubi4zh, var(--ux-p4h24g, .875rem));
  font-weight: var(--ux-2yoymw, var(--ux-g9ierp, 400));
  line-height: var(--ux-1qki3ui, var(--ux-1dje42v, 1.5));
  color: var(--ux-1leynsm, black);
}


/* Required */

.req {
  font-family: var(--ux-1u8mf49, var(--ux-1067ph9, sans-serif));
  font-size: var(--ux-772dne, var(--ux-vvspv2, 1rem));
  font-weight: var(--ux-e06sn3, var(--ux-sm2he3, 400));
  line-height: var(--ux-1rudonx, var(--ux-1w31hux, 1.5));
  color: var(--ux-1vjximi, var(--ux-1fhc073, red));
}

.ux-search {
  margin-bottom: 1.5rem;
  z-index: unset;
}

.ux-search fieldset {
  display: flex;
  flex-grow: 1;
}

.ux-search .form-group {
  margin-bottom: 0;
}

.ux-search .form-group input {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-right: 0;
}

.ux-search .form-group label {
  display: none;
}

.ux-search .input-group-btn .btn,
    .ux-search .form-element-clear {
  display: inline-flex;
  align-items: center;
}

.ux-search .form-control::-ms-clear {
  display: none;
}

.ux-search .ux-search-list-container {
  text-align: left;
  position: absolute;
  width: calc(100% - 1px); /* px for border */
  z-index: 1030;
  top: calc(100% - 1px); /* px for border */
  left: 0;
  overflow-y: auto;
  max-height: 20rem;
  display: block;
  float: none;
}

.ux-search .form-control + .form-element-clear,
      .ux-search .form-control.form-control-lg + .form-element-clear {
  z-index: 1033;
}

.ux-search .input-group-btn {
  vertical-align: top;
}

.ux-search .input-group-btn > button {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.ux-search .btn-icon {
  min-width: 0;
}

.ux-search .ux-search-lookahead {
  display: none;
  pointer-events: none;
}

.ux-search .ux-search-lookahead-remainder {
  display: inline-block;
  text-overflow: ellipsis;
  overflow: hidden;
  height: 1.25rem;
}

.ux-search.open .form-control {
  z-index: 1031;
}

.ux-search.open .ux-search-lookahead {
  display: flex;
  text-align: start;
  justify-content: flex-start;
  position: absolute;
  margin: 0;
  z-index: 1032;
  border: 0;
  padding: 0;
  height: 0;
  top: .625rem;
  left: .875rem;
  right: .875rem;
  opacity: .5;
  user-select: none;
}

.ux-tel-input {
  padding-left: 8.75rem !important;
  direction: ltr/*rtl:ignore*/;
  text-align: left;
}

.ux-tel-container {
  position: relative;
}

.ux-tel-container .form-group label {
  display: none;
}

.ux-tel-btn {
  position: absolute;
  height: calc(2.75rem - .1875rem);
  min-height: calc(2.75rem - .1875rem);
  top: .0625rem;
  left: .0625rem;
  border: 0;
  border-right: 1px solid var(--ux-s4wx57, var(--ux-by6mab, lightgray));
  padding: .625rem .875rem .3125rem;
  min-width: auto;
  z-index: 1;
}

.ux-tel-btn:hover,
    .ux-tel-btn:focus {
  color: inherit;
  padding: .625rem .875rem .3125rem;
}

.ux-tel-btn .chevron-down-icon svg {
  margin: 0 0 0 1rem;
}

.ux-tel-btn:focus {
  border-right-style: solid;
}

.ux-tel-btn-danger {
  border-right-color: var(--ux-1hei7eo, var(--ux-1fhc073, red));
}

.dial-code {
  direction: ltr/*rtl:ignore*/;
  unicode-bidi: bidi-override/*rtl:ignore*/;
}

.ux-quantity-selector > label {
  display: block;
}

.ux-quantity-selector .form-control {
  display: inline-flex;
  padding: 0;
  width: auto;
}

.ux-quantity-selector .ux-quantity-selector-text {
  text-align: center;
  max-width: 6ch;
  margin-top: -1px;
  margin-bottom: -1px;

      /* autoprefixer: off */
  -moz-appearance: textfield;
      /* autoprefixer: on */
}

.ux-quantity-selector .ux-quantity-selector-text::-webkit-inner-spin-button {
  display: none;
}


/* Criteria Styles */

.ux-criteria {
  background: var(--ux-1k50ixh, var(--ux-cao06b, white));
  border-left: 1px solid var(--ux-y66o47, var(--ux-10jlyin, blue));
  border-right: 1px solid var(--ux-y66o47, var(--ux-10jlyin, blue));
  border-bottom: 1px solid var(--ux-y66o47, var(--ux-10jlyin, blue));
  display: flex;
  padding: .5rem 1rem 1rem;
  transform-origin: 0 0;
  transform: scaleY(0);
}

.ux-criteria.ux-criteria-relative {
  transform: scaleY(1);
}

.ux-criteria.standalone {
  border-top: 1px solid var(--ux-y66o47, var(--ux-10jlyin, blue));
  transform: scaleY(1);
  opacity: 1;
  height: auto;
  transition: all .3s ease-out;
  margin-bottom: 1.5rem;
}

.ux-criteria.standalone.valid {
  transition: all .3s ease-out .1s;
  transform: scaleY(0);
  opacity: 0;
  height: 0;
}

.ux-criteria-content {
  width: 100%;
}

.fade-in {
  transition: opacity .2s ease-out .3s;
  opacity: 1;
}

.fade-out {
  opacity: 0;
  transition: opacity .2s ease-out;
}

.ux-criteria-enter {
  transform: scaleY(1);
  transition: transform .3s ease-out;
}

.ux-criteria-enter-done {
  transform: scaleY(1);
  height: auto;
}

.ux-criteria-exit {
  transform: scaleY(0);
  transition: transform .3s ease-out .1s;
}

.ux-criteria-exit-done {
  transform: scaleY(0);
  opacity: 0;
  height: 0;
}

.ux-criteria-connect {
  position: relative;
}

.ux-criteria-connect .ux-criteria {
  top: 100%;
  width: 100%;
  position: absolute;
  z-index: 1000;
  box-shadow: 0px 0px 12px rgba(17, 17, 17, 0.07),
        0px 4px 4px rgba(17, 17, 17, 0.1),
        0px 6px 8px rgba(17, 17, 17, 0.07);
}

.ux-criteria-connect.ux-criteria-relative {
  position: relative;
}

.ux-criteria-header.title {
  font-family: var(--ux-f6zd05, var(--ux-15ks663, sans-serif));
  font-size: var(--ux-1ld6fs6, var(--ux-16aixzc, 1rem));
  font-weight: var(--ux-1l7je3n, var(--ux-aarlu5, 400));
  line-height: var(--ux-16vy70h, var(--ux-h93mi7, 1.5));
  color: var(--ux-171s706, var(--ux-1leynsm, black));
  border-bottom: 1px solid var(--ux-xqdm01, var(--ux-97h3vl, lightgray));
  margin: .75rem 0 1rem;
  padding-bottom: .5rem;
  text-transform: none;
  line-height: 24px;
  font-weight: 850;
  font-size: 16px;
}


/* Separate criteria items */

.ux-criteria-rule {
  min-height: 32px;
  align-items: center;
  display: flex;
  opacity: 1;
  overflow: hidden;
  max-height: 6.25rem;
}

.ux-criteria-rule > .icon {
  color: var(--ux-asxrqp, var(--ux-1nk9qds, black));
  background-color: var(--ux-1ro0ijo, var(--ux-1kpdpz9, white));
  border-color: var(--ux-1sezxba, var(--ux-1p4dc1z, lightgray));
  display: flex;
  padding-left: .25rem;
}

.ux-criteria-rule > .icon svg {
  width: 1.25rem;
}

.ux-criteria-rule > .icon.success {
  color: var(--ux-o034vm, var(--ux-f7kpiw, blue));
  background-color: var(--ux-1a6cjk7, var(--ux-1no0ng9, white));
  border-color: var(--ux-18qj45h, var(--ux-1no0ng9, white));
}

.ux-criteria:not(.ux-criteria-relative) .ux-criteria-rule {
  transition: max-height .3s ease-out, opacity .3s ease-out, margin-top .3s ease-out;
}

.ux-criteria:not(.ux-criteria-relative) .ux-criteria-rule.ux-criteria-rule-checked {
  opacity: .4;
}

.ux-criteria-rule-text {
  font-family: var(--ux-1r28wfa, var(--ux-15ks663, sans-serif));
  font-size: var(--ux-12zlqr9, var(--ux-16aixzc, 1rem));
  font-weight: var(--ux-1bul8sw, var(--ux-aarlu5, 400));
  line-height: var(--ux-16zkbw2, var(--ux-h93mi7, 1.5));
  color: var(--ux-kt6945, var(--ux-1leynsm, black));
  display: flex;
  flex-grow: 1;
  padding-left: .75rem;
}


/* Input group */

.input-group {
  position: relative;
  display: flex;
  align-items: stretch;
  width: 100%;
  z-index: 1;
}

.input-group label { /* this is to hide the label that is breaking input-groups */
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.input-group .form-control {
      /* Ensure that the input is always above the *appended* addon button for
        proper border colors. */
  position: relative;
  z-index: 2;
  flex: 1 1 auto;
  margin-bottom: 0;
}


/* Bring the "active" form control to the front */

.input-group .form-control:focus,
      .input-group .form-control:active,
      .input-group .form-control:hover {
  z-index: 4;
}

.input-group-btn,
  .input-group .form-control {
  display: flex;
  align-items: center;
}

.input-group-btn:not(:first-child):not(:last-child),
.input-group .form-control:not(:first-child):not(:last-child) {
  border-radius: 0;
}

.input-group-btn {
  white-space: nowrap;
}


/* Reset rounded corners */

.input-group .form-control:not(:last-child),
  .input-group-btn:not(:last-child) > .btn,
  .input-group-btn:not(:last-child) > .btn-group > .btn,
  .input-group-btn:not(:last-child) > .dropdown-toggle,
  .input-group-btn:not(:first-child) > .btn:not(:last-child):not(.dropdown-toggle),
  .input-group-btn:not(:first-child) > .btn-group:not(:last-child) > .btn {
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
}

.input-group .form-control:not(:first-child),
  .input-group-btn:not(:first-child) > .btn,
  .input-group-btn:not(:first-child) > .btn-group > .btn,
  .input-group-btn:not(:first-child) > .dropdown-toggle,
  .input-group-btn:not(:last-child) > .btn:not(:first-child),
  .input-group-btn:not(:last-child) > .btn-group:not(:first-child) > .btn {
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
}


/* Button input groups */

.input-group-btn {
  position: relative;
  align-items: stretch;
  z-index: 3;
  flex-shrink: 0;
    /* Jankily prevent input button groups from wrapping with 'white-space' and
       'font-size' in combination with 'inline-block' on buttons. */
  font-size: 0;
  white-space: nowrap;
}


/* Negative margin for spacing, position for bringing hovered/focused/actived
       element above the siblings. */

.input-group-btn > .btn {
  position: relative;
}

.input-group-btn > .btn + .btn {
  margin-left: -1px;
}


/* Bring the "active" button to the front */

.input-group-btn > .btn:focus,
      .input-group-btn > .btn:active,
      .input-group-btn > .btn:hover {
  z-index: 3;
}

.input-group-btn:first-child > .btn + .btn {
  margin-left: 0;
}


/* Negative margin to only have a single, shared border between the two */

.input-group-btn:not(:last-child) > .btn,
      .input-group-btn:not(:last-child) > .btn-group {
  margin-right: -1px;
}

.input-group-btn:not(:first-child) > .btn,
      .input-group-btn:not(:first-child) > .btn-group {
  z-index: 2;
        /* remove nagative margin to solve overlapping issue with button. */
  margin-left: 0;
}


/* When input is first, overlap the right side of it with the button(-group) */

.input-group-btn:not(:first-child) > .btn:first-child,
.input-group-btn:not(:first-child) > .btn-group:first-child {
  margin-left: -1px;
}


/* Because specificity */

.input-group-btn:not(:first-child) > .btn:focus,
        .input-group-btn:not(:first-child) > .btn:active,
        .input-group-btn:not(:first-child) > .btn:hover,
        .input-group-btn:not(:first-child) > .btn-group:focus,
        .input-group-btn:not(:first-child) > .btn-group:active,
        .input-group-btn:not(:first-child) > .btn-group:hover {
  z-index: 3;
}

.input-group-btn.dropdown {
  display: table-cell;
}

.input-group-btn .btn {
  white-space: nowrap;
}

