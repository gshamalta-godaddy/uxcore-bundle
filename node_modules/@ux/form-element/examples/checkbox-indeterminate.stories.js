import { Checkbox, Form } from '@ux/uxcore2';
import React from 'react';

const values = ['foo', 'bar', 'baz'];

export default class CheckboxIndeterminate extends React.Component {
  state = {};

  get isIndeterminateChecked() {
    return values.some((v) => this.state[v]);
  }

  get isIndeterminate() {
    return !values.every((value) => this.state[value]);
  }

  onCheckboxChange = (e) => {
    const { value, checked } = e.target;

    this.setState({ [value]: checked });
  };

  onBulkChange = (e) => {
    const { checked } = e.target;
    const newState = {};

    values.forEach((value) => { newState[value] = checked; });
    this.setState(newState);
  };

  render() {
    return (
      <Form>
        <Checkbox
          label='select/deselect all'
          indeterminate={ this.isIndeterminate }
          checked={ this.isIndeterminateChecked }
          onChange={ this.onBulkChange }
        />
        <hr />
        { values.map((value) => (
          <Checkbox
            name={ value }
            value={ value }
            key={ value }
            label={ value }
            checked={ this.state[value] }
            onChange={ this.onCheckboxChange }
          />
        )) }
      </Form>
    );
  }
}
