import { FormElement, Form } from '@ux/uxcore2';
import React from 'react';

export default class DynamicFailure extends React.Component {
  constructor(...args) {
    super(...args);

    this.validate = this.validate.bind(this);

    this.state = {
      failure: null
    };
  }

  validate(value) {
    const regex = /^[0-9]*$/;
    let failureMessage = null;
    let isValid = true;

    if (regex.test(value)) {

      if (value < 100) {
        failureMessage = 'Number must be larger than 100';
        isValid = false;
      }

    } else {
      failureMessage = 'Give me numbers';
      isValid = false;
    }

    this.setState({
      failure: failureMessage
    });

    return isValid;
  }

  render() {
    return <Form action='#'>
      <FormElement label='Give me a number greater than 100.'
        name='example-msg'
        validate={ this.validate }
        failure={ this.state.failure } />
    </Form>;
  }
}

