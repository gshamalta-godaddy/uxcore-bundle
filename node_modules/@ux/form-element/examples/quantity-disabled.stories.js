import { QuantitySelector } from '@ux/uxcore2';
import React from 'react';

export default class QuantityDisabled extends React.Component {
  constructor(props) {
    super(props);

    this.state = { inflight: false };
    this.onQuantityChange = this.onQuantityChange.bind(this);
    this.onResponse = this.onResponse.bind(this);
  }

  /**
   * Indicates to the user that an async operation is inflight
   * (which disables the QuantitySelector) then performs that
   * async operation.
   */
  onQuantityChange() {
    this.setState({ inflight: true }, () => {
      this.completeAfterDelay(this.onResponse);
    });
  }

  /**
   * Simulates async behavior. This represents an operation you wish
   * to perform each time the value is incremented / decremented.
   * @param  {Function} done      Continuation to invoke when complete.
   * @param  {Number}   [timeout] Simulated async delay.
   */
  completeAfterDelay(done, timeout = 1000) {
    setTimeout(done, timeout);
  }

  /**
   * Indicates to the user that the async behavior has completed.
   */
  onResponse() {
    this.setState({ inflight: false });
  }

  render() {
    const { inflight } = this.state;

    return (
      <div>
        <QuantitySelector
          id='disabled-quantity-selector'
          label='Select a value between 2 and 15'
          min={ 2 }
          max={ 15 }
          defaultValue={ 5 }
          errorMessage='Your input is invalid.'
          onChange={ this.onQuantityChange }
          disabled={ inflight } />
      </div>
    );
  }
}
