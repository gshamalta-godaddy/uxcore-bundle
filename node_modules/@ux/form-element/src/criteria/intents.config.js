import Intents, { enums } from '@ux/intents';

/**
 * The @ux/criteria component _should_ be a composite of a few existing components; including a dropdown and optionlist.
 * For the purposes of a verbose example and coverage, the enumeration has been listed below.
 */

// eslint-disable-next-line max-statements
export default (function () {
  const intents = new Intents();

  intents.create('@ux/criteria', {
    styleProperties: [
      enums.properties.FONT_FAMILY,
      enums.properties.FONT_SIZE,
      enums.properties.FONT_WEIGHT,
      enums.properties.LINE_HEIGHT,
      enums.properties.FOREGROUND_COLOR,
      enums.properties.BACKGROUND_COLOR,
      enums.properties.BORDER_COLOR
    ],
    expressions: [
      enums.expressions.CRITICAL,
      enums.expressions.SUCCESS
    ],
    features: {
      [enums.features.BODY]: {
        styleProperties: [
          enums.properties.BACKGROUND_COLOR,
          enums.properties.BORDER_COLOR
        ]
      },
      [enums.features.DESCRIPTION]: {
        styleProperties: [
          enums.properties.FONT_FAMILY,
          enums.properties.FONT_SIZE,
          enums.properties.FONT_WEIGHT,
          enums.properties.LINE_HEIGHT,
          enums.properties.FOREGROUND_COLOR,
          enums.properties.BORDER_COLOR
        ]
      },
      [enums.features.ITEM]: {
        styleProperties: [
          enums.properties.FONT_FAMILY,
          enums.properties.FONT_SIZE,
          enums.properties.FONT_WEIGHT,
          enums.properties.LINE_HEIGHT,
          enums.properties.FOREGROUND_COLOR
        ]
      },
      [enums.features.INDICATOR]: {
        styleProperties: [
          enums.properties.FOREGROUND_COLOR,
          enums.properties.BACKGROUND_COLOR,
          enums.properties.BORDER_COLOR
        ]
      }
    }
  });


  // The body of the dropdown
  intents.uxCriteria.body.backgroundColor = intents.ux.box.backgroundColor;
  intents.uxCriteria.body.borderColor = intents.ux.control.outlineColor; // Expected to show as "focused"

  // The help text within the dropdown, above the items
  intents.uxCriteria.description.fontFamily = intents.ux.textLabel.fontFamily;
  intents.uxCriteria.description.fontSize = intents.ux.textLabel.fontSize;
  intents.uxCriteria.description.fontWeight = intents.ux.textLabel.fontWeight;
  intents.uxCriteria.description.lineHeight = intents.ux.textLabel.lineHeight;
  intents.uxCriteria.description.foregroundColor = intents.ux.box.foregroundColor;
  intents.uxCriteria.description.borderColor = intents.ux.box.borderColor;

  // Each criteria item in the dropdown
  intents.uxCriteria.item.fontFamily = intents.ux.textLabel.fontFamily;
  intents.uxCriteria.item.fontSize = intents.ux.textLabel.fontSize;
  intents.uxCriteria.item.fontWeight = intents.ux.textLabel.fontWeight;
  intents.uxCriteria.item.lineHeight = intents.ux.textLabel.lineHeight;
  intents.uxCriteria.item.foregroundColor = intents.ux.box.foregroundColor;

  // Each checkbox/icon within the item, default state
  intents.uxCriteria.indicator.foregroundColor = intents.ux.controlVoid.foregroundColor;
  intents.uxCriteria.indicator.backgroundColor = intents.ux.controlVoid.backgroundColor;
  intents.uxCriteria.indicator.borderColor = intents.ux.controlVoid.borderColor;

  // Success state for checkbox
  intents.uxCriteriaSuccess.indicator.foregroundColor = intents.ux.feedback.feedbackColor;
  intents.uxCriteriaSuccess.indicator.backgroundColor = intents.ux.feedback.onFeedbackColor;
  intents.uxCriteriaSuccess.indicator.borderColor = intents.ux.feedback.onFeedbackColor;

  return intents;
}());
