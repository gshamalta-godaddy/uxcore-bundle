import FormElement from '../lib/index.js';
import Button from '@ux/button';
import PropTypes from 'prop-types';
import React from 'react'; // eslint-disable-line no-unused-vars

/**
 * Component for rending a password element which can switch the password on and
 * off.
 *
 * @displayName Password
 * @class Password
 * @public
 */
export class Password extends FormElement {
  constructor(...args) {
    super(...args);

    const component = this;

    //
    // Conditionally ignore properties,
    //
    if (component.ignoreProps) {
      component.ignoreProps.push('show', 'hide');
    }

    component.type = 'password';                  // Default input type.
    component._show = this.props.show || 'show';  // Label for when we're in password mode.
    component._hide = this.props.hide || 'hide';  // Label for when password is visible.

    //
    // By the time the component is processed, we already received and processed
    // the props so we can just correctly set the button so it's rendered as
    // intended.
    //
    component.button = component.props.button || <Button text={ component.select('_show') } design='inline' onClick={ toggleHidden }/>;

    /**
     * Switches the button state.
     *
     * @param {Event} ev DOM Event
     * @private
     */

    function toggleHidden(ev) {
      ev.preventDefault();

      const hidden = component.select('type') === 'password';
      const button = <Button text={ hidden ? component.select('_hide') : component.select('_show') } design='inline' onClick={ toggleHidden }/>;

      component.setState({
        button,
        type: hidden ? 'text' : 'password'
      });
    }

    component.action = toggleHidden;
  }

  render() { return super.render(); }
}

/**
 * Allowed properties, show and hide are used as action.
 *
 * @type {Object}
 * @public
 */
Password.propTypes = {
  /** props from Element in FormElement */
  ...FormElement.propTypes,
  /** Label that is displayed when the user can show his typed password. */
  show: PropTypes.node,
  /** Label that is shown when user can hide his showed password. */
  hide: PropTypes.node
};

export default Password;
