import Dropdown from '@ux/dropdown';
import React from 'react';
import PropTypes from 'prop-types';

const { DropdownItem } = Dropdown;

/**
 * Display a Timepicker as a Dropdown of time increments.
 *
 * @param {Object} props The props.
 * @param {Object} ref forwardRef.
 * @returns {Dropdown} Configured @ux/dropdown
 * @public
 */
function TimePicker({ interval, locale, hour12, ...rest }, ref) {
  const date = new Date();
  const increments = [];

  for (let i = 0; i < 24; i++) {
    increments.push([i, 0]);

    if (interval === 'half-hour') {
      increments.push([i, 30]);
    }
  }

  const formatter = new Intl.DateTimeFormat(locale, {
    hour: 'numeric',
    minute: 'numeric',
    hour12
  });

  return (
    <Dropdown ref={ ref } { ...rest } type='select' toggleIcon='clock'>
      {
        increments.map((time, index) => {
          const [hour, minute] = time;

          date.setHours(hour);
          date.setMinutes(minute);

          const formatted = formatter.format(date).replace('24:', '00:');

          return (
            <DropdownItem key={ formatted } value={ index }>
              { formatted }
            </DropdownItem>
          );
        })
      }
    </Dropdown>
  );
}

/**
 * Display a Timepicker as a Dropdown of time increments.
 *
 * @public
 */
const TimePickerForward = React.forwardRef(TimePicker);

/**
 * Interval and locale properties.
 *
 * @enum {Object} propTypes
 * @api public
 */
TimePicker.propTypes = TimePickerForward.propTypes = {
  ...Dropdown.propTypes,
  /** The desired interval of time to display */
  interval: PropTypes.oneOf(['half-hour', 'hour']),
  /** The locale/market that should be used */
  locale: PropTypes.string,
  /** The desired way for hours to be rendered (12 vs 24)
   * (`true` for a 12 hour clock).
   * This is passed verbatim to `Intl.DateTimeFormat` */
  hour12: PropTypes.bool
};

/**
 * Show en-US formatting and hour intervals by default.
 *
 * @enum {Object} defaultProps
 * @api public
 */
TimePicker.defaultProps = TimePickerForward.defaultProps = {
  ...Dropdown.defaultProps,
  interval: 'hour',
  locale: 'en-US',
  hour12: false
};

export {
  TimePickerForward as default
};
