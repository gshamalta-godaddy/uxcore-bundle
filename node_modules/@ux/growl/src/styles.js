import { css } from 'linaria';
import { UX_GROWL_DELAY_MS } from './index.js';
import Intents from '@ux/intents';
import feedbackExpressions from '@ux/intents/lib/feedback-expressions';

import '@ux/dialog/src/styles';
import '@ux/text/src/styles';

const intents = new Intents();

function createAccessoryVariant(type) {
  return `
    .ux-dialog-accessory--${type.toLowerCase()} {
      color: ${intents.ux[`feedback${type}`].feedbackColor};
      fill: ${intents.ux[`feedback${type}`].feedbackColor};
    }
  `;
}

export default css`
  :global() {

    @import '~@ux/icon/information/index.css';
    @import '~@ux/icon/checkmark/index.css';
    @import '~@ux/icon/comment/index.css';
    @import '~@ux/icon/alert/index.css';
    @import '~@ux/icon/help/index.css';
    @import '~@ux/icon/star/index.css';

    .ux-growl-shell {
      position: fixed;
      top: 0;
      right: 0;
      display: flex;
      flex-wrap: wrap;
      align-items: flex-start;
      gap: calc(${intents.ux.box.density} * 2);
      padding: calc(${intents.ux.box.density} * 4);
    }

    .ux-growl-messages {
      list-style: none;
      display: flex;
      flex-direction: column;
      margin: 0;
      padding: 0;
      gap: calc(${intents.ux.box.density} * 2);
      max-width: 20rem;
      --uxGrowl--fadeDuration: .5s;
    }

    .ux-growl-message {
      margin: 0;
      opacity: 0;
      transform: translateY(calc(${intents.ux.box.density} * -4));
      transform-origin: top center;

      animation-name: ux-growl-appear;
      animation-duration: 0s;
      animation-timing-function: ease;
      animation-fill-mode: forwards;

      > * {
        color: ${intents.ux.boxHighContrast.foregroundColor};
        background-color: ${intents.ux.boxHighContrast.backgroundColor};
        border-color: ${intents.ux.boxHighContrast.borderColor};
        border-width: ${intents.ux.box.borderWidth};
        border-radius: ${intents.ux.box.borderRadius};
        padding: calc(${intents.ux.box.density} * 4);
      }

      & a[href] {
        color: inherit;
      }
    }

    ${Object.values(feedbackExpressions || {}).map(createAccessoryVariant).filter(Boolean).join('\n')}

    .ux-growl-message[style*="${UX_GROWL_DELAY_MS}"] {
      opacity: 1;
      transform: translateY(0);
      animation-name: ux-growl-disappear;
      animation-delay: var(${UX_GROWL_DELAY_MS});
    }

    @media screen and (prefers-reduced-motion: no-preference) {
      .ux-growl-message {
        animation-duration: var(--uxGrowl--fadeDuration);
      }
    }

    @keyframes ux-growl-appear {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    @keyframes ux-growl-disappear {
      to {
        opacity: 0;
        transform: translateY(calc(${intents.ux.box.density} * -4));
      }
    }
  }
`;
