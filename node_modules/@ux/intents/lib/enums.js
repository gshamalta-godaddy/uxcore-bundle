"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _feedbackExpressions = _interopRequireDefault(require("./feedback-expressions"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var _default = {
  expressions: _objectSpread(_objectSpread({}, _feedbackExpressions.default), {}, {
    PRIMARY: 'Primary',
    SECONDARY: 'Secondary',
    CONTROL: 'Control',
    OPTION: 'Option',
    DISABLED: 'Disabled',
    ON_CONTRAST: 'OnContrast',
    CHOSEN: 'Chosen',
    COMPLETED: 'Completed'
  }),
  properties: {
    BACKGROUND_COLOR: 'backgroundColor',
    FOREGROUND_COLOR: 'foregroundColor',
    BORDER_COLOR: 'borderColor',
    OUTLINE_COLOR: 'outlineColor',
    SHADOW_COLOR: 'shadowColor',
    FEEDBACK_COLOR: 'feedbackColor',
    ON_FEEDBACK_COLOR: 'onFeedbackColor',
    FIGURE_COLOR: 'figureColor',
    BORDER_RADIUS: 'borderRadius',
    BORDER_WIDTH: 'borderWidth',
    FONT_FAMILY: 'fontFamily',
    FONT_SIZE: 'fontSize',
    FONT_WEIGHT: 'fontWeight',
    LINE_HEIGHT: 'lineHeight',
    TEXT_DECORATION: 'textDecoration',
    DENSITY: 'density'
  },
  interactions: {
    FOCUSED: 'Focused',
    GRABBED: 'Grabbed',
    HOVERED: 'Hovered',
    PRESSED: 'Pressed',
    CHOSEN: 'Chosen'
  },
  features: {
    BODY: 'body',
    CONTENT: 'content',
    DESCRIPTION: 'description',
    LABEL: 'label',
    METER: 'meter',
    KNOB: 'knob',
    INDICATOR: 'indicator',
    TITLE: 'title',
    ITEM: 'item',
    BACKDROP: 'backdrop'
  }
};
exports.default = _default;