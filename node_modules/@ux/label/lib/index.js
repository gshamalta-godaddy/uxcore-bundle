"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.ensureLabelComponent = ensureLabelComponent;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

var _text = _interopRequireDefault(require("@ux/text"));

var _classes = _interopRequireDefault(require("@ux/text/classes"));

const UX_LABEL_CLASSNAME = 'ux-label';
/**
 * Creates a label component
 *
 * @param {Object} props - Component configuration
 * @param {Element} props.children - Content for the label
 * @param {String} [props.className] - Optional class name
 * @param {Boolean} [props.float] - Sets the label as floating
 * @param {String} props.htmlFor - Sets the for attribute on the label
 * @param {String} props.id - Sets the id attribute on the label
 * @param {Boolean} [props.internal] - Sets the label as internal to a component
 * @param {Boolean|Object} [props.required] - Marks the label as required
 * @param {String} [props.required.emphasis] - @ux/text emphasis for required mark
 * @param {String} [props.required.text] - Content for the required mark
 * @param {Object} ref - Element reference
 * @returns {Element} - Label component
 */

const Label = /*#__PURE__*/_react.default.forwardRef(function label(props, ref) {
  const {
    children,
    className,
    float,
    htmlFor,
    id,
    internal,
    required
  } = props;
  return /*#__PURE__*/_react.default.createElement("label", {
    className: (0, _classnames.default)(UX_LABEL_CLASSNAME, className, {
      // Meant as external label, expected to appear above the input field
      [(0, _classes.default)({
        as: 'label'
      })]: !internal,
      // Inherit styles from input, potentially float
      [`${UX_LABEL_CLASSNAME}--internal`]: internal,
      [`${UX_LABEL_CLASSNAME}--floating`]: float && internal
    }),
    htmlFor: htmlFor,
    id: id,
    ref: ref
  }, children, required && /*#__PURE__*/_react.default.createElement(_text.default.span, {
    "aria-hidden": true,
    className: `${UX_LABEL_CLASSNAME}-required`,
    emphasis: typeof required === 'object' && required.emphasis || 'critical',
    text: typeof required === 'object' && required.text || '*'
  }));
});

Label.propTypes = {
  /** Children to render as siblings */
  children: _propTypes.default.node.isRequired,

  /** Class for the root component */
  className: _propTypes.default.string,

  /** Sets the label as floating */
  float: _propTypes.default.bool,

  /** Sets the for attribute on the label */
  htmlFor: _propTypes.default.string.isRequired,

  /** id for the label */
  id: _propTypes.default.string,

  /** Sets the label as internal to parent */
  internal: _propTypes.default.bool,

  /** Sets the label as required */
  required: _propTypes.default.oneOfType([
  /** Use defaults */
  _propTypes.default.bool,
  /** Customize required */
  _propTypes.default.shape({
    /** Default is 'critical' */
    emphasis: _propTypes.default.string,

    /** Default is asterisk (*) */
    text: _propTypes.default.node
  })])
};
Label.displayName = 'Label';
/**
 * Ensures a @ux/label is created
 *
 * @param {Object|String} label - Common configuration for a label
 * @param {Object} props - Additional props to construct a new label
 * @returns {Object} - Label
 */

function ensureLabelComponent(label) {
  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  if (!label) return null;
  return typeof label === 'object' && label.type === Label ? label : /*#__PURE__*/_react.default.createElement(Label, props, label);
}

var _default = Label;
exports.default = _default;