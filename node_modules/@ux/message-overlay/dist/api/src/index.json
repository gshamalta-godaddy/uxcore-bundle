[
  {
    "description": "<MessageOverlay/> component, props are inherited from <Disrupt/>\n\n@param {Object} props - Component props\n@returns {Component} <MessageOverlay/>",
    "displayName": "MessageOverlay",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Children to render within"
      },
      "focusLock": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "bool"
            },
            {
              "name": "object"
            }
          ]
        },
        "required": false,
        "description": "Defaults to false. If `true`, enables focus lock with default options. If object, passes props directly to react-focus-lock"
      },
      "onClose": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback that fires when the user attempts to leave the component"
      },
      "onEventBehind": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Callback that fires when an event occurs behind the component"
      },
      "portalElem": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Element to attach the component to, use document.body for \"modal\" behavior"
      },
      "strategy": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'absolute'",
              "computed": false
            },
            {
              "value": "'fixed'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Method to attach the backdrop"
      },
      "stretch": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Stretches the width of the container"
      }
    }
  }
]