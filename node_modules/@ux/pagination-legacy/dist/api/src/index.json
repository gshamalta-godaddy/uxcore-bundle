[
  {
    "description": "The Pagination react component that is used to switch between content panes or pages.\nBehavior of the pagination component is controlled by use of props.\nThe component displays links for pages in the current viewable range,\nit displays forward and back navigation links and also a dropdown to choose\nthe number of items being displayed per page.\n\n@displayName Pagination (web)\n@class Pagination\n@public",
    "displayName": "Pagination",
    "methods": [
      {
        "name": "_warn",
        "docblock": "console warning about missing id for accessibility purposes",
        "modifiers": [],
        "params": [],
        "returns": null,
        "description": "console warning about missing id for accessibility purposes"
      },
      {
        "name": "_totalPages",
        "docblock": "Get the total number of pages in the paginated result set\n\n@param {number} pageItems Number of items per page\n@returns {number} The total number of pages in the paginated result set\n@private",
        "modifiers": [],
        "params": [
          {
            "name": "pageItems",
            "description": "Number of items per page",
            "type": {
              "name": "number"
            },
            "optional": false
          }
        ],
        "returns": {
          "description": "The total number of pages in the paginated result set",
          "type": {
            "name": "number"
          }
        },
        "description": "Get the total number of pages in the paginated result set"
      },
      {
        "name": "_allowItemsPerPageSelection",
        "docblock": "Returns a value indicating if the the pageItems Dropdown should be displayed?\n\n@returns {boolean} should the pageItems drop down be displayed\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "should the pageItems drop down be displayed",
          "type": {
            "name": "boolean"
          }
        },
        "description": "Returns a value indicating if the the pageItems Dropdown should be displayed?"
      },
      {
        "name": "_enableBackLinks",
        "docblock": "Should the back links be enabled or disabled?\n\n@returns {boolean} should the back links be enabled or disabled?\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "should the back links be enabled or disabled?",
          "type": {
            "name": "boolean"
          }
        },
        "description": "Should the back links be enabled or disabled?"
      },
      {
        "name": "_enableForwardLinks",
        "docblock": "Should the forward links be enabled or disabled?\n\n@returns {boolean} should the forward links be enabled or disabled?\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "should the forward links be enabled or disabled?",
          "type": {
            "name": "boolean"
          }
        },
        "description": "Should the forward links be enabled or disabled?"
      },
      {
        "name": "_pageRangeToShow",
        "docblock": "The page range (start and end) that is to be displayed\n\n@returns {Object} page range to display\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "page range to display",
          "type": {
            "name": "Object"
          }
        },
        "description": "The page range (start and end) that is to be displayed"
      },
      {
        "name": "_pageLinksSection",
        "docblock": "JSX for the page link section\n\n@returns {ReactElement} page link section\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "page link section",
          "type": {
            "name": "ReactElement"
          }
        },
        "description": "JSX for the page link section"
      },
      {
        "name": "_moreLinksSection",
        "docblock": "JSX for the more section\n\n@returns {ReactElement} more link section\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "more link section",
          "type": {
            "name": "ReactElement"
          }
        },
        "description": "JSX for the more section"
      },
      {
        "name": "_firstLinkSection",
        "docblock": "JSX for the first link\n\n@returns {ReactElement} first link JSX\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "first link JSX",
          "type": {
            "name": "ReactElement"
          }
        },
        "description": "JSX for the first link"
      },
      {
        "name": "_lastLinkSection",
        "docblock": "JSX for the last link\n\n@returns {ReactElement} last link JSX\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "last link JSX",
          "type": {
            "name": "ReactElement"
          }
        },
        "description": "JSX for the last link"
      },
      {
        "name": "_prevLinkSection",
        "docblock": "JSX for the previous link\n\n@returns {ReactElement} previous link JSX\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "previous link JSX",
          "type": {
            "name": "ReactElement"
          }
        },
        "description": "JSX for the previous link"
      },
      {
        "name": "_nextLinkSection",
        "docblock": "JSX for the next link\n\n@returns {ReactElement} next link JSX\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "next link JSX",
          "type": {
            "name": "ReactElement"
          }
        },
        "description": "JSX for the next link"
      },
      {
        "name": "_numberItemsSection",
        "docblock": "JSX for the number items per page dropdown\n\n@returns {ReactElement} number items per page dropdown JSX\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "number items per page dropdown JSX",
          "type": {
            "name": "ReactElement"
          }
        },
        "description": "JSX for the number items per page dropdown"
      },
      {
        "name": "_paginationSection",
        "docblock": "JSX for the pagination links section\n\n@returns {ReactElement|Null} pagination links section JSX\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "pagination links section JSX",
          "type": {
            "name": "union",
            "elements": [
              {
                "name": "ReactElement"
              },
              {
                "name": "Null"
              }
            ]
          }
        },
        "description": "JSX for the pagination links section"
      },
      {
        "name": "onPageItemsChanged",
        "docblock": "The event handler that gets invoked when the number of items per page changes\n\n@param {object} props The event props.\n@returns {void}\n@public",
        "modifiers": [],
        "params": [
          {
            "name": "props",
            "description": "The event props.",
            "type": {
              "name": "object"
            },
            "optional": false
          }
        ],
        "returns": {
          "description": null,
          "type": {
            "name": "void"
          }
        },
        "description": "The event handler that gets invoked when the number of items per page changes"
      },
      {
        "name": "onPageClick",
        "docblock": "The event handler that gets invoked when a page link is clicked\n\n@param {object} evt The event object\n@param {number} pageSelected The value of the page selected\n@returns {void}\n@public",
        "modifiers": [],
        "params": [
          {
            "name": "evt",
            "description": "The event object",
            "type": {
              "name": "object"
            },
            "optional": false
          },
          {
            "name": "pageSelected",
            "description": "The value of the page selected",
            "type": {
              "name": "number"
            },
            "optional": false
          }
        ],
        "returns": {
          "description": null,
          "type": {
            "name": "void"
          }
        },
        "description": "The event handler that gets invoked when a page link is clicked"
      },
      {
        "name": "onNavigationClick",
        "docblock": "The event handler that gets invoked when a navigation link is clicked\n\n@param {object} evt the event object\n@param {string} navigationType The type of navigation link that was clicked\n@returns {void}\n@public",
        "modifiers": [],
        "params": [
          {
            "name": "evt",
            "description": "the event object",
            "type": {
              "name": "object"
            },
            "optional": false
          },
          {
            "name": "navigationType",
            "description": "The type of navigation link that was clicked",
            "type": {
              "name": "string"
            },
            "optional": false
          }
        ],
        "returns": {
          "description": null,
          "type": {
            "name": "void"
          }
        },
        "description": "The event handler that gets invoked when a navigation link is clicked"
      },
      {
        "name": "pageItemValidation",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "props",
            "type": null
          },
          {
            "name": "propName",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": ""
      },
      "defaultSelected": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The Default selected page",
        "defaultValue": {
          "value": "1",
          "computed": false
        }
      },
      "maxPageLinks": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The maximum number of page links that should be displayed.",
        "defaultValue": {
          "value": "4",
          "computed": false
        }
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": true,
        "description": "The callback handler when a pagination selection changes i.e. either a page selection or the number\n  of items per page selection. The callback gets passed three parameters the page\n  currently selected, the current number of items per page value, and the navigation type selected (i.e. next, prev, first, last)"
      },
      "pageItems": {
        "type": {
          "name": "custom",
          "raw": "function (props, propName) {\n  const pageItems = props[propName];\n  const pageItemsChoices = props.pageItemsChoices;\n\n  if (!isInteger(pageItems) && !(pageItems > 0)) {\n    return new Error(`pageItems should be positive integer`);\n  }\n\n  if (!!pageItemsChoices.length && pageItemsChoices.indexOf(pageItems) === -1) {\n    return new Error(`Invalid value for prop pageItems`);\n  }\n}"
        },
        "required": false,
        "description": "The number of items that are being displayed per page."
      },
      "pageItemsChoices": {
        "type": {
          "name": "arrayOf",
          "value": {
            "name": "number"
          }
        },
        "required": false,
        "description": "The allowed choices for number of items that will be displayed per page.",
        "defaultValue": {
          "value": "[]",
          "computed": false
        }
      },
      "size": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'sm'",
              "computed": false
            },
            {
              "value": "'md'",
              "computed": false
            },
            {
              "value": "'lg'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Set the size (sm | md | lg)",
        "defaultValue": {
          "value": "'md'",
          "computed": false
        }
      },
      "showBookends": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flag to show or hide the 'first' and 'last' page links.",
        "defaultValue": {
          "value": "true",
          "computed": false
        }
      },
      "totalItems": {
        "type": {
          "name": "number"
        },
        "required": true,
        "description": "The total number of items in the result set that is being paginated."
      },
      "ariaLabels": {
        "type": {
          "name": "shape",
          "value": {
            "firstPage": {
              "name": "string",
              "description": "Screen reader label for \"Go to first page\" double left chevron button",
              "required": false
            },
            "lastPage": {
              "name": "string",
              "description": "Screen reader label for \"Go to last page\" double right chevron button",
              "required": false
            },
            "nextPage": {
              "name": "string",
              "description": "Screen reader label for \"Go to next page\" single right chevron button",
              "required": false
            },
            "prevPage": {
              "name": "string",
              "description": "Screen reader label for \"Go to previous page\" single left chevron button",
              "required": false
            },
            "morePages": {
              "name": "string",
              "description": "Screen reader label for \"More pages\" ellipses icon",
              "required": false
            }
          }
        },
        "required": false,
        "description": "Screenreader labels for sub-elements",
        "defaultValue": {
          "value": "{\n  firstPage: 'Go to first page',\n  lastPage: 'Go to last page',\n  nextPage: 'Go to next page',\n  prevPage: 'Go to previous page',\n  morePages: 'More pages'\n}",
          "computed": false
        }
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "ID attribute for the pagination to add it to dropdown"
      }
    }
  }
]