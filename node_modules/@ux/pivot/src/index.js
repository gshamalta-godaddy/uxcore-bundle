import React, { useState, useEffect } from 'react';
import PropTypes from 'prop-types';
import classNames from '@ux/component-utilities/lib/classNames';

// Import child components
import Pivot from './pivot';

/**
 * Pivots class to render multiple pivot components
 *
 * @displayName Pivots
 * @function Pivots
 * @param {ReactProps} props - component props
 * @returns {ReactElement} - React Element
 * @public
 */
export default function Pivots(props) {
  const [selectedIndex, setIndex] = useState(props.selectedIndex);

  /**
   * Sets index based on update
   */
  useEffect(() => {
    setIndex(props.selectedIndex);
  }, [props.selectedIndex]);

  /**
   * @function handlePivotSelected
   * @param {String} index The index of the pivot selected
   * @public
   */
  function handlePivotSelected(index = -1) {
    setIndex(index);
  }

  // Assign so they can be passed to Pivots
  const { grid, design, xsSubtitles, xsGraphics, pivotList } = props;
  // Create pivots from custom data
  const pivotListRender = pivotList.map(
    (data, i) => <Pivot
      { ...data }
      grid={ grid }
      design={ design }
      xsSubtitles={ xsSubtitles }
      key={ `pivot-list-${i}` }
      index={ i }
      onSelected={ () => handlePivotSelected(i) }
      selected={ i === selectedIndex }
    />
  );

  // Create class names
  const classes = classNames(
    'ux-pivot-group',
    'row',
    {
      'ux-pivot-slats': design === 'slats',
      'ux-pivot-xs-graphics': xsGraphics
    }
  );

  return (
    <div role='navigation' className={ classes }>
      { pivotListRender }
    </div>
  );
}

/**
 * Property Definitions
 * @public
 */
Pivots.propTypes = {
  /** default is tile buttons meant for tablet/desktop.
   * `slats` which is the default mobile rendering can be forced for tablet/desktop by passing `slats` as design */
  design: PropTypes.string,
  /** the bootstrap grid specification */
  grid: PropTypes.object,
  /** Array of pivot data structures to generate pivot components */
  pivotList: PropTypes.array,
  /** force graphics to render on mobile */
  xsGraphics: PropTypes.bool,
  /** force subtitles to render on mobile */
  xsSubtitles: PropTypes.bool,
  /**
   * Default selected tile/slat when initially rendered
   * @param {Object} props React props
   * @returns {Error|null} validation
   */
  selectedIndex: (props) => {
    const { selectedIndex, pivotList } = props;
    if (!(selectedIndex && pivotList)) return null;
    const error = (
      typeof selectedIndex !== 'number'
      && 'selectedIndex must be a number'
    ) || (
      (selectedIndex > (pivotList.length - 1) || selectedIndex < -1)
      && 'selectedIndex is invalid'
    );
    return error ? new Error(error) : null;
  }
};

/**
 * Default Properties
 * @public
 */
Pivots.defaultProps = {
  grid: {
    md: 6,
    xl: 4
  },
  selectedIndex: -1
};
