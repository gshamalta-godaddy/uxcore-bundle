import { css } from 'linaria';
import intents from './intents.config.js';
import { mixins } from '@ux/stylevars';

const {
  mediaBreakpointDown,
  mediaBreakpointUp,
  rtlIcon,
  shadow1
} = mixins;

export default css`
:global() {
  @import '~@ux/icon/chevron-right/index.css';
  @import '~@ux/icon/link-arrow/index.css';

  /* Pivot Group */
  /* Button */
  .ux-pivot {
    position: relative;
    display: flex;
    align-content: center;
    justify-content: flex-start;
    flex-direction: column;
    width: 100%;
    padding: calc(${intents.ux.box.density} * 6) calc(${intents.ux.box.density} * 16);
    touch-action: manipulation;
    cursor: pointer;
    user-select: none;
    background-color: ${intents.uxPivot.backgroundColor};
    border-top: 1px solid ${intents.uxPivot.borderColor};
    border-bottom: 1px solid ${intents.uxPivot.borderColor};

    /* Padding (left/right) reduces at tablet */
    ${mediaBreakpointUp('md', `
      padding-right: calc(${intents.ux.box.density} * 7);
      justify-content: center;
    `)}

    &,
    &:hover,
    &:focus {
      color: inherit;
      text-decoration: none;
    }

    &:focus {
      outline: var(--uxp-focus-visible-outline);
    }

    /* Chevron icon */
    .ux-pivot-chevron {
      position: absolute;
      top: 50%;
      right: 0;
      transform: translateY(-50%);
      height: 1.5rem;
      width: 1.5rem;
    }

    .ux-pivot-chevron svg {
      ${rtlIcon()};
      height: 100%;
      width: 100%;
    }

    /* Stop borders from doubling */
    .ux-pivot-group > div + div & {
      margin-top: -1px; /* Border size no rem */
    }
  }

  button.ux-pivot {
    cursor: pointer;
    user-select: none;
    transition: all .2s ease-in-out;

    &,
    &:active {
      &:focus {
        outline: none;
      }
    }

    &.ux-pivot-selected {
      color: inherit;
      text-decoration: none;
    }
  }

  /* Icon - svg, uxicon or img */
  .ux-pivot-graphic {
    position: absolute;
    top: 50%;
    left: calc(${intents.ux.box.density} * 4);
    display: block;
    transform: translateY(-50%);
    height: 1.5rem;
    width: 1.5rem;

    ${mediaBreakpointUp('md', `left: calc(${intents.ux.box.density} * 7) - 0.75rem);`)}

    svg {
      width: 100%;
      height: 100%;
    }

    img {
      max-width: 100%;
      height: auto;
    }
  }

  .ux-pivot-arrow {
    .ux-pivot-graphic {
      color: ${intents.uxPivot.indicator.foregroundColor};
    }
  }

  /*  Title */
  .ux-pivot-title {
    font-family: ${intents.uxPivot.title.fontFamily};
    font-size: ${intents.uxPivot.title.fontSize};
    font-weight: ${intents.uxPivot.title.fontWeight};
    line-height: ${intents.uxPivot.title.lineHeight};
    color: ${intents.uxPivot.title.foregroundColor};
    display: block;
    margin: 0 0 calc(${intents.ux.box.density} * 4);
  }

  /* Subtitle */
  .ux-pivot-subtitle {
    display: block;
    font-family: ${intents.uxPivot.description.fontFamily};
    font-size: ${intents.uxPivot.description.fontSize};
    font-weight: ${intents.uxPivot.description.fontWeight};
    line-height: ${intents.uxPivot.description.lineHeight};
    color: ${intents.uxPivot.description.foregroundColor};
  }

  .ux-pivot-title,
  .ux-pivot-subtitle {
    width: 100%;
  }

  /* MODFIFIERS */

  /* Mobile: Hides icons unless
  .ux-pivot-xs-graphics is applied */
  ${mediaBreakpointDown('xs', `
    .ux-pivot-group:not(.ux-pivot-xs-graphics) {
      .ux-pivot {
        padding-left: calc(${intents.ux.box.density} * 5);
      }
      .ux-pivot-graphic {
        display: none;
      }
    }
  `)}

  /* Tablet+: Shows button style unless
   .ux-pivot-slats is applied */
  ${mediaBreakpointUp('md', `
    .ux-pivot-group:not(.ux-pivot-slats) {
      margin-bottom: calc(${intents.ux.box.density} * -5);

      &.row {
        flex-wrap: wrap;
        &,
        [class*=col-] {
          display: flex;
        }
        [class*=col-] {
          margin-left: -.5px;
        }
      }

      .ux-pivot {
        border-radius: ${intents.uxPivot.borderRadius};
        ${shadow1()};
        border: 1px solid ${intents.uxPivot.borderColor};
        padding: calc(${intents.ux.box.density} * 5);
        margin-bottom: calc(${intents.ux.box.density} * 4);
        align-items: center;
        justify-content: flex-start;
        text-align: center;
        min-height: 12.25rem;

        &:hover,
        &:focus {
          border-color: ${intents.uxPivotHovered.borderColor};
          background-color: ${intents.uxPivotHovered.backgroundColor};
        }

        &:after {
          display: none;
        }
        &.ux-pivot-arrow {
          text-align: left;
          align-items: flex-start;
          justify-content: flex-start;
          .ux-pivot-subtitle {
            margin-bottom: 50px;
          }
          .ux-pivot-graphic {
            color: ${intents.uxPivot.indicator.foregroundColor};
            order: 10;
            margin-right: 0;
            margin-bottom: 0;
            height: 4rem;
            width: 4rem;
            position: absolute;
            bottom: calc(${intents.ux.box.density} * 5);
            top: auto;
            right: calc(${intents.ux.box.density} * 5);
            left: auto;
          }
        }
      }

      button.ux-pivot.ux-pivot-selected {
        border-color: ${intents.uxPivotChosen.borderColor};
        background-color: ${intents.uxPivotChosen.backgroundColor};
      }

      .ux-pivot-graphic {
        position: static;
        transform: none;
        margin: 0 auto calc(${intents.ux.box.density} * 4);
        height: 3rem;
        width: 3rem;
      }
    }
  `)}

  /* make the pivot look disabled */
  .ux-pivot-group .ux-pivot-disabled {
    opacity: .5;
    cursor: not-allowed;
  }

  ${mediaBreakpointDown('sm', `
  .ux-pivot-group {
    .card-block & {
      margin: 0 calc(${intents.ux.box.density} * -5);
      overflow: hidden;
    }

    [class*=col-] {
      padding-left: 0;
      padding-right: 0;
    }
  }
  `)}
}
`;
