"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ProgressStep", {
  enumerable: true,
  get: function () {
    return _progressStep.default;
  }
});
exports.default = void 0;

var _reactComponentValidator = _interopRequireDefault(require("react-component-validator"));

var _progressStep = _interopRequireDefault(require("./progress-step"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const STATUS = _progressStep.default.Status;
/**
* Displays progress in steps.
*
* @displayName Progress Steps
* @class ProgressSteps
* @public
*/

class ProgressSteps extends _react.Component {
  /**
   * Get a step's status name based on current progress value.
   *
   * @param {number} idx Step index
   * @returns {string} status
   * @private
   */
  _getStepStatus(idx) {
    let status = STATUS.Incomplete;

    if (idx < this.props.value) {
      status = STATUS.Complete;
    } else if (idx === this.props.value) {
      status = STATUS.Current;
    }

    return status;
  }
  /**
   * Setup the child step elements.
   *
   * @returns {Array} Step children
   * @private
   */


  get _stepElements() {
    const results = [];

    if (this.props.steps) {
      results.push(...this.props.steps.map((name, i) => {
        const idx = i + 1;
        return /*#__PURE__*/_react.default.createElement(_progressStep.default, {
          key: idx,
          tabIndex: this.props.tabIndex,
          status: this._getStepStatus(idx)
        }, name);
      }));
    }

    if (this.props.children) {
      const offset = results.length + 1;
      results.push(...this.props.children.map((step, i) => {
        const idx = i + offset;
        return /*#__PURE__*/_react.default.cloneElement(step, {
          key: idx,
          tabIndex: this.props.tabIndex,
          status: this._getStepStatus(idx)
        });
      }));
    }

    return results;
  }
  /**
   * Renders the component.
   *
   * @returns {React.DOM} Rendered ProgressSteps element.
   * @private
   */


  render() {
    return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("ul", {
      className: "ux-tabs-wiz-list"
    }, this._stepElements));
  }

}

exports.default = ProgressSteps;
ProgressSteps.Step = _progressStep.default;
ProgressSteps.propTypes = {
  /** Names of each step */
  steps: _propTypes.default.array,

  /** Current value of each step */
  value: _propTypes.default.number,

  /** Child React.Components to be displayed underneath */
  children: (0, _reactComponentValidator.default)([_progressStep.default]),

  /** Developer indicates tabIndex */
  tabIndex: _propTypes.default.oneOf([-1, 0])
};
ProgressSteps.defaultProps = {
  value: 1
};