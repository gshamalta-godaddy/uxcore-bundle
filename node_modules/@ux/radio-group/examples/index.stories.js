/* eslint-disable no-trailing-spaces */
import React, { Component } from 'react';
import { ComponentRenderer } from '@ux/gxsys-page';
import packageJson from '../package.json';

export default class SandboxRadioGroup extends Component {

  introduction() {
    return (
      <p>
        Using checkbox groups is a good option when you want to give your customers the option
        to choose several units within a group of choices.
      </p>
    );
  }

  designDocs() {
    return 'https://github.com/gdcorp-uxp/uxcore2/blob/main/packages/components/radio-group/examples/design/README.md';
  }

  packageInfo() {
    return {
      source: {
        name: packageJson.name,
        link: packageJson.homepage
      },
      version: packageJson.version,
      installCmd: `npm install ${packageJson.name}`,
      platformSupport: {
        android: true,
        ios: true,
        web: true
      },
      license: packageJson.license || 'Proprietary',
      relatedComponents: [
        'Button',
        'Form-Element',
        'Form-Group',
        'Radio'
      ]
    };
  }

  apiDocs() {
    return [
      require('./api/src/index.json')
    ];
  }

  examples() {
    return [{
      jsx: require('!!raw-loader!./default'),
      Component: require('./default'),
      id: 'default-radio-group',
      name: 'Default',
      description: (
        <p>
          The default rendering of a radio group. The input elements are passed in
          as an array through the <code>inputs</code> property. Each object is spread on
          the <a href='https://gxsys.uxp.int.godaddy.com/pages/components/forms/form-element'>form-element</a> component
          with their <code>type</code> forced to <code>radio</code>.
        </p>
      )
    }, {
      jsx: require('!!raw-loader!./inline'),
      Component: require('./inline'),
      id: 'inline-radio-group',
      name: 'Inline',
      description: (
        <p>
          A radio group with inline radio buttons.
        </p>
      )
    }, {
      jsx: require('!!raw-loader!./primary-buttons'),
      Component: require('./primary-buttons'),
      id: 'primary-buttons-radio-group',
      name: 'Buttons',
      description: (
        <p>
          A radio group displayed as buttons. This treatment should typically only be used on mobile.
        </p>
      )
    }];
  }

  render() {
    return <ComponentRenderer
      name='Radio Group'
      component='@ux/radio-group'
      introduction={ this.introduction() }
      designDocs={ this.designDocs() }
      packageInfo={ this.packageInfo() }
      documentation={ this.apiDocs() }
      examples={ this.examples() }
      { ...this.props }
    />;
  }
}
