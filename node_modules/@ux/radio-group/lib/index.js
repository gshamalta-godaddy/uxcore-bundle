"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _fieldset = _interopRequireDefault(require("@ux/fieldset"));

var _formGroup = _interopRequireDefault(require("@ux/form-group"));

var _react = _interopRequireDefault(require("react"));

/**
 * Render a field set with multiple grouped radio elements.
 *
 * @displayName RadioGroup (Web)
 * @class RadioGroup
 * @public
 */
class RadioGroup extends _formGroup.default {
  /**
   * Return type of input element.
   *
   * @returns {string} input type.
   * @private
   */
  get type() {
    return 'radio';
  }
  /**
   * Render the group.
   *
   * @returns {ReactElement} Fieldset element.
   * @private
   */


  render() {
    const props = this.props; //
    // If a non-default design is desired for the component inputs
    // we need to add some attributes to the div we wrap them in.
    //

    const optional = props.design === 'base' ? {} : {
      'className': 'btn-group',
      'data-toggle': 'buttons'
    };
    return /*#__PURE__*/_react.default.createElement(_fieldset.default, {
      proxy: !!props.proxy
    }, /*#__PURE__*/_react.default.createElement("div", (0, _extends2.default)({
      role: "group"
    }, optional), props.children, this.inputs()));
  }

}

exports.default = RadioGroup;