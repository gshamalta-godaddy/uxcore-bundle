"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Spinner;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classnames = _interopRequireDefault(require("classnames"));

const _excluded = ["size", "ariaLabels", "className"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

const DEFAULT_ARIA_LABELS = {
  spinnerName: 'Your content is loading'
};
/**
 * Size of spinner
 * @typedef {"sm" | "md" | "lg"} Size
 */

/**
 * Aria Labels
 * @typedef AriaLabels
 * @property {string} spinnerName - Screen reader label for spinner
 */

/**
 * Component Props
 * @typedef {Object} Props
 * @property {string} className - Classes to be applied to the spinner
 * @property {Size} size - Defines the size of the spinner
 * @property {AriaLabels} ariaLabels - Screenreader labels for sub-elements
 */

/**
 * Display a spinner.
 * @displayName Spinner (Web)
 * @param {Props} props Component Props
 * @returns {React.ReactElement} Component
 */

function Spinner(_ref) {
  let {
    size,
    ariaLabels,
    className
  } = _ref,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  // style is explicitly omitted, do not override.
  delete rest.style;
  const classes = (0, _classnames.default)('ux-spinner', className, {
    [`ux-spinner-${size}`]: size
  });
  return /*#__PURE__*/_react.default.createElement("svg", (0, _extends2.default)({
    className: classes,
    "aria-label": ariaLabels.spinnerName,
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 72 72"
  }, rest), /*#__PURE__*/_react.default.createElement("circle", {
    className: "bg-spinner",
    cx: "36",
    cy: "36",
    r: "31",
    fill: "none",
    startOffset: "0"
  }), /*#__PURE__*/_react.default.createElement("circle", {
    className: "fg-spinner",
    cx: "36",
    cy: "36",
    r: "31",
    fill: "none"
  }));
}

Spinner.propTypes = {
  /** Classes to be applied to the spinner */
  className: _propTypes.default.string,

  /** Defines the size of the spinner */
  size: _propTypes.default.PropTypes.oneOf(['sm', 'md', 'lg']).isRequired,

  /** Screenreader labels for sub-elements */
  ariaLabels: _propTypes.default.shape({
    /** Screen reader label for spinner */
    spinnerName: _propTypes.default.string
  })
};
/**
 * Default properties.
 *
 * @type {Object}
 * @private
 */

Spinner.defaultProps = _objectSpread({
  size: 'md',
  // Default size.
  ariaLabels: DEFAULT_ARIA_LABELS
}, {
  className: 'spin-center'
});