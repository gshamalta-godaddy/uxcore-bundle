"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buttonGet = buttonGet;
exports.buttonPadding = buttonPadding;
exports.buttonPaddingCanvas = buttonPaddingCanvas;
exports.buttonPaddingDefaults = buttonPaddingDefaults;
exports.buttonPaddingDefaultsSM = buttonPaddingDefaultsSM;
exports.buttonPaddingSm = buttonPaddingSm;

var _polished = require("polished");

var _variables = _interopRequireDefault(require("../variables"));

function buttonGet(variant, property) {
  return _variables.default.buttons[variant][property];
}

function buttonPadding(paddingY, paddingX) {
  return `${paddingY} ${paddingX}`;
}

function buttonPaddingSm(paddingY, paddingX) {
  return `${(0, _polished.math)(`${paddingY} + 1`)} ${paddingX} ${(0, _polished.math)(`${paddingY} - 1`)}`;
}

function buttonPaddingDefaults(paddingY, paddingX, btnBorderDefaults) {
  return `${(0, _polished.math)(`${paddingY} - ${btnBorderDefaults}`)} ${(0, _polished.math)(`${paddingX} - ${btnBorderDefaults}`)}`;
}

function buttonPaddingDefaultsSM(paddingY, paddingX, btnBorderDefaults) {
  // eslint-disable-next-line max-len
  return `${(0, _polished.math)(`${paddingY} - ${btnBorderDefaults} + 1`)} ${(0, _polished.math)(`${paddingX} - ${btnBorderDefaults}`)} ${(0, _polished.math)(`${paddingY} - ${btnBorderDefaults} - 1`)}`;
}

function buttonPaddingCanvas(paddingY, paddingX) {
  return `${paddingY} ${paddingX}`;
}