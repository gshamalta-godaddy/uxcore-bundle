"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.breakpointInfix = breakpointInfix;
exports.breakpointMax = breakpointMax;
exports.breakpointMin = breakpointMin;
exports.breakpointNext = breakpointNext;
exports.mediaBreakpointDown = mediaBreakpointDown;
exports.mediaBreakpointUp = mediaBreakpointUp;

var _polished = require("polished");

var _variables = require("../variables/_variables");

function breakpointNext(name, breakpoints) {
  const breakpointNames = Object.keys(breakpoints);
  const n = breakpointNames.indexOf(name);
  return n < breakpointNames.length - 1 ? breakpointNames[n + 1] : null;
}

function breakpointMin(name, breakpoints) {
  const min = parseInt((0, _polished.stripUnit)(breakpoints[name]), 10);
  return min !== 0 ? breakpoints[name] : null;
}

function breakpointMax(name, breakpoints) {
  const next = breakpointNext(name, breakpoints);
  return next ? (0, _polished.math)(`${breakpointMin(next, breakpoints)} - 1px`) : null;
}

function breakpointInfix(name, breakpoints) {
  return breakpointMin(name, breakpoints) == null ? '' : `-${name}`;
}

function mediaBreakpointUp(name, content) {
  const min = breakpointMin(name, _variables.gridBreakpoints);

  if (min) {
    return `
      @media (min-width: ${min}) {
        ${content}
      }
    `;
  }

  return `${content}`;
}

function mediaBreakpointDown(name, content) {
  const max = breakpointMax(name, _variables.gridBreakpoints);

  if (max) {
    return `
      @media (max-width: ${max}) {
        ${content}
      }
    `;
  }

  return `${content}`;
}