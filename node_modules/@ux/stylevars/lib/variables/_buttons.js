"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buttons = exports.btnTextTransform = exports.btnPaddingYSm = exports.btnPaddingYPill = exports.btnPaddingYLg = exports.btnPaddingYDefaultSm = exports.btnPaddingY = exports.btnPaddingXSm = exports.btnPaddingXPill = exports.btnPaddingXLg = exports.btnPaddingX = exports.btnPaddingSm = exports.btnPaddingLg = exports.btnPaddingDefaultsSm = exports.btnPaddingDefaultsLg = exports.btnPaddingDefaults = exports.btnPaddingCanvas = exports.btnPadding = exports.btnMerchPaddingYSm = exports.btnMerchPaddingYLg = exports.btnMerchPaddingY = exports.btnMerchPaddingXSm = exports.btnMerchPaddingXLg = exports.btnMerchPaddingX = exports.btnMerchPaddingHoverXSm = exports.btnMerchPaddingHoverXLg = exports.btnMerchPaddingHoverX = exports.btnMerchHeightSm = exports.btnMerchHeightLg = exports.btnMerchHeight = exports.btnMerchAfterSize = exports.btnMerchAfter = exports.btnLineHeightSm = exports.btnLineHeightPill = exports.btnLineHeightLg = exports.btnLineHeight = exports.btnHeightSm = exports.btnHeightLg = exports.btnHeight = exports.btnFontSizeSm = exports.btnFontSizePill = exports.btnFontSizeLg = exports.btnFontSize = exports.btnDisabledOpacityOn = exports.btnDisabledColorsOn = exports.btnColorDisabled = exports.btnBoxShadowDisabled = exports.btnBorderWidthSm = exports.btnBorderWidthMerchSec = exports.btnBorderWidthMerch = exports.btnBorderWidthLg = exports.btnBorderWidthDefaults = exports.btnBorderWidthCanvas = exports.btnBorderWidthBottomSm = exports.btnBorderWidthBottomLg = exports.btnBorderWidthBottom = exports.btnBorderWidth = exports.btnBorderStylePill = exports.btnBorderStyleMerch = exports.btnBorderStyleFocus = exports.btnBorderDisabled = exports.btnBgDisabled = exports._var = void 0;

var _polished = require("polished");

var _lodash = _interopRequireDefault(require("lodash.merge"));

var _button = require("../functions/button");

var _palette = _interopRequireDefault(require("../functions/palette"));

var vars = _interopRequireWildcard(require("./_variables"));

var _buttons = _interopRequireDefault(require("./pl/buttons"));

var _buttons2 = _interopRequireDefault(require("./palette-build/buttons"));

var _uxvars = require("./uxvars");

var _overrides = require("./overrides");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const _var = (varName, fallback) => varName in _overrides.variables ? _overrides.variables[varName] : fallback;

exports._var = _var;
const defautButtons = {
  'primary': {
    'color': (0, _palette.default)('black', 'base', 'contrast'),
    'bg': (0, _palette.default)('black'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('gray', 'midrange', 'contrast'),
    'bg-hover': (0, _palette.default)('gray', 'midrange'),
    'border-hover': (0, _palette.default)('gray', 'midrange'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o'),
    'border-active': (0, _palette.default)('primary-o'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('gray', 'midrange')
  },
  'success': {
    'color': (0, _palette.default)('black', 'base', 'contrast'),
    'bg': (0, _palette.default)('black'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('gray', 'midrange', 'contrast'),
    'bg-hover': (0, _palette.default)('gray', 'midrange'),
    'border-hover': (0, _palette.default)('gray', 'midrange'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o'),
    'border-active': (0, _palette.default)('primary-o'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('gray', 'midrange')
  },
  'info': {
    'color': (0, _palette.default)('black', 'base', 'contrast'),
    'bg': (0, _palette.default)('black'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('gray', 'midrange', 'contrast'),
    'bg-hover': (0, _palette.default)('gray', 'midrange'),
    'border-hover': (0, _palette.default)('gray', 'midrange'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o'),
    'border-active': (0, _palette.default)('primary-o'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('gray', 'midrange')
  },
  'warning': {
    'color': (0, _palette.default)('black', 'base', 'contrast'),
    'bg': (0, _palette.default)('black'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('gray', 'midrange', 'contrast'),
    'bg-hover': (0, _palette.default)('gray', 'midrange'),
    'border-hover': (0, _palette.default)('gray', 'midrange'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o'),
    'border-active': (0, _palette.default)('primary-o'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('gray', 'midrange')
  },
  'danger': {
    'color': (0, _palette.default)('danger', 'midrange', 'contrast'),
    'bg': (0, _palette.default)('danger', 'midrange'),
    'border': (0, _palette.default)('danger', 'midrange'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('danger', 'base', 'contrast'),
    'bg-hover': (0, _palette.default)('danger'),
    'border-hover': (0, _palette.default)('danger'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('danger', 'dark', 'contrast'),
    'bg-active': (0, _palette.default)('danger', 'dark'),
    'border-active': (0, _palette.default)('danger', 'dark'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('danger')
  },
  'purchase': {
    'color': (0, _palette.default)('black', 'base', 'contrast'),
    'bg': (0, _palette.default)('black'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('gray', 'midrange', 'contrast'),
    'bg-hover': (0, _palette.default)('gray', 'midrange'),
    'border-hover': (0, _palette.default)('gray', 'midrange'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o'),
    'border-active': (0, _palette.default)('primary-o'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('gray', 'midrange')
  },
  'feature': {
    'color': (0, _palette.default)('black', 'base', 'contrast'),
    'bg': (0, _palette.default)('black'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('gray', 'midrange', 'contrast'),
    'bg-hover': (0, _palette.default)('gray', 'midrange'),
    'border-hover': (0, _palette.default)('gray', 'midrange'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o'),
    'border-active': (0, _palette.default)('primary-o'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('gray', 'midrange')
  },
  'canvas': {
    'color': (0, _palette.default)('black', 'base'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('gray', 'light'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('black', 'base'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('black', 'base'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary'),
    'bg-active': (0, _palette.default)('white'),
    'border-active': (0, _palette.default)('primary'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('primary')
  },
  'default': {
    'color': (0, _palette.default)('white', 'base', 'contrast'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('primary-o', 'midrange'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('black'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o', 'base'),
    'border-active': (0, _palette.default)('primary-o', 'base'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('black')
  },
  'default-dark': {
    'color': (0, _palette.default)('black', 'dark'),
    'bg': 'transparent',
    'border': (0, _palette.default)('black', 'dark'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('black', 'dark', 'contrast'),
    'bg-hover': (0, _palette.default)('black', 'dark'),
    'border-hover': (0, _palette.default)('black', 'dark'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('black', 'dark', 'contrast'),
    'bg-active': (0, _palette.default)('black', 'dark'),
    'border-active': (0, _palette.default)('black', 'dark'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('black', 'dark')
  },
  'default-light': {
    'color': (0, _palette.default)('white', 'base', 'contrast'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('white'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('white', 'base', 'contrast'),
    'bg-hover': `rgba(${(0, _palette.default)('white')}, 0.8)`,
    'border-hover': 'transparent',
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o'),
    'bg-active': (0, _palette.default)('white'),
    'border-active': (0, _palette.default)('white'),
    'box-shadow-active': false,
    'border-focus': 'transparent'
  },
  'default-light-secondary': {
    'color': (0, _palette.default)('white'),
    'bg': 'transparent',
    'border': (0, _palette.default)('white'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('white', 'base', 'contrast'),
    'bg-hover': `rgba(${(0, _palette.default)('white')}, 0.8)`,
    'border-hover': 'transparent',
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o'),
    'bg-active': (0, _palette.default)('white'),
    'border-active': (0, _palette.default)('white'),
    'box-shadow-active': false,
    'border-focus': 'transparent'
  },
  'default-primary': {
    'color': (0, _palette.default)('white', 'base', 'contrast'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('primary-o', 'midrange'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('black'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o', 'base'),
    'border-active': (0, _palette.default)('primary-o', 'base'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('black')
  },
  'default-purchase': {
    'color': (0, _palette.default)('white', 'base', 'contrast'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('primary-o', 'midrange'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('black'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o', 'base'),
    'border-active': (0, _palette.default)('primary-o', 'base'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('black')
  },
  'default-info': {
    'color': (0, _palette.default)('white', 'base', 'contrast'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('primary-o', 'midrange'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('black'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o', 'base'),
    'border-active': (0, _palette.default)('primary-o', 'base'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('black')
  },
  'default-warning': {
    'color': (0, _palette.default)('white', 'base', 'contrast'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('primary-o', 'midrange'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('black'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o', 'base'),
    'border-active': (0, _palette.default)('primary-o', 'base'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('black')
  },
  'default-danger': {
    'color': (0, _palette.default)('white', 'base', 'contrast'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('primary-o', 'midrange'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('black'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o', 'base'),
    'border-active': (0, _palette.default)('primary-o', 'base'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('black')
  },
  'default-success': {
    'color': (0, _palette.default)('white', 'base', 'contrast'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('primary-o', 'midrange'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('black'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o', 'base'),
    'border-active': (0, _palette.default)('primary-o', 'base'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('black')
  },
  'default-feature': {
    'color': (0, _palette.default)('white', 'base', 'contrast'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('primary-o', 'midrange'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('black'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o', 'base'),
    'border-active': (0, _palette.default)('primary-o', 'base'),
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('black')
  },
  'link': {
    'color': (0, _palette.default)('primary-o', 'midrange'),
    'bg': 'transparent',
    'border': 'transparent',
    'box-shadow': false,
    'color-hover': (0, _palette.default)('primary-o', 'midrange'),
    'bg-hover': (0, _palette.default)('primary-o', 'pastel'),
    'border-hover': 'transparent',
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o', 'base', 'contrast'),
    'bg-active': (0, _palette.default)('primary-o'),
    'border-active': (0, _palette.default)('primary-o'),
    'box-shadow-active': false,
    'border-focus': 'transparent'
  },
  'link-light': {
    'color': (0, _palette.default)('white'),
    'bg': 'transparent',
    'border': 'transparent',
    'box-shadow': false,
    'color-hover': (0, _palette.default)('primary-o', 'midrange'),
    'bg-hover': `rgba(${(0, _palette.default)('white')}, 0.8)`,
    'border-hover': 'transparent',
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('primary-o'),
    'bg-active': (0, _palette.default)('white'),
    'border-active': (0, _palette.default)('white'),
    'box-shadow-active': false,
    'border-focus': 'transparent'
  },
  'merch': {
    'color': (0, _palette.default)('white'),
    'bg': (0, _palette.default)('black'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('white'),
    'bg-hover': (0, _palette.default)('black'),
    'border-hover': (0, _palette.default)('black'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('white'),
    'bg-active': `rgba(${(0, _palette.default)('black')}, 0.8)`,
    'border-active': (0, _palette.default)('black'),
    'box-shadow-active': false,
    'border-focus': 'transparent'
  },
  'merch-sec': {
    'color': (0, _palette.default)('black'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('black'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('black'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('black'),
    'box-shadow-hover': false,
    'color-active': `rgba(${(0, _palette.default)('black')}, 0.8)`,
    'bg-active': (0, _palette.default)('white'),
    'border-active': `rgba(${(0, _palette.default)('black')}, 0.8)`,
    'box-shadow-active': false,
    'border-focus': (0, _palette.default)('black')
  },
  'merch-light': {
    'color': (0, _palette.default)('black'),
    'bg': (0, _palette.default)('white'),
    'border': (0, _palette.default)('white'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('black'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('white'),
    'box-shadow-hover': false,
    'color-active': (0, _palette.default)('black'),
    'bg-active': `rgba(${(0, _palette.default)('white')}, 0.8)`,
    'border-active': (0, _palette.default)('white'),
    'box-shadow-active': false,
    'border-focus': 'transparent'
  },
  'merch-sec-light': {
    'color': (0, _palette.default)('white'),
    'bg': 'transparent',
    'border': (0, _palette.default)('white'),
    'box-shadow': false,
    'color-hover': (0, _palette.default)('black'),
    'bg-hover': (0, _palette.default)('white'),
    'border-hover': (0, _palette.default)('white'),
    'box-shadow-hover': false,
    'color-active': `rgba(${(0, _palette.default)('black')}, 0.8)`,
    'bg-active': `rgba(${(0, _palette.default)('white')}, 0.8)`,
    'border-active': 'transparent',
    'box-shadow-active': false,
    'border-focus': 'transparent'
  }
};
const buttons = (0, _lodash.default)(defautButtons, _uxvars.uxcoreLabel === 'pl' || _uxvars.uxcorePaletteBuild ? _buttons2.default : {}, _uxvars.uxcoreLabel === 'pl' ? _buttons.default : {}, _overrides.variables.brandButtons || {});
exports.buttons = buttons;

const btnHeight = _var('btnHeight', '44px');

exports.btnHeight = btnHeight;

const btnHeightLg = _var('btnHeightLg', '50px');

exports.btnHeightLg = btnHeightLg;

const btnHeightSm = _var('btnHeightSm', '32px');

exports.btnHeightSm = btnHeightSm;

const btnMerchHeight = _var('btnMerchHeight', '52px');

exports.btnMerchHeight = btnMerchHeight;

const btnMerchHeightLg = _var('btnMerchHeightLg', '64px');

exports.btnMerchHeightLg = btnMerchHeightLg;

const btnMerchHeightSm = _var('btnMerchHeightSm', '40px');

exports.btnMerchHeightSm = btnMerchHeightSm;

const btnMerchPaddingY = _var('btnMerchPaddingY', '14px');

exports.btnMerchPaddingY = btnMerchPaddingY;

const btnMerchPaddingYLg = _var('btnMerchPaddingYLg', '20px');

exports.btnMerchPaddingYLg = btnMerchPaddingYLg;

const btnMerchPaddingYSm = _var('btnMerchPaddingYSm', '8px');

exports.btnMerchPaddingYSm = btnMerchPaddingYSm;

const btnMerchPaddingX = _var('btnMerchPaddingX', '48px');

exports.btnMerchPaddingX = btnMerchPaddingX;

const btnMerchPaddingXLg = _var('btnMerchPaddingXLg', '64px');

exports.btnMerchPaddingXLg = btnMerchPaddingXLg;

const btnMerchPaddingXSm = _var('btnMerchPaddingXSm', '32px');

exports.btnMerchPaddingXSm = btnMerchPaddingXSm;

const btnMerchPaddingHoverX = _var('btnMerchPaddingHoverX', '34px');

exports.btnMerchPaddingHoverX = btnMerchPaddingHoverX;

const btnMerchPaddingHoverXLg = _var('btnMerchPaddingHoverXLg', '48px');

exports.btnMerchPaddingHoverXLg = btnMerchPaddingHoverXLg;

const btnMerchPaddingHoverXSm = _var('btnMerchPaddingHoverXSm', '18px');

exports.btnMerchPaddingHoverXSm = btnMerchPaddingHoverXSm;

const btnFontSize = _var('btnFontSize', (0, _polished.rem)(vars.fontSizeRoot));

exports.btnFontSize = btnFontSize;

const btnFontSizeLg = _var('btnFontSizeLg', (0, _polished.rem)(`${(0, _polished.math)(`${vars.fontSizeRoot} + 4`)}`));

exports.btnFontSizeLg = btnFontSizeLg;

const btnFontSizeSm = _var('btnFontSizeSm', (0, _polished.rem)(`${(0, _polished.math)(`${vars.fontSizeRoot} - 2`)}`));

exports.btnFontSizeSm = btnFontSizeSm;

const btnFontSizePill = _var('btnFontSizePill', (0, _polished.rem)(`${(0, _polished.math)(`${vars.fontSizeRoot} - 4`)}`));

exports.btnFontSizePill = btnFontSizePill;

const btnLineHeight = _var('btnLineHeight', vars.lineHeight);

exports.btnLineHeight = btnLineHeight;

const btnLineHeightLg = _var('btnLineHeightLg', vars.lineHeight);

exports.btnLineHeightLg = btnLineHeightLg;

const btnLineHeightSm = _var('btnLineHeightSm', vars.lineHeight);

exports.btnLineHeightSm = btnLineHeightSm;

const btnLineHeightPill = _var('btnLineHeightPill', (0, _polished.math)(`${btnFontSizePill} * 0.25`));

exports.btnLineHeightPill = btnLineHeightPill;

const btnBorderWidthBottom = _var('btnBorderWidthBottom', '0');

exports.btnBorderWidthBottom = btnBorderWidthBottom;

const btnBorderWidthBottomLg = _var('btnBorderWidthBottomLg', '0');

exports.btnBorderWidthBottomLg = btnBorderWidthBottomLg;

const btnBorderWidthBottomSm = _var('btnBorderWidthBottomSm', '0');

exports.btnBorderWidthBottomSm = btnBorderWidthBottomSm;

const btnBorderWidth = _var('btnBorderWidth', '0');

exports.btnBorderWidth = btnBorderWidth;

const btnBorderWidthLg = _var('btnBorderWidthLg', '0');

exports.btnBorderWidthLg = btnBorderWidthLg;

const btnBorderWidthSm = _var('btnBorderWidthSm', '0');

exports.btnBorderWidthSm = btnBorderWidthSm;

const btnBorderWidthDefaults = _var('btnBorderWidthDefaults', '2px');

exports.btnBorderWidthDefaults = btnBorderWidthDefaults;

const btnBorderWidthCanvas = _var('btnBorderWidthCanvas', '0');

exports.btnBorderWidthCanvas = btnBorderWidthCanvas;

const btnBorderWidthMerch = _var('btnBorderWidthMerch', '0');

exports.btnBorderWidthMerch = btnBorderWidthMerch;

const btnBorderWidthMerchSec = _var('btnBorderWidthMerchSec', '2px');

exports.btnBorderWidthMerchSec = btnBorderWidthMerchSec;

const btnBorderStyleMerch = _var('btnBorderStyleMerch', 'solid');

exports.btnBorderStyleMerch = btnBorderStyleMerch;

const btnBorderStyleFocus = _var('btnBorderStyleFocus', 'solid');

exports.btnBorderStyleFocus = btnBorderStyleFocus;

const btnBorderStylePill = _var('btnBorderStylePill', 'solid'); // eslint-disable-next-line


exports.btnBorderStylePill = btnBorderStylePill;

const btnMerchAfter = _var('btnMerchAfter', '\e477');

exports.btnMerchAfter = btnMerchAfter;

const btnMerchAfterSize = _var('btnMerchAfterSize', '20px'); // Padding called in button-padding function
// in functions/overrides/_buttons.scss
// Left right padding


exports.btnMerchAfterSize = btnMerchAfterSize;

const btnPaddingX = _var('btnPaddingX', '24px');

exports.btnPaddingX = btnPaddingX;

const btnPaddingXLg = _var('btnPaddingXLg', '32px');

exports.btnPaddingXLg = btnPaddingXLg;

const btnPaddingXSm = _var('btnPaddingXSm', '12px');

exports.btnPaddingXSm = btnPaddingXSm;

const btnPaddingXPill = _var('btnPaddingXPill', btnPaddingXSm); // Starting top padding


exports.btnPaddingXPill = btnPaddingXPill;

const btnPaddingY = _var('btnPaddingY', '10px');

exports.btnPaddingY = btnPaddingY;

const btnPaddingYLg = _var('btnPaddingYLg', '13px');

exports.btnPaddingYLg = btnPaddingYLg;

const btnPaddingYSm = _var('btnPaddingYSm', '4px');

exports.btnPaddingYSm = btnPaddingYSm;

const btnPaddingYPill = _var('btnPaddingYPill', '5px');

exports.btnPaddingYPill = btnPaddingYPill;

const btnPaddingYDefaultSm = _var('btnPaddingYDefaultSm', btnPaddingYSm); // Calculate padding off the starting top padding, so text tops align for all btn styles


exports.btnPaddingYDefaultSm = btnPaddingYDefaultSm;

const btnPadding = _var('btnPadding', (0, _button.buttonPadding)(btnPaddingY, btnPaddingX));

exports.btnPadding = btnPadding;

const btnPaddingLg = _var('btnPaddingLg', (0, _button.buttonPadding)(btnPaddingYLg, btnPaddingXLg));

exports.btnPaddingLg = btnPaddingLg;

const btnPaddingSm = _var('btnPaddingSm', (0, _button.buttonPaddingSm)(btnPaddingYSm, btnPaddingXSm));

exports.btnPaddingSm = btnPaddingSm;

const btnPaddingDefaults = _var('btnPaddingDefaults', (0, _button.buttonPaddingDefaults)(btnPaddingY, btnPaddingX, btnBorderWidthDefaults));

exports.btnPaddingDefaults = btnPaddingDefaults;

const btnPaddingDefaultsLg = _var('btnPaddingDefaultsLg', (0, _button.buttonPaddingDefaults)(btnPaddingYLg, btnPaddingXLg, btnBorderWidthDefaults));

exports.btnPaddingDefaultsLg = btnPaddingDefaultsLg;

const btnPaddingDefaultsSm = _var('btnPaddingDefaultsSm', (0, _button.buttonPaddingDefaultsSM)(btnPaddingYDefaultSm, btnPaddingXSm, btnBorderWidthDefaults));

exports.btnPaddingDefaultsSm = btnPaddingDefaultsSm;

const btnPaddingCanvas = _var('btnPaddingCanvas', (0, _button.buttonPaddingCanvas)(btnPaddingY, btnPaddingX));

exports.btnPaddingCanvas = btnPaddingCanvas;

const btnTextTransform = _var('btnTextTransform', 'none');

exports.btnTextTransform = btnTextTransform;

const btnDisabledOpacityOn = _var('btnDisabledOpacityOn', true);

exports.btnDisabledOpacityOn = btnDisabledOpacityOn;

const btnDisabledColorsOn = _var('btnDisabledColorsOn', false);

exports.btnDisabledColorsOn = btnDisabledColorsOn;

const btnColorDisabled = _var('btnColorDisabled', (0, _palette.default)('gray'));

exports.btnColorDisabled = btnColorDisabled;

const btnBgDisabled = _var('btnBgDisabled', 'transparent');

exports.btnBgDisabled = btnBgDisabled;

const btnBorderDisabled = _var('btnBorderDisabled', (0, _palette.default)('gray', 'light'));

exports.btnBorderDisabled = btnBorderDisabled;

const btnBoxShadowDisabled = _var('btnBoxShadowDisabled', false);

exports.btnBoxShadowDisabled = btnBoxShadowDisabled;