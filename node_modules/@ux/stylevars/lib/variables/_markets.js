"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.marketGroups = exports.marketFonts = exports.brandFonts = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _overrides = require("./overrides");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

const brandFonts = _objectSpread({
  'base': {
    'family': '"gdsherpa", Helvetica, Arial, sans-serif',
    'weight': 500,
    'uppercase-safe': true
  },
  'primary-bold': {
    family: '"gdsherpa", Helvetica, Arial, sans-serif',
    weight: 700
  },
  'marketing': {
    family: '"gd-sage", "Times New Roman", serif',
    weight: 700
  },
  'sage': {
    family: '"gd-sage", "Times New Roman", serif',
    weight: 400
  },
  'sage-bold': {
    family: '"gd-sage", "Times New Roman", serif',
    weight: 700
  }
}, _overrides.fonts && _overrides.fonts['brand-fonts'] || {});

exports.brandFonts = brandFonts;
const marketFonts = {
  'generic': {
    'base': {
      'family': 'Helvetica, Arial, sans-serif',
      'weight': 'normal',
      'uppercase-safe': true
    },
    'primary-bold': {
      family: 'Helvetica, Arial, sans-serif',
      weight: 'bold'
    },
    'marketing': {
      family: 'Helvetica, Arial, sans-serif',
      weight: 'bold'
    }
  },
  'cn-traditional': {
    'base': {
      family: '"微軟正黑體", "Microsoft JhengHei", "Hiragino Sans GB", sans-serif',
      weight: 'normal'
    },
    'primary-bold': {
      family: '"微軟正黑體", "Microsoft JhengHei", "Hiragino Sans GB", sans-serif',
      weight: 'bold'
    }
  },
  'cn-simplified': {
    'base': {
      family: '"微软雅黑", "Microsoft YaHei", "Hiragino Sans GB", sans-serif',
      weight: 'normal'
    },
    'primary-bold': {
      family: '"微软雅黑", "Microsoft YaHei", "Hiragino Sans GB", sans-serif',
      weight: 'bold'
    }
  },
  'ja': {
    'base': {
      family: '"Hiragino Kaku Gothic ProN", "ヒラギノ角ゴ ProN", "メイリオ", Meiryo, sans-serif',
      weight: 'normal'
    },
    'primary-bold': {
      family: '"Hiragino Kaku Gothic ProN", "ヒラギノ角ゴ ProN", "メイリオ", Meiryo, sans-serif',
      weight: 'bold'
    }
  },
  'ko': {
    'base': {
      family: '"맑은 고딕", "Malgun Gothic", "Apple SD Gothic Neo", AppleGothic, "굴림", Gulim, "돋움", Dotum, sans-serif',
      weight: 'normal'
    },
    'primary-bold': {
      family: '"맑은 고딕", "Malgun Gothic", "Apple SD Gothic Neo", AppleGothic, "굴림", Gulim, "돋움", Dotum, sans-serif',
      weight: 'bold'
    }
  },
  'mangal': {
    'base': {
      family: 'Mangal, "Devanagari Sangam MN", Arial, sans-serif',
      weight: 'normal'
    },
    'primary-bold': {
      family: 'Mangal, "Devanagari Sangam MN", Arial, sans-serif',
      weight: 'bold'
    }
  },
  'ta': {
    'base': {
      family: 'Latha, "Tamil Sangam MN", Arial, sans-serif',
      weight: 'normal'
    },
    'primary-bold': {
      family: 'Latha, "Tamil Sangam MN", Arial, sans-serif',
      weight: 'bold'
    }
  },
  'th': {
    'base': {
      family: 'Thonburi, Leelawadee, Tahoma, sans-serif',
      weight: 'normal'
    },
    'primary-bold': {
      family: 'Thonburi, Leelawadee, Tahoma, sans-serif',
      weight: 'bold'
    }
  },
  'brand': brandFonts
};
exports.marketFonts = marketFonts;

const marketGroups = _objectSpread({
  hi: 'mangal',
  // Hindi
  mr: 'mangal',
  // Marathi
  el: 'generic',
  // Greek
  en: {
    in: 'generic' // India - English

  },
  vi: 'generic',
  // Vietnamese
  pt: {
    br: 'generic' // Portuguese

  },
  ru: 'generic',
  // Russian
  ta: 'generic',
  // Tamil
  uk: 'generic',
  // Ukrainian
  zh: {
    cn: 'cn-simplified',
    // China
    sg: 'cn-simplified',
    // Singapore
    hk: 'cn-traditional',
    // Hong Kong
    tw: 'cn-traditional' // Taiwan

  },
  ar: 'generic'
}, _overrides.fonts && _overrides.fonts['palette-market-groups'] || {});

exports.marketGroups = marketGroups;