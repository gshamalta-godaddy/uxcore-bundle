import { rem, math } from 'polished';
import merge from 'lodash.merge';
import {
  buttonPadding,
  buttonPaddingSm,
  buttonPaddingDefaults,
  buttonPaddingDefaultsSM,
  buttonPaddingCanvas
} from '../functions/button';
import palette from '../functions/palette';
import * as vars from './_variables';
import plButtons from './pl/buttons';
import paletteButtons from './palette-build/buttons';
import { uxcoreLabel, uxcorePaletteBuild } from './uxvars';
import { variables as overrides } from './overrides';

export const _var = (varName, fallback) => varName in overrides ? overrides[varName] : fallback;

const defautButtons = {
  'primary': {
    'color': palette('black', 'base', 'contrast'),
    'bg': palette('black'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('gray', 'midrange', 'contrast'),
    'bg-hover': palette('gray', 'midrange'),
    'border-hover': palette('gray', 'midrange'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o'),
    'border-active': palette('primary-o'),
    'box-shadow-active': false,

    'border-focus': palette('gray', 'midrange')
  },
  'success': {
    'color': palette('black', 'base', 'contrast'),
    'bg': palette('black'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('gray', 'midrange', 'contrast'),
    'bg-hover': palette('gray', 'midrange'),
    'border-hover': palette('gray', 'midrange'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o'),
    'border-active': palette('primary-o'),
    'box-shadow-active': false,

    'border-focus': palette('gray', 'midrange')
  },
  'info': {
    'color': palette('black', 'base', 'contrast'),
    'bg': palette('black'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('gray', 'midrange', 'contrast'),
    'bg-hover': palette('gray', 'midrange'),
    'border-hover': palette('gray', 'midrange'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o'),
    'border-active': palette('primary-o'),
    'box-shadow-active': false,

    'border-focus': palette('gray', 'midrange')
  },
  'warning': {
    'color': palette('black', 'base', 'contrast'),
    'bg': palette('black'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('gray', 'midrange', 'contrast'),
    'bg-hover': palette('gray', 'midrange'),
    'border-hover': palette('gray', 'midrange'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o'),
    'border-active': palette('primary-o'),
    'box-shadow-active': false,

    'border-focus': palette('gray', 'midrange')
  },
  'danger': {
    'color': palette('danger', 'midrange', 'contrast'),
    'bg': palette('danger', 'midrange'),
    'border': palette('danger', 'midrange'),
    'box-shadow': false,

    'color-hover': palette('danger', 'base', 'contrast'),
    'bg-hover': palette('danger'),
    'border-hover': palette('danger'),
    'box-shadow-hover': false,

    'color-active': palette('danger', 'dark', 'contrast'),
    'bg-active': palette('danger', 'dark'),
    'border-active': palette('danger', 'dark'),
    'box-shadow-active': false,

    'border-focus': palette('danger')
  },
  'purchase': {
    'color': palette('black', 'base', 'contrast'),
    'bg': palette('black'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('gray', 'midrange', 'contrast'),
    'bg-hover': palette('gray', 'midrange'),
    'border-hover': palette('gray', 'midrange'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o'),
    'border-active': palette('primary-o'),
    'box-shadow-active': false,

    'border-focus': palette('gray', 'midrange')
  },
  'feature': {
    'color': palette('black', 'base', 'contrast'),
    'bg': palette('black'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('gray', 'midrange', 'contrast'),
    'bg-hover': palette('gray', 'midrange'),
    'border-hover': palette('gray', 'midrange'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o'),
    'border-active': palette('primary-o'),
    'box-shadow-active': false,

    'border-focus': palette('gray', 'midrange')
  },
  'canvas': {
    'color': palette('black', 'base'),
    'bg': palette('white'),
    'border': palette('gray', 'light'),
    'box-shadow': false,

    'color-hover': palette('black', 'base'),
    'bg-hover': palette('white'),
    'border-hover': palette('black', 'base'),
    'box-shadow-hover': false,

    'color-active': palette('primary'),
    'bg-active': palette('white'),
    'border-active': palette('primary'),
    'box-shadow-active': false,

    'border-focus': palette('primary')
  },
  'default': {
    'color': palette('white', 'base', 'contrast'),
    'bg': palette('white'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('primary-o', 'midrange'),
    'bg-hover': palette('white'),
    'border-hover': palette('black'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o', 'base'),
    'border-active': palette('primary-o', 'base'),
    'box-shadow-active': false,

    'border-focus': palette('black')
  },
  'default-dark': {
    'color': palette('black', 'dark'),
    'bg': 'transparent',
    'border': palette('black', 'dark'),
    'box-shadow': false,

    'color-hover': palette('black', 'dark', 'contrast'),
    'bg-hover': palette('black', 'dark'),
    'border-hover': palette('black', 'dark'),
    'box-shadow-hover': false,

    'color-active': palette('black', 'dark', 'contrast'),
    'bg-active': palette('black', 'dark'),
    'border-active': palette('black', 'dark'),
    'box-shadow-active': false,

    'border-focus': palette('black', 'dark')
  },
  'default-light': {
    'color': palette('white', 'base', 'contrast'),
    'bg': palette('white'),
    'border': palette('white'),
    'box-shadow': false,

    'color-hover': palette('white', 'base', 'contrast'),
    'bg-hover': `rgba(${palette('white')}, 0.8)`,
    'border-hover': 'transparent',
    'box-shadow-hover': false,

    'color-active': palette('primary-o'),
    'bg-active': palette('white'),
    'border-active': palette('white'),
    'box-shadow-active': false,

    'border-focus': 'transparent'
  },
  'default-light-secondary': {
    'color': palette('white'),
    'bg': 'transparent',
    'border': palette('white'),
    'box-shadow': false,

    'color-hover': palette('white', 'base', 'contrast'),
    'bg-hover': `rgba(${palette('white')}, 0.8)`,
    'border-hover': 'transparent',
    'box-shadow-hover': false,

    'color-active': palette('primary-o'),
    'bg-active': palette('white'),
    'border-active': palette('white'),
    'box-shadow-active': false,

    'border-focus': 'transparent'
  },
  'default-primary': {
    'color': palette('white', 'base', 'contrast'),
    'bg': palette('white'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('primary-o', 'midrange'),
    'bg-hover': palette('white'),
    'border-hover': palette('black'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o', 'base'),
    'border-active': palette('primary-o', 'base'),
    'box-shadow-active': false,

    'border-focus': palette('black')
  },
  'default-purchase': {
    'color': palette('white', 'base', 'contrast'),
    'bg': palette('white'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('primary-o', 'midrange'),
    'bg-hover': palette('white'),
    'border-hover': palette('black'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o', 'base'),
    'border-active': palette('primary-o', 'base'),
    'box-shadow-active': false,

    'border-focus': palette('black')
  },
  'default-info': {
    'color': palette('white', 'base', 'contrast'),
    'bg': palette('white'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('primary-o', 'midrange'),
    'bg-hover': palette('white'),
    'border-hover': palette('black'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o', 'base'),
    'border-active': palette('primary-o', 'base'),
    'box-shadow-active': false,

    'border-focus': palette('black')
  },
  'default-warning': {
    'color': palette('white', 'base', 'contrast'),
    'bg': palette('white'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('primary-o', 'midrange'),
    'bg-hover': palette('white'),
    'border-hover': palette('black'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o', 'base'),
    'border-active': palette('primary-o', 'base'),
    'box-shadow-active': false,

    'border-focus': palette('black')
  },
  'default-danger': {
    'color': palette('white', 'base', 'contrast'),
    'bg': palette('white'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('primary-o', 'midrange'),
    'bg-hover': palette('white'),
    'border-hover': palette('black'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o', 'base'),
    'border-active': palette('primary-o', 'base'),
    'box-shadow-active': false,

    'border-focus': palette('black')
  },
  'default-success': {
    'color': palette('white', 'base', 'contrast'),
    'bg': palette('white'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('primary-o', 'midrange'),
    'bg-hover': palette('white'),
    'border-hover': palette('black'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o', 'base'),
    'border-active': palette('primary-o', 'base'),
    'box-shadow-active': false,

    'border-focus': palette('black')
  },
  'default-feature': {
    'color': palette('white', 'base', 'contrast'),
    'bg': palette('white'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('primary-o', 'midrange'),
    'bg-hover': palette('white'),
    'border-hover': palette('black'),
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o', 'base'),
    'border-active': palette('primary-o', 'base'),
    'box-shadow-active': false,

    'border-focus': palette('black')
  },
  'link': {
    'color': palette('primary-o', 'midrange'),
    'bg': 'transparent',
    'border': 'transparent',
    'box-shadow': false,

    'color-hover': palette('primary-o', 'midrange'),
    'bg-hover': palette('primary-o', 'pastel'),
    'border-hover': 'transparent',
    'box-shadow-hover': false,

    'color-active': palette('primary-o', 'base', 'contrast'),
    'bg-active': palette('primary-o'),
    'border-active': palette('primary-o'),
    'box-shadow-active': false,

    'border-focus': 'transparent'
  },
  'link-light': {
    'color': palette('white'),
    'bg': 'transparent',
    'border': 'transparent',
    'box-shadow': false,

    'color-hover': palette('primary-o', 'midrange'),
    'bg-hover': `rgba(${palette('white')}, 0.8)`,
    'border-hover': 'transparent',
    'box-shadow-hover': false,

    'color-active': palette('primary-o'),
    'bg-active': palette('white'),
    'border-active': palette('white'),
    'box-shadow-active': false,

    'border-focus': 'transparent'
  },
  'merch': {
    'color': palette('white'),
    'bg': palette('black'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('white'),
    'bg-hover': palette('black'),
    'border-hover': palette('black'),
    'box-shadow-hover': false,

    'color-active': palette('white'),
    'bg-active': `rgba(${palette('black')}, 0.8)`,
    'border-active': palette('black'),
    'box-shadow-active': false,

    'border-focus': 'transparent'
  },
  'merch-sec': {
    'color': palette('black'),
    'bg': palette('white'),
    'border': palette('black'),
    'box-shadow': false,

    'color-hover': palette('black'),
    'bg-hover': palette('white'),
    'border-hover': palette('black'),
    'box-shadow-hover': false,

    'color-active': `rgba(${palette('black')}, 0.8)`,
    'bg-active': palette('white'),
    'border-active': `rgba(${palette('black')}, 0.8)`,
    'box-shadow-active': false,

    'border-focus': palette('black')
  },
  'merch-light': {
    'color': palette('black'),
    'bg': palette('white'),
    'border': palette('white'),
    'box-shadow': false,

    'color-hover': palette('black'),
    'bg-hover': palette('white'),
    'border-hover': palette('white'),
    'box-shadow-hover': false,

    'color-active': palette('black'),
    'bg-active': `rgba(${palette('white')}, 0.8)`,
    'border-active': palette('white'),
    'box-shadow-active': false,

    'border-focus': 'transparent'
  },
  'merch-sec-light': {
    'color': palette('white'),
    'bg': 'transparent',
    'border': palette('white'),
    'box-shadow': false,

    'color-hover': palette('black'),
    'bg-hover': palette('white'),
    'border-hover': palette('white'),
    'box-shadow-hover': false,

    'color-active': `rgba(${palette('black')}, 0.8)`,
    'bg-active': `rgba(${palette('white')}, 0.8)`,
    'border-active': 'transparent',
    'box-shadow-active': false,

    'border-focus': 'transparent'
  }
};

export const buttons = merge(
  defautButtons,
  ((uxcoreLabel === 'pl' || uxcorePaletteBuild) ? paletteButtons : {}),
  (uxcoreLabel === 'pl' ? plButtons : {}),
  overrides.brandButtons || {}
);

export const btnHeight = _var('btnHeight', '44px');
export const btnHeightLg = _var('btnHeightLg', '50px');
export const btnHeightSm = _var('btnHeightSm', '32px');

export const btnMerchHeight = _var('btnMerchHeight', '52px');
export const btnMerchHeightLg = _var('btnMerchHeightLg', '64px');
export const btnMerchHeightSm = _var('btnMerchHeightSm', '40px');

export const btnMerchPaddingY = _var('btnMerchPaddingY', '14px');
export const btnMerchPaddingYLg = _var('btnMerchPaddingYLg', '20px');
export const btnMerchPaddingYSm = _var('btnMerchPaddingYSm', '8px');

export const btnMerchPaddingX = _var('btnMerchPaddingX', '48px');
export const btnMerchPaddingXLg = _var('btnMerchPaddingXLg', '64px');
export const btnMerchPaddingXSm = _var('btnMerchPaddingXSm', '32px');

export const btnMerchPaddingHoverX = _var('btnMerchPaddingHoverX', '34px');
export const btnMerchPaddingHoverXLg = _var('btnMerchPaddingHoverXLg', '48px');
export const btnMerchPaddingHoverXSm = _var('btnMerchPaddingHoverXSm', '18px');

export const btnFontSize = _var('btnFontSize', rem(vars.fontSizeRoot));
export const btnFontSizeLg = _var('btnFontSizeLg', rem(`${math(`${vars.fontSizeRoot} + 4`)}`));
export const btnFontSizeSm = _var('btnFontSizeSm', rem(`${math(`${vars.fontSizeRoot} - 2`)}`));
export const btnFontSizePill = _var('btnFontSizePill', rem(`${math(`${vars.fontSizeRoot} - 4`)}`));

export const btnLineHeight = _var('btnLineHeight', vars.lineHeight);
export const btnLineHeightLg = _var('btnLineHeightLg', vars.lineHeight);
export const btnLineHeightSm = _var('btnLineHeightSm', vars.lineHeight);
export const btnLineHeightPill = _var('btnLineHeightPill', math(`${btnFontSizePill} * 0.25`));

export const btnBorderWidthBottom = _var('btnBorderWidthBottom', '0');
export const btnBorderWidthBottomLg = _var('btnBorderWidthBottomLg', '0');
export const btnBorderWidthBottomSm = _var('btnBorderWidthBottomSm', '0');
export const btnBorderWidth = _var('btnBorderWidth', '0');
export const btnBorderWidthLg = _var('btnBorderWidthLg', '0');
export const btnBorderWidthSm = _var('btnBorderWidthSm', '0');
export const btnBorderWidthDefaults = _var('btnBorderWidthDefaults', '2px');
export const btnBorderWidthCanvas = _var('btnBorderWidthCanvas', '0');
export const btnBorderWidthMerch = _var('btnBorderWidthMerch', '0');
export const btnBorderWidthMerchSec = _var('btnBorderWidthMerchSec', '2px');

export const btnBorderStyleMerch = _var('btnBorderStyleMerch', 'solid');
export const btnBorderStyleFocus = _var('btnBorderStyleFocus', 'solid');
export const btnBorderStylePill = _var('btnBorderStylePill', 'solid');

// eslint-disable-next-line
export const btnMerchAfter = _var('btnMerchAfter', '\e477');
export const btnMerchAfterSize = _var('btnMerchAfterSize', '20px');

// Padding called in button-padding function
// in functions/overrides/_buttons.scss

// Left right padding
export const btnPaddingX = _var('btnPaddingX', '24px');
export const btnPaddingXLg = _var('btnPaddingXLg', '32px');
export const btnPaddingXSm = _var('btnPaddingXSm', '12px');
export const btnPaddingXPill = _var('btnPaddingXPill', btnPaddingXSm);

// Starting top padding
export const btnPaddingY = _var('btnPaddingY', '10px');
export const btnPaddingYLg = _var('btnPaddingYLg', '13px');
export const btnPaddingYSm = _var('btnPaddingYSm', '4px');
export const btnPaddingYPill = _var('btnPaddingYPill', '5px');
export const btnPaddingYDefaultSm = _var('btnPaddingYDefaultSm', btnPaddingYSm);

// Calculate padding off the starting top padding, so text tops align for all btn styles
export const btnPadding = _var('btnPadding', buttonPadding(btnPaddingY, btnPaddingX));
export const btnPaddingLg = _var('btnPaddingLg', buttonPadding(btnPaddingYLg, btnPaddingXLg));
export const btnPaddingSm = _var('btnPaddingSm', buttonPaddingSm(btnPaddingYSm, btnPaddingXSm));
export const btnPaddingDefaults = _var('btnPaddingDefaults', buttonPaddingDefaults(btnPaddingY, btnPaddingX, btnBorderWidthDefaults));
export const btnPaddingDefaultsLg = _var('btnPaddingDefaultsLg', buttonPaddingDefaults(btnPaddingYLg, btnPaddingXLg, btnBorderWidthDefaults));

export const btnPaddingDefaultsSm = _var('btnPaddingDefaultsSm', buttonPaddingDefaultsSM(btnPaddingYDefaultSm, btnPaddingXSm, btnBorderWidthDefaults));
export const btnPaddingCanvas = _var('btnPaddingCanvas', buttonPaddingCanvas(btnPaddingY, btnPaddingX));

export const btnTextTransform = _var('btnTextTransform', 'none');
export const btnDisabledOpacityOn = _var('btnDisabledOpacityOn', true);
export const btnDisabledColorsOn = _var('btnDisabledColorsOn', false);
export const btnColorDisabled = _var('btnColorDisabled', palette('gray'));
export const btnBgDisabled = _var('btnBgDisabled', 'transparent');
export const btnBorderDisabled = _var('btnBorderDisabled', palette('gray', 'light'));
export const btnBoxShadowDisabled = _var('btnBoxShadowDisabled', false);
