/* eslint-disable id-length, max-len */
import {
  modularScale,
  math,
  rgba,
  transparentize,
  lighten,
  desaturate
} from 'polished';
import { themeColor } from '../functions/functions';
import cdnPathFinder from '../functions/environment';
import { marketFont } from '../functions/markets';
import palette from '../functions/palette';
import { variables as overrides } from './overrides';

export const _var = (varName, fallback) => varName in overrides ? overrides[varName] : fallback;

export const cdnPathMap = {
  production: 'https://img6.wsimg.com',
  test: 'https://img6.test-wsimg.com',
  development: 'https://img6.dev-wsimg.com'
};

export const cdnPath = _var('cdnPath', cdnPathFinder(cdnPathMap));

export const remBase = _var('remBase', '1rem');

const ms = (step) => {
  return modularScale(step, remBase, 1.125);
};

export const modularScales = {
  'ms-4': ms(-4),
  'ms-3': ms(-3),
  'ms-2': ms(-2),
  'ms-1': ms(-1),
  'ms0': ms(0),
  'ms1': ms(1),
  'ms2': ms(2),
  'ms3': ms(3),
  'ms4': ms(4),
  'ms5': ms(5),
  'ms6': ms(6),
  'ms7': ms(7),
  'ms8': ms(8),
  'ms9': ms(9),
  'ms10': ms(10),
  'ms11': ms(11),
  'ms12': ms(12),
  'ms13': ms(13),
  'ms14': ms(14),
  'ms15': ms(15),
  'ms16': ms(16)
};

export const msNeg4 = _var('msNeg4', ms(-4));
export const msNeg3 = _var('msNeg3', ms(-3));
export const msNeg2 = _var('msNeg2', ms(-2));
export const msNeg1 = _var('msNeg1', ms(-1));
export const ms0 = _var('ms0', ms(0));
export const ms1 = _var('ms1', ms(1));
export const ms2 = _var('ms2', ms(2));
export const ms3 = _var('ms3', ms(3));
export const ms4 = _var('ms4', ms(4));
export const ms5 = _var('ms5', ms(5));
export const ms6 = _var('ms6', ms(6));
export const ms7 = _var('ms7', ms(7));
export const ms8 = _var('ms8', ms(8));
export const ms9 = _var('ms9', ms(9));
export const ms10 = _var('ms10', ms(10));
export const ms11 = _var('ms11', ms(11));
export const ms12 = _var('ms12', ms(12));
export const ms13 = _var('ms13', ms(13));
export const ms14 = _var('ms14', ms(14));
export const ms15 = _var('ms15', ms(15));
export const ms16 = _var('ms16', ms(16));

export const mpSpacer = _var('mpSpacer', '8px');
export const mpSpacerHalf = _var('mpSpacerHalf', `${math(`${mpSpacer} / 2`)}`);
export const mpSpacer2 = _var('mpSpacer2', `${math(`${mpSpacer} * 2`)}`);
export const mpSpacer3 = _var('mpSpacer3', `${math(`${mpSpacer} * 3`)}`);
export const mpSpacer4 = _var('mpSpacer4', `${math(`${mpSpacer} * 4`)}`);
export const mpSpacer5 = _var('mpSpacer5', `${math(`${mpSpacer} * 5`)}`);

//
// matches the above spacing units but in rems so we can
// have both px and rems while we transition into rems

export const remSpacer = _var('remSpacer',      '0.5rem');
export const remSpacerHalf = _var('remSpacerHalf',  `${math(`${remSpacer} / 2`)}`); // .25rem
export const remSpacer2 = _var('remSpacer2',     `${math(`${remSpacer} * 2`)}`); // 1rem
export const remSpacer3 = _var('remSpacer3',     `${math(`${remSpacer} * 3`)}`); // 1.5rem
export const remSpacer4 = _var('remSpacer4',     `${math(`${remSpacer} * 4`)}`); // 2rem
export const remSpacer5 = _var('remSpacer5',     `${math(`${remSpacer} * 5`)}`); // 2.5rem


export const bodyBg = _var('bodyBg', `${palette('white')}`);
export const bodyColor = _var('bodyColor', `${palette('black')}`);

export const grayDark = _var('grayDark', `${palette('gray', 'dark')}`);
export const gray = _var('gray', `${palette('gray')}`);
export const grayLight = _var('grayLight', `${palette('gray', 'light')}`);
export const grayLighter = _var('grayLighter', palette('gray', 'faint'));
export const grayLightest = _var('grayLightest', `${palette('gray', 'faint')}`);
export const textMuted = _var('textMuted', `${palette('gray')}`);
export const brandInverse = _var('brandInverse', grayDark);


export const white = _var('white', '#fff');
export const gray100 = _var('gray100', '#f8f9fa');
export const gray200 = _var('gray200', '#e9ecef');
export const gray300 = _var('gray300', '#dee2e6');
export const gray400 = _var('gray400', '#ced4da');
export const gray500 = _var('gray500', '#adb5bd');
export const gray600 = _var('gray600', '#868e96');
export const gray700 = _var('gray700', '#495057');
export const gray800 = _var('gray800', '#343a40');
export const gray900 = _var('gray900', '#212529');
export const black = _var('black', '#000');

export const grays = {
  100: gray100,
  200: gray200,
  300: gray300,
  400: gray400,
  500: gray500,
  600: gray600,
  700: gray700,
  800: gray800,
  900: gray900
};

export const brandPrimary = _var('brandPrimary', palette('primary'));
export const brandPrimaryO = _var('brandPrimaryO', palette('primary-o', 'midrange'));
export const brandSecondary = _var('brandSecondary', palette('secondary'));
export const brandSecondaryO = _var('brandSecondaryO', palette('secondary-o'));
export const brandPurchase = _var('brandPurchase', brandSecondary);
export const brandSuccess = _var('brandSuccess', palette('success'));
export const brandInfo = _var('brandInfo', palette('info'));
export const brandWarning = _var('brandWarning', palette('warning'));
export const brandDanger = _var('brandDanger', palette('danger'));
export const brandFeature = _var('brandFeature', palette('feature'));
export const brandBlack = _var('brandBlack', palette('black'));
export const brandGray = _var('brandGray', palette('gray', 'midrange'));

export const themeColors = {
  'primary': brandPrimary,
  'primary-o': brandPrimaryO,
  'secondary': brandSecondary,
  'secondary-o': brandSecondaryO,
  'purchase': brandPurchase,
  'success': brandSuccess,
  'info': brandInfo,
  'warning': brandWarning,
  'danger': brandDanger,
  'default': bodyColor,
  'feature': brandFeature,
  'muted': textMuted,
  'black': brandBlack,
  'gray': brandGray,
  'white': palette('white')
};

export const themeColorInterval = _var('themeColorInterval', 0.08);
export const enableFlex = _var('enableFlex', false);
export const enableRounded = _var('enableRounded', false);
export const enableRoundedContainers = _var('enableRoundedContainers', true);
export const enableShadows = _var('enableShadows', true);
export const enableGradients = _var('enableGradients', false);
export const enableTransitions = _var('enableTransitions', true);
export const enableHoverMediaQuery = _var('enableHoverMediaQuery', false);
export const enableGridClasses = _var('enableGridClasses', true);
export const enablePrintStyles = _var('enablePrintStyles', true);
export const enableUtilityHeaderPlOverride = _var('enableUtilityHeaderPlOverride', false);


// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

export const spacer = _var('spacer', '1rem');
export const spacers = {
  0: '0',
  1: math(`${spacer} * 0.25`),
  2: math(`${spacer} * 0.5`),
  3: spacer,
  4: math(`${spacer} * 1.5`),
  5: math(`${spacer} * 3`)
};

export const sizes = {
  25: '25%',
  50: '50%',
  75: '75%',
  100: '100%'
};


// UX App
export const uxAppBg = _var('uxAppBg', `${palette('product', 'faint')}`);

// Links
//
// Style anchor elements.

export const linkDecoration = _var('linkDecoration', `none`);
export const linkColor = _var('linkColor', `${palette('primary-o', 'midrange')}`);
export const linkBorderWidth = _var('linkBorderWidth', '1px');
export const linkHoverDecoration = _var('linkHoverDecoration', 'underline');
export const linkHoverDecorationNone = _var('linkHoverDecorationNone', 'none');
export const linkFocusDecoration = _var('linkFocusDecoration', linkHoverDecoration);
export const linkHoverColor = _var('linkHoverColor', `${palette('primary-o')}`);
export const linkFocusOutlineSize = _var('linkFocusOutlineSize', linkBorderWidth);
export const linkFocusOutlineColor = _var('linkFocusOutlineColor', `${palette('gray', 'midrange')}`);


// Grid breakpoints
//
// Define the minimum dimensions at which your layout will change,
// adapting to different screen sizes, for use in media queries.
export const gridBreakpoints = {
  xs: '0',
  sm: '520px',
  md: '768px',
  lg: '992px',
  xl: '1200px',
  xxl: '1720px'
};

// Grid containers
//
// Define the maximum width of `.container` for different screen sizes.

export const containerMaxWidths = {
  sm: '480px',
  md: '720px',
  lg: '940px',
  xl: '1140px',
  xxl: '1640px'
};

// Grid columns
//
// Set the number of columns and specify the width of the gutters.

export const gridColumns = _var('gridColumns', '12');
export const gridGutterWidth = _var('gridGutterWidth', '16px');

// Components
//
// Define common padding and border radius sizes and more.

export const borderWidth = _var('borderWidth', '0.0625rem');
export const borderColor = _var('borderColor', palette('product'));
export const borderRadius = _var('borderRadius', '.25rem');
export const borderRadiusLg = _var('borderRadiusLg', `calc(${borderRadius} + .125rem)`);
export const borderRadiusSm = _var('borderRadiusSm', `calc(${borderRadius} - .125rem)`);
export const componentActiveColor = _var('componentActiveColor', `${palette('primary-o', 'midrange')}`);
export const componentActiveBg = _var('componentActiveBg', `${palette('gray', 'faint')}`);
export const transitionBase = _var('transitionBase', '.3s all ease-in-out');
export const trasitionFade = _var('trasitionFade', 'opacity .15s linear');
export const transitionCollapse = _var('transitionCollapse', 'height .35s ease');
export const transitionLinkSpeed = _var('transitionLinkSpeed', '.1s');

// Fonts
//
// Font, line-height, and color for body text, headings, and more.
export const fontFamilySansSerif = _var('fontFamilySansSerif', `${marketFont('base')}`);
export const fontFamilyMonospace = _var('fontFamilyMonospace', `"Courier", "Courier New", monospace`);
export const fontFamilyBase = _var('fontFamilyBase', `${marketFont('base')}`);

// Pixel value used to responsively scale all typography. Applied to the `<html>` element. ++
export const fontSizeRoot = _var('fontSizeRoot', '16px');
export const fontSizeBase = _var('fontSizeBase', '1rem');
export const fontSizeLg = _var('fontSizeLg',  '1.375rem');
export const fontSizeMd = _var('fontSizeMd', fontSizeBase);
export const fontSizeSm = _var('fontSizeSm', '.875rem');

export const fontWeightNormal = _var('fontWeightNormal', 'var(--uxp-font-weight-normal, 500)');
export const fontWeightSemiBold = _var('fontWeightSemiBold', 'var(--uxp-font-weight-semibold, 600)');
export const fontWeightBold = _var('fontWeightBold', 'var(--uxp-font-weight-bold, 700)');
export const fontWeightBase = _var('fontWeightBase', fontWeightNormal);
export const lineHeight = _var('lineHeight', '1.5rem /*rtl:1.3rem*/');
export const lineHeightBase = _var('lineHeightBase', lineHeight);
export const lineHeightSm = _var('lineHeightSm', lineHeight);
export const lineHeightLg = _var('lineHeightLg', '1.75rem');
export const lineHeightXs = _var('lineHeightXs', '1.25rem');

// Paragraph

export const paragraphMarginBottom = _var('paragraphMarginBottom', '1.5rem');

// Leading
export const typeLeading = _var('typeLeading', lineHeight);

export const leadFontWeight = _var('leadFontWeight', `300`);
export const leadFontSize = _var('leadFontSize', `${modularScales.ms1}`);
export const leadFontSizeMd = _var('leadFontSizeMd', leadFontSize);

export const headingsMarginBottom = _var('headingsMarginBottom', '.5rem');
export const headingsMarginBottomMd = _var('headingsMarginBottomMd', headingsMarginBottom);

export const h0FontSize = _var('h0FontSize', `${modularScales.ms6}`);
export const h0FontSizeLg = _var('h0FontSizeLg', `${modularScales.ms8}`);
export const h1FontSize = _var('h1FontSize', `${modularScales.ms6}`);
export const h1FontSizeLg = _var('h1FontSizeLg', `${modularScales.ms7}`);
export const h2FontSize = _var('h2FontSize', `${modularScales.ms5}`);
export const h2FontSizeLg = _var('h2FontSizeLg', `${modularScales.ms6}`);
export const h2FontWeight = _var('h2FontWeight', `${fontWeightBold}`);
export const h3FontSize = _var('h3FontSize', `${modularScales.ms4}`);
export const h3FontSizeLg = _var('h3FontSizeLg', `${modularScales.ms5}`);
export const h4FontSize = _var('h4FontSize', `${modularScales.ms3}`);
export const h4FontSizeLg = _var('h4FontSizeLg', `${modularScales.ms4}`);
export const h5FontSize = _var('h5FontSize', `${modularScales.ms2}`);
export const h5FontSizeLg = _var('h5FontSizeLg', `${h5FontSize}`);
export const h6FontSize = _var('h6FontSize', `${modularScales.ms1}`);
export const h6FontSizeLg = _var('h6FontSizeLg', `${h6FontSize}`);

export const headingsFontFamily = _var('headingsFontFamily', `inherit`);
export const headingsFontWeight = _var('headingsFontWeight', fontWeightNormal);
export const headingsColor = _var('headingsColor', bodyColor);

//
// Display headings
//
export const display1Size = _var('display1Size', modularScales.ms10);
export const display1SizeLg = _var('display1SizeLg', modularScales.ms13);
export const display1SizeXxl = _var('display1SizeXxl', modularScales.ms16);

export const display2Size = _var('display2Size', modularScales.ms8);
export const display2SizeLg = _var('display2SizeLg', modularScales.ms12);
export const display2SizeXxl = _var('display2SizeXxl', modularScales.ms15);

export const display3Size = _var('display3Size', modularScales.ms8);
export const display3SizeLg = _var('display3SizeLg', modularScales.ms10);
export const display3SizeXxl = _var('display3SizeXxl', modularScales.ms13);

export const display4Size = _var('display4Size', modularScales.ms8);
export const display4SizeLg = _var('display4SizeLg', modularScales.ms10);
export const display4SizeXxl = _var('display4SizeXxl', modularScales.ms12);

export const display1Weight = _var('display1Weight', fontWeightBold);
export const display2Weight = _var('display2Weight', fontWeightBold);
export const display3Weight = _var('display3Weight', fontWeightBold);
export const display4Weight = _var('display4Weight', fontWeightBold);

export const displayLineHeight = _var('displayLineHeight', '3.5rem');

export const smallFontSize = _var('smallFontSize', '80%');

export const blockquoteSmallColor = _var('blockquoteSmallColor', gray600);
export const blockquoteFontSize = _var('blockquoteFontSize', `calc(${fontSizeBase} * 1.25)`);
export const blockquoteBorderColor = _var('blockquoteBorderColor', grayLighter);
export const blockquoteBorderWidth = _var('blockquoteBorderWidth', '4px');
export const hrBorderColor = _var('hrBorderColor', borderColor);
export const hrBorderDark = _var('hrBorderDark', palette('gray'));
export const hrBorderWidth = _var('hrBorderWidth', borderWidth);

export const dtFontWeight = _var('dtFontWeight', fontWeightBold);

export const kbdBoxShadow = _var('kbdBoxShadow', `inset 0 -.1rem 0 ${rgba(black, 0.25)}`);
export const nestedKbdFontWeight = _var('nestedKbdFontWeight', fontWeightBold);

export const listInlinePadding = _var('listInlinePadding', '.25rem');

export const markBg = _var('markBg', transparentize(0.3, palette('warning', 'base')));
export const markPadding = _var('markPadding', '.2em');
export const markPaddingY = _var('markPaddingY', '.08rem');
export const markPaddingX = _var('markPaddingX', '.10rem');

export const brandFontFaces = {};

// Uxicons
//
export const iconFontPath = _var('iconFontPath', `${cdnPath}/ux/fonts/uxfont/2.0/`);
export const iconFontName = _var('iconFontName', 'uxfont');
export const iconFontName2 = _var('iconFontName2', 'uxfont-2');


// Tables
//
// Customizes the `.table` component with basic values, each used across all table variations.

export const tableBg = _var('tableBg', 'transparent');
export const tableBorderColor = _var('tableBorderColor', borderColor);
export const tableAccentBg = _var('tableAccentBg', palette('product', 'faint'));
export const tableHoverBg = _var('tableHoverBg', palette('product', 'light'));
export const tableStripedHoverBg = _var('tableStripedHoverBg', palette('product', 'light'));
export const tableActiveBg = _var('tableActiveBg', tableHoverBg);

export const tableCellPadding = _var('tableCellPadding', '1rem');
export const tableCellPaddingLg = _var('tableCellPaddingLg', '2rem');
export const tableCellPaddingSm = _var('tableCellPaddingSm', '.25rem');

export const tableBorderWidth = _var('tableBorderWidth', borderWidth);

export const tableHeadBg = _var('tableHeadBg', gray200);
export const tableHeadColor = _var('tableHeadColor', gray700);

export const tableDarkBg = _var('tableDarkBg', gray900);
export const tableDarkAccentBg = _var('tableDarkAccentBg', rgba('white', 0.05));
export const tableDarkHoverBg = _var('tableDarkHoverBg', rgba('white', 0.075));
export const tableDarkBorderColor = _var('tableDarkBorderColor', lighten('0.075', gray900));
export const tableDarkColor = _var('tableDarkColor', bodyBg);

export const tableCaptionColor = _var('tableCaptionColor', textMuted);

export const tableIcon = _var('tableIcon', '1.375rem');
export const tableStackingLabel = _var('tableStackingLabel', '10rem');


// Buttons
//
// For each of Bootstrap's buttons, define text, background and border color.

export const inputBtnPaddingY = _var('inputBtnPaddingY', '0.375rem');
export const inputBtnPaddingX = _var('inputBtnPaddingX', '0.75rem');
export const inputBtnLineHeight = _var('inputBtnLineHeight', lineHeightBase);

export const inputBtnPaddingYSm = _var('inputBtnPaddingYSm', `calc(${inputBtnPaddingY} - .125rem)`);
export const inputBtnPaddingXSm = _var('inputBtnPaddingXSm', '0.75rem');
export const inputBtnLineHeightSm = _var('inputBtnLineHeightSm', lineHeightSm);

export const inputBtnPaddingYLg = _var('inputBtnPaddingYLg', inputBtnPaddingY);
export const inputBtnPaddingXLg = _var('inputBtnPaddingXLg', '0.75rem');
export const inputBtnLineHeightLg = _var('inputBtnLineHeightLg', lineHeightLg);

export const btnFontWeight = _var('btnFontWeight', fontWeightNormal);
export const btnBoxShadow = _var('btnBoxShadow', `inset 0 1px 0 ${rgba(white, 0.15)}, 0 1px 1px ${rgba(black, 0.075)}`);
export const btnFocusBoxShadow = _var('btnFocusBoxShadow', `0 0 0 3px ${rgba(themeColor('primary', themeColors), 0.25)}`);
export const btnActiveBoxShadow = _var('btnActiveBoxShadow', `inset 0 3px 5px ${rgba(black, 0.125)}`);

export const btnLinkDisabledColor = _var('btnLinkDisabledColor', gray600);

export const btnBlockSpacingY = _var('btnBlockSpacingY', '.5rem');

export const btnGutter = _var('btnGutter', '.5rem');

// Allows for customizing button radius independently from global border radius
export const btnBorderRadius = _var('btnBorderRadius', borderRadiusSm);
export const btnBorderRadiusLg = _var('btnBorderRadiusLg', borderRadiusSm);
export const btnBorderRadiusSm = _var('btnBorderRadiusSm', borderRadiusSm);

export const btnTransition = _var('btnTransition', `background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out`);

// Form states and alerts
//
export const stateSuccessText = _var('stateSuccessText', palette('success', 'pastel', 'contrast'));
export const stateSuccessBg = _var('stateSuccessBg', palette('success', 'pastel'));
export const stateSuccessBorder = _var('stateSuccessBorder', palette('success'));

export const stateInfoText = _var('stateInfoText', palette('info', 'pastel', 'contrast'));
export const stateInfoBg = _var('stateInfoBg', palette('info', 'pastel'));
export const stateInfoBorder = _var('stateInfoBorder', palette('info'));

export const stateWarningText = _var('stateWarningText', palette('warning', 'pastel', 'contrast'));
export const stateWarningBg = _var('stateWarningBg', palette('warning', 'pastel'));
export const stateWarningBorder = _var('stateWarningBorder', palette('warning'));

export const stateDangerText = _var('stateDangerText', palette('danger', 'pastel', 'contrast'));
export const stateDangerBg = _var('stateDangerBg', palette('danger', 'pastel'));
export const stateDangerBorder = _var('stateDangerBorder', palette('danger'));

// Forms

export const labelMarginBottom = _var('labelMarginBottom', '.5rem');

export const inputIconSpacing = _var('inputIconSpacing', '1.25rem');
export const inputIconSpacingSm = _var('inputIconSpacingSm', '1rem');
export const inputIconSpacingLg = _var('inputIconSpacingLg', '1.75rem');

export const inputIconClearSize = _var('inputIconClearSize', '1.4375rem');
export const inputIconClearSizeSm = _var('inputIconClearSizeSm', '1.125rem');

export const inputBg = _var('inputBg', palette('white'));
export const inputDisabledBg = _var('inputDisabledBg', palette('product', 'faint'));
export const inputDisabledColor = _var('inputDisabledColor', palette('product', 'midrange'));
export const inputDisabledBorderColor = _var('inputDisabledBorderColor', palette('product'));
export const inputDisabledToggleColor = _var('inputDisabledToggleColor', gray);

export const inputColor = _var('inputColor', palette('gray', 'dark'));
export const inputColorHover = _var('inputColorHover', inputColor);
export const inputBorderColor = _var('inputBorderColor', borderColor);
export const inputBtnBorderWidth = _var('inputBtnBorderWidth', borderWidth); // For form controls and buttons
export const inputBoxShadow = _var('inputBoxShadow', 'none');
export const inputBoxShadowSuccess = _var('inputBoxShadowSuccess', 'none');
export const inputBoxShadowWarning = _var('inputBoxShadowWarning', 'none');
export const inputBoxShadowError = _var('inputBoxShadowError', 'none');

export const inputSuccessColor = _var('inputSuccessColor', palette('success'));
export const inputSuccessBg = _var('inputSuccessBg', palette('success', 'pastel'));

export const inputWarningColor = _var('inputWarningColor', palette('warning', 'dark'));
export const inputWarningBg = _var('inputWarningBg', palette('warning', 'pastel'));
export const inputWarningTextColor = _var('inputWarningTextColor', palette('warning', 'pastel', 'contrast'));

export const inputErrorColor = _var('inputErrorColor', palette('danger'));
export const inputErrorBg = _var('inputErrorBg', 'inherit');
export const inputErrorTextColor = _var('inputErrorTextColor', palette('danger', 'pastel', 'contrast'));

export const inputBorderRadius = _var('inputBorderRadius', borderRadius);
export const inputBorderRadiusLg = _var('inputBorderRadiusLg', borderRadiusLg);
export const inputBorderRadiusSm = _var('inputBorderRadiusSm', borderRadiusSm);

export const inputFocusBg = _var('inputFocusBg', inputBg);
export const inputFocusBorderColor = _var('inputFocusBorderColor', palette('black', 'dark'));
export const inputFocusBorderWidth = _var('inputFocusBorderWidth', '1px');
export const inputFocusColor = _var('inputFocusColor', inputColor);
export const inputFocusBoxShadow = _var('inputFocusBoxShadow', `inset 0px -1px 0px 0px ${palette('black')}`);
export const inputfocusboxshadowsuccess = _var('inputfocusboxshadowsuccess', `inset 0px -1px 0px 0px ${palette('success')}`);
export const inputFocusBoxShadowWarning = _var('inputFocusBoxShadowWarning', `inset 0px -1px 0px 0px ${palette('warning')}`);
export const inputFocusBoxShadowError = _var('inputFocusBoxShadowError', 'none');

export const inputPlaceholderColor = _var('inputPlaceholderColor', inputBorderColor);

export const inputHeightBorder = _var('inputHeightBorder', 'calc(${inputBtnBorderWidth} * 2)');

export const inputHeight = _var('inputHeight', '2.75rem');
export const inputHeightInner = _var('inputHeightInner', 'calc(${inputHeight} - .125rem)');

export const inputHeightSm = _var('inputHeightSm', '2rem');
export const inputHeightInnerSm = _var('inputHeightInnerSm', 'calc(${inputHeightSm} - .125rem)');

export const inputHeightLg = _var('inputHeightLg', '3.25rem');
export const inputHeightInnerLg = _var('inputHeightInnerLg', 'calc(${inputHeightLg} - .125rem)');

// Merchandising form element sizes
export const inputHeightMerch = _var('inputHeightMerch', '3.25rem');
export const inputHeightMerchInner = _var('inputHeightMerchInner', 'calc(${inputHeightMerch} - .125rem)');

export const inputHeightMerchSm = _var('inputHeightMerchSm', '2.5rem');
export const inputHeightMerchInnerSm = _var('inputHeightMerchInnerSm', 'calc(${inputHeightMerchSm} -  .125rem)');

export const inputHeightMerchLg = _var('inputHeightMerchLg', '4rem');
export const inputHeightMerchInnerLg = _var('inputHeightMerchInnerLg', 'calc(${inputHeightMerchLg} -  .125rem)');

export const inputTransition = _var('inputTransition', transitionBase);

export const inputBorderDropdownOpen = _var('inputBorderDropdownOpen', '1px 1px 1px 1px');
export const inputBoxShadowSize = _var('inputBoxShadowSize', '0');

export const inputGroupAddonColor = _var('inputGroupAddonColor', inputColor);
export const inputGroupAddonBg = _var('inputGroupAddonBg', gray200);
export const inputGroupAddonBorderColor = _var('inputGroupAddonBorderColor', inputBorderColor);

export const formTextMarginTop = _var('formTextMarginTop', '.25rem');

export const formCheckMarginBottom = _var('formCheckMarginBottom', '.5rem');
export const formCheckInputGutter = _var('formCheckInputGutter', '-1.25rem');
export const formCheckInputMarginY = _var('formCheckInputMarginY', '0');
export const formCheckInputMarginX = _var('formCheckInputMarginX', '.25rem');

export const formCheckInlineMarginX = _var('formCheckInlineMarginX', '2rem');

export const formGroupMarginBottom = _var('formGroupMarginBottom', '1.5rem');
export const formGroupLabelTransform = _var('formGroupLabelTransform', 'none');
export const formGroupIconSize = _var('formGroupIconSize', '1.25rem');

export const formClearIconColor = _var('formClearIconColor', palette('gray'));
export const formClearIconSize = _var('formClearIconSize', '1.25rem');
export const formClearIconSizeSm = _var('formClearIconSizeSm', '1.25rem');

export const customControlGutter = _var('customControlGutter', '2rem');
export const customControlSpacerY = _var('customControlSpacerY', '.25rem');
export const customControlSpacerX = _var('customControlSpacerX', '1rem');


export const customControlFocusIndicatorBoxShadow = _var('customControlFocusIndicatorBoxShadow', 'none');

export const customControlIndicatorSize = _var('customControlIndicatorSize', '1.25rem');
export const customControlIndicatorBg = _var('customControlIndicatorBg', palette('white'));
export const customControlIndicatorBgSize = _var('customControlIndicatorBgSize', '50% 50%');
export const customControlIndicatorBoxShadow = _var('customControlIndicatorBoxShadow', 'none');
export const customControlIndicatorBorder = _var('customControlIndicatorBorder', `1px solid ${palette('product', 'dark')}`);
export const customControlDescriptionFontWeight = _var('customControlDescriptionFontWeight', fontWeightNormal);

export const customControlIndicatorDisabledBg = _var('customControlIndicatorDisabledBg', palette('gray', 'faint'));
export const customControlDescriptionDisabledColor = _var('customControlDescriptionDisabledColor', gray600);
export const customControlDisabledDescriptionOpacity = _var('customControlDisabledDescriptionOpacity', '.6');

export const customControlIndicatorCheckedColor = _var('customControlIndicatorCheckedColor', palette('white'));
export const customControlIndicatorCheckedBg = _var('customControlIndicatorCheckedBg', palette('primary-o'));
export const customControlIndicatorCheckedBoxShadow = _var('customControlIndicatorCheckedBoxShadow', 'none');
export const customControlCheckedIndicatorBorder = _var('customControlCheckedIndicatorBorder', palette('primary-o'));

export const customControlIndicatorFocusBoxShadow = _var('customControlIndicatorFocusBoxShadow', customControlIndicatorCheckedBoxShadow);
export const customControlFocusIndicatorBorder = _var('customControlFocusIndicatorBorder', palette('primary-o'));

export const customControlIndicatorActiveColor = _var('customControlIndicatorActiveColor', palette('white'));
export const customControlIndicatorActiveBg = _var('customControlIndicatorActiveBg', palette('white'));
export const customControlIndicatorActiveBoxShadow = _var('customControlIndicatorActiveBoxShadow', 'none');

export const customCheckboxIndicatorBorderRadius = _var('customCheckboxIndicatorBorderRadius', '0');
export const customCheckboxIndicatorIconChecked = _var('customCheckboxIndicatorIconChecked', `url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='${customControlIndicatorCheckedColor}' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26 2.974 7.25 8 2.193z'/%3E%3C/svg%3E")`.replace('#', '%23'));
export const customCheckboxIconSize = _var('customCheckboxIconSize', '1rem');

export const customControlCheckedRadioIndicatorBorder = _var('customControlCheckedRadioIndicatorBorder', `1px solid ${palette('primary-o', 'midrange')}`);
export const customControlCheckedRadioIndicatorBg = _var('customControlCheckedRadioIndicatorBg', palette('primary-o'));
export const customControlCheckedRadioInsetShadow = _var('customControlCheckedRadioInsetShadow', `inset 0 0 0 4px ${palette('white')}`);

export const customCheckboxIndeterminateBg = _var('customCheckboxIndeterminateBg', customControlIndicatorCheckedBg);
export const customCheckboxIndeterminateBorder = _var('customCheckboxIndeterminateBorder', customControlCheckedRadioIndicatorBorder);

export const customCheckboxIndicatorIndeterminateBg = _var('customCheckboxIndicatorIndeterminateBg', themeColor('primary-o', themeColors));
export const customCheckboxIndicatorIndeterminateColor = _var('customCheckboxIndicatorIndeterminateColor', customControlIndicatorCheckedColor);
export const customCheckboxIndicatorIconIndeterminate = _var('customCheckboxIndicatorIconIndeterminate', `url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 4'%3E%3Cpath stroke='${customCheckboxIndicatorIndeterminateColor}' d='M0 2h4'/%3E%3C/svg%3E")`.replace('#', '%23'));
export const customCheckboxIndicatorIndeterminateBoxShadow = _var('customCheckboxIndicatorIndeterminateBoxShadow', 'none');

export const customRadioIndicatorBorderRadius = _var('customRadioIndicatorBorderRadius', '50%');
export const customRadioIndicatorIconChecked = _var('customRadioIndicatorIconChecked', `url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3E%3Ccircle r='3' fill=${customControlIndicatorCheckedColor}'/%3E%3C/svg%3E")`.replace('#', '%23'));


export const customSelectPaddingY = _var('customSelectPaddingY', '.375rem');
export const customSelectPaddingX = _var('customSelectPaddingX', '.75rem');
export const customSelectHeight = _var('customSelectHeight', inputHeight);
export const customSelectIndicatorPadding = _var('customSelectIndicatorPadding', '1rem'); // Extra padding to account for the presence of the backgroundImage based indicator
export const customSelectLineHeight = _var('customSelectLineHeight', inputBtnLineHeight);
export const customSelectColor = _var('customSelectColor', inputColor);
export const customSelectDisabledColor = _var('customSelectDisabledColor', gray600);
export const customSelectBg = _var('customSelectBg', white);
export const customSelectDisabledBg = _var('customSelectDisabledBg', gray200);
export const customSelectBgSize = _var('customSelectBgSize', '8px 10px'); // In pixels because image dimensions
export const customSelectIndicatorColor = _var('customSelectIndicatorColor', '#333');
export const customSelectIndicator = _var('customSelectIndicator', `url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 4 5'%3E%3Cpath fill='${customSelectIndicatorColor}' d='M2 0L0 2h4zm0 5L0 3h4z'/%3E%3C/svg%3E")`.replace('#', '%23'));
export const customSelectBorderWidth = _var('customSelectBorderWidth', inputBtnBorderWidth);
export const customSelectBorderColor = _var('customSelectBorderColor', inputBorderColor);
export const customSelectBorderRadius = _var('customSelectBorderRadius', borderRadius);

export const customSelectFocusBorderColor = _var('customSelectFocusBorderColor', lighten('0.25', themeColor('primary', themeColors)));
export const customSelectFocusBoxShadow = _var('customSelectFocusBoxShadow', `inset 0 1px 2px ${rgba(black, 0.075)}, 0 0 5px ${rgba(customSelectFocusBorderColor, 0.5)}`);

export const customSelectFontSizeSm = _var('customSelectFontSizeSm', '75%');
export const customSelectHeightSm = _var('customSelectHeightSm', inputHeightSm);
export const customSelectSmPaddingY = _var('customSelectSmPaddingY', customSelectHeightSm); // ++
export const customSelectSmFontSize = _var('customSelectSmFontSize', customSelectFontSizeSm); // ++

export const customFileHeight = _var('customFileHeight', inputHeight); // $inputHeight needs to be checked.
export const customFileWidth = _var('customFileWidth', '14rem');
export const customFileFocusBoxShadow = _var('customFileFocusBoxShadow', `0 0' 0 .'075rem ${white}, 0 0 0 .2rem ${themeColor('primary', themeColors)}`);

export const customFilePaddingY = _var('customFilePaddingY', inputBtnPaddingY);
export const customFilePaddingX = _var('customFilePaddingX', inputBtnPaddingX);
export const customFileLineHeight = _var('customFileLineHeight', inputBtnLineHeight);
export const customFileColor = _var('customFileColor', inputColor);
export const customFileBg = _var('customFileBg', inputBg);
export const customFileBorderWidth = _var('customFileBorderWidth', inputBtnBorderWidth);
export const customFileBorderColor = _var('customFileBorderColor', inputBorderColor);
export const customFileBorderRadius = _var('customFileBorderRadius', inputBorderRadius);
export const customFileBoxShadow = _var('customFileBoxShadow', inputBoxShadow);
export const customFileButtonColor = _var('customFileButtonColor', customFileColor);
export const customFileButtonBg = _var('customFileButtonBg', inputGroupAddonBg);
export const customFileText = {
  placeholder: {
    en: '"Choose file..."'
  },
  buttonLabel: {
    en: 'Browse'
  }
};

export const cursorDisabled = _var('cursorDisabled', 'not-allowed');
export const disabledOpacity = _var('disabledOpacity', '.4');


// Form validation
export const formFeedbackValidColor = _var('formFeedbackValidColor', themeColor('success', themeColors));
export const formFeedbackInvalidColor = _var('formFeedbackInvalidColor', themeColor('danger', themeColors));

// Form validation icons
export const formIconSuccess = _var('formIconSuccess', `url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%235cb85c' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3E%3C/svg%3E")`); // ++
export const formIconWarning = _var('formIconWarning', `url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3E%3Cpath fill='%23f0ad4e' d='M4.4 5.324h-.8v-2.46h.8zm0 1.42h-.8V5.89h.8zM3.76.63L.04 7.075c-.115.2.016.425.26.426h7.397c.242 0 .372-.226.258-.426C6.726 4.924 5.47 2.79 4.253.63c-.113-.174-.39-.174-.494 0z'/%3E%3C/svg%3E")`); // ++
export const formIconDanger = _var('formIconDanger', `url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='%23d9534f' viewBox='-2 -2 7 7'%3E%3Cpath stroke='%23d9534f' d='M0 0l3 3m0-3L0 3'/%3E%3Ccircle r='.5'/%3E%3Ccircle cx='3' r='.5'/%3E%3Ccircle cy='3' r='.5'/%3E%3Ccircle cx='3' cy='3' r='.5'/%3E%3C/svg%3E")`); // ++


// Dropdowns
//
// Dropdown menu container and contents.

export const dropdownMinWidth = _var('dropdownMinWidth', '10rem');
export const dropdownPaddingY = _var('dropdownPaddingY', '.5rem');
export const dropdownSpacer = _var('dropdownSpacer', '.125rem'); // .125 = 2px
export const dropdownBg = _var('dropdownBg', palette('white'));
export const dropdownBorderColor = _var('dropdownBorderColor', palette('black'));
export const dropdownBorderRadius = _var('dropdownBorderRadius', '0');
export const dropdownBorderWidth = _var('dropdownBorderWidth', borderWidth);
export const dropdownDividerBg = _var('dropdownDividerBg', palette('product', 'faint'));
export const dropdownBoxShadow = _var('dropdownBoxShadow', `0 .5rem 1rem ${rgba('black', 0.175)}`);
export const dropdownMarginTop = _var('dropdownMarginTop', '2px'); // px for border width

export const dropdownLinkColor = _var('dropdownLinkColor', palette('black'));
export const dropdownLinkHoverColor = _var('dropdownLinkHoverColor', palette('primary-o', 'midrange'));
export const dropdownLinkHoverBg = _var('dropdownLinkHoverBg', palette('product', 'faint'));

export const dropdownLinkActiveColor = _var('dropdownLinkActiveColor', componentActiveColor);
export const dropdownLinkActiveBg = _var('dropdownLinkActiveBg', componentActiveBg);

export const dropdownLinkDisabledColor = _var('dropdownLinkDisabledColor', gray600);

export const dropdownItemPaddingY = _var('dropdownItemPaddingY', '.75rem');
export const dropdownItemPaddingX = _var('dropdownItemPaddingX', '1rem');

export const dropdownHeaderHeight = _var('dropdownHeaderHeight', '2rem');
export const dropdownHeaderColor = _var('dropdownHeaderColor', palette('primary-o'));

export const dropdownToggleSplitWidth = _var('dropdownToggleSplitWidth', '1.8125rem');

export const dropdownMenuIconSize = _var('dropdownMenuIconSize', '1.25rem');
export const dropdownTripleDotIconSize = _var('dropdownTripleDotIconSize', '1.3125rem');


// ZIndex main list
//
// Warning: Avoid customizing these values. They're used for a bird's eye view
// of components dependent on the zAxis and are designed to all work together.

export const zindexDropdown = _var('zindexDropdown', '1000');
export const zindexSticky = _var('zindexSticky', '1020');
export const zindexFixed = _var('zindexFixed', '1030');
export const zindexModalBackdrop = _var('zindexModalBackdrop', '1040');
export const zindexModal = _var('zindexModal', '1050');
export const zindexPopover = _var('zindexPopover', '1060');
export const zindexTooltip = _var('zindexTooltip', '1070');
export const zindexDropdownBackdrop = _var('zindexDropdownBackdrop', '990'); // ++
export const zindexNavbar = _var('zindexNavbar', zindexDropdown); // ++
export const zindexNavbarSticky = _var('zindexNavbarSticky', zindexSticky); // ++
export const zindexModalBg = _var('zindexModalBg', zindexModalBackdrop); // ++
export const zindexNavbarFixed = _var('zindexNavbarFixed', zindexFixed); // ++
export const zindexInappHelp = _var('zindexInappHelp', '200000001');


// Navs

export const navLinkPaddingY = _var('navLinkPaddingY', '0.5rem');
export const navLinkPaddingX = _var('navLinkPaddingX', '1rem');
export const navLinkDisabledColor = _var('navLinkDisabledColor', gray600);
export const navLinkDisabledBg = _var('navLinkDisabledBg', 'transparent');
export const navLinkPadding = _var('navLinkPadding', '.25rem 2rem');
export const navLinkPaddingSm = _var('navLinkPaddingSm', '.25rem 1rem');

export const navItemMargin = _var('navItemMargin', '.2rem'); // ++
export const navItemInlineSpacer = _var('navItemInlineSpacer', '1rem'); // ++

// Nav top (text, links)
//
export const navTextColor = _var('navTextColor', palette('gray', 'dark'));
export const navTextTransform = _var('navTextTransform', 'none');
export const navLinkColor = _var('navLinkColor', palette('gray', 'dark'));
export const navLinkHoverColor = _var('navLinkHoverColor', palette('gray', 'dark'));
export const navLinkHoverBg = _var('navLinkHoverBg', palette('product'));

// Nav tabs
export const navTabsHeight = _var('navTabsHeight', '3.25rem');
// export const navTabsOverflowHeight = _var('navTabsOverflowHeight', navTabsHeight + rem('17.5px'));
export const navTabsBorderColor = _var('navTabsBorderColor', palette('gray', 'light'));
export const navTabsBorderWidth = _var('navTabsBorderWidth', borderWidth);
export const navTabsBorderRadius = _var('navTabsBorderRadius', borderRadius);
export const navTabsLinkHoverBorderColor = _var('navTabsLinkHoverBorderColor', palette('gray', 'light'));

export const navTabsLinkActiveColor = _var('navTabsLinkActiveColor', gray700);
export const navTabsLinkActiveBg = _var('navTabsLinkActiveBg', bodyBg);
export const navTabsLinkActiveBorderColor = _var('navTabsLinkActiveBorderColor', '#ddd');

export const navTabsLinkDisabledColor = _var('navTabsLinkDisabledColor', inputDisabledColor);
export const navTabsLinkDisabledBg = _var('navTabsLinkDisabledBg', inputDisabledBg);
export const navTabsLinkDisabledBorderColor = _var('navTabsLinkDisabledBorderColor', inputDisabledBorderColor);

export const navPillsBorderRadius = _var('navPillsBorderRadius', borderRadius);
export const navPillsLinkActiveColor = _var('navPillsLinkActiveColor', componentActiveColor);
export const navPillsLinkActiveBg = _var('navPillsLinkActiveBg', componentActiveBg);


// Nav bottom
// *NOTE:* No variables exist for navBottom link / text coloring
//
// export const navBotPadding = _var('navBotPadding', '11px 15px');

// Navbar

export const navbarPaddingY = _var('navbarPaddingY', math(`${spacer} / 2`));
export const navbarPaddingX = _var('navbarPaddingX', spacer);

export const navbarBrandFontSize = _var('navbarBrandFontSize', fontSizeLg);
// Compute the navbarBrand paddingY so the navbarBrand will have the same height as navbarText and navLink
export const navLinkHeight = _var('navLinkHeight', math(`${navbarBrandFontSize} * 1.5`)); // 1.25 * 1.5 = 1.875
export const navbarBrandHeight = _var('navbarBrandHeight', math(`${fontSizeBase} * 1.5 + ${navLinkPaddingY} * 2`)); // 1 * 1.5 + .5 * 2 = 2.5
export const navbarBrandPaddingY = _var('navbarBrandPaddingY', math(`(${navbarBrandHeight} - ${navLinkHeight}) / 2`)); // 2.5  1.875 = .625 // Original on old variables was .25rem;

export const navbarTogglerPaddingY = _var('navbarTogglerPaddingY', '.25rem');
export const navbarTogglerPaddingX = _var('navbarTogglerPaddingX', '.75rem');
export const navbarTogglerFontSize = _var('navbarTogglerFontSize', fontSizeLg);
export const navbarTogglerBorderRadius = _var('navbarTogglerBorderRadius', btnBorderRadius);

export const navbarDarkColor = _var('navbarDarkColor', rgba(white, 0.5));
export const navbarDarkHoverColor = _var('navbarDarkHoverColor', rgba(white, 0.75));
export const navbarDarkActiveColor = _var('navbarDarkActiveColor', rgba(white, 1));
export const navbarDarkDisabledColor = _var('navbarDarkDisabledColor', rgba(white, 0.25));
export const navbarDarkTogglerIconBg = _var('navbarDarkTogglerIconBg', `url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke=${navbarDarkColor}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E")`.replace('#', '%23'));
export const navbarDarkTogglerBorderColor = _var('navbarDarkTogglerBorderColor', rgba(white, 0.1));

export const navbarLightColor = _var('navbarLightColor', rgba(black, 0.5));
export const navbarLightHoverColor = _var('navbarLightHoverColor', rgba(black, 0.7));
export const navbarLightActiveColor = _var('navbarLightActiveColor', rgba(black, 0.9));
export const navbarLightDisabledColor = _var('navbarLightDisabledColor', rgba(black, 0.3));
export const navbarLightTogglerIconBg = _var('navbarLightTogglerIconBg', `url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='${navbarLightColor}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E")`.replace('#', '%23'));
export const navbarLightTogglerBorderColor = _var('navbarLightTogglerBorderColor', rgba(black, 0.1));


// Pagination

export const paginationPaddingY = _var('paginationPaddingY', '.5rem');
export const paginationPaddingX = _var('paginationPaddingX', '.75rem');
export const paginationPaddingYSm = _var('paginationPaddingYSm', '.25rem');
export const paginationPaddingXSm = _var('paginationPaddingXSm', '.5rem');
export const paginationPaddingYLg = _var('paginationPaddingYLg', '.75rem');
export const paginationPaddingXLg = _var('paginationPaddingXLg', '1.5rem');
export const paginationLineHeight = _var('paginationLineHeight', '1.25');

export const paginationIconSize = _var('paginationIconSize', '1.25rem');
export const paginationIconSizeSm = _var('paginationIconSizeSm', '1rem');
export const paginationIconSizeLg = _var('paginationIconSizeLg', '1.875rem');

export const paginationColor = _var('paginationColor', bodyColor);
export const paginationBg = _var('paginationBg', 'transparent');
export const paginationBorderWidth = _var('paginationBorderWidth', borderWidth);
export const paginationBorderColor = _var('paginationBorderColor', '#ddd');

export const paginationHoverColor = _var('paginationHoverColor', palette('primary'));
export const paginationHoverBg = _var('paginationHoverBg', 'transparent');
export const paginationHoverBorderColor = _var('paginationHoverBorderColor', '#ddd');

export const paginationActiveColor = _var('paginationActiveColor', palette('primary', 'base', 'contrast'));
export const paginationActiveBg = _var('paginationActiveBg', palette('primary'));
export const paginationActiveBorderColor = _var('paginationActiveBorderColor', themeColor('primary', themeColors));

export const paginationDisabledColor = _var('paginationDisabledColor', palette('gray'));
export const paginationDisabledBg = _var('paginationDisabledBg', 'transparent');
export const paginationDisabledBorderColor = _var('paginationDisabledBorderColor', '#ddd');
export const paginationDisabledBorder = _var('paginationDisabledBorder', 'transparent');


// Cards

export const cardSpacerY = _var('cardSpacerY', '.75rem');
export const cardSpacerX = _var('cardSpacerX', '1.25rem');
export const cardBorderWidth = _var('cardBorderWidth', borderWidth);
export const cardBorderRadius = _var('cardBorderRadius', borderRadius);
export const cardBorderRadiusInner = _var('cardBorderRadiusInner', '0');
export const cardBorder = _var('cardBorder', `1px solid ${palette('product')}`);
export const cardBorderColor = _var('cardBorderColor', palette('product'));
export const cardInnerBorderRadius = _var('cardInnerBorderRadius', `calc(${cardBorderRadius} - ${cardBorderWidth})`);
export const cardCapBg = _var('cardCapBg', rgba(black, 0.03));
export const cardBg = _var('cardBg', palette('white'));

export const cardBlockX = _var('cardBlockX', '1.25rem');
export const cardBlockY = _var('cardBlockY', '1.25rem');
export const cardShadowSize = _var('cardShadowSize', '.25rem');
export const cardTitleFontSize = _var('cardTitleFontSize', 'inherit');
export const cardTitleAlign = _var('cardTitleAlign', 'center');
export const cardTitleTransform = _var('cardTitleTransform', 'none');

export const cardImgOverlayPadding = _var('cardImgOverlayPadding', '1.25rem');

export const cardGroupMargin = _var('cardGroupMargin', 'calc(${gridGutterWidth} / 2)');
// cardDeckMargin:                  cardGroupMargin;
export const cardDeckMargin = _var('cardDeckMargin', '.625rem'); // ++

export const cardColumnsCount = _var('cardColumnsCount', '3');
export const cardColumnsGap = _var('cardColumnsGap', '1.25rem');
export const cardColumnsMargin = _var('cardColumnsMargin', cardSpacerY);


// Tooltips

export const tooltipFontSize = _var('tooltipFontSize', modularScales.ms1);
export const tooltipMaxWidth = _var('tooltipMaxWidth', '22rem');
export const tooltipColor = _var('tooltipColor', palette('gray', 'dark', 'contrast'));
export const tooltipBg = _var('tooltipBg', palette('gray', 'dark'));
export const tooltipBorderRadius = _var('tooltipBorderRadius', borderRadius);
export const tooltipOpacity = _var('tooltipOpacity', 1);
export const tooltipInnerPadding = _var('tooltipInnerPadding', '1.25rem');
export const tooltipMargin = _var('tooltipMargin', '.25rem');

export const tooltipArrowWidth = _var('tooltipArrowWidth', '9px'); // border width for arrow tip
export const tooltipArrowHeight = _var('tooltipArrowHeight', '.4rem');
export const tooltipArrowColor = _var('tooltipArrowColor', tooltipBg);

export const tooltipArrowOuterWidth = _var('tooltipArrowOuterWidth', math(`${tooltipArrowWidth} + 1`));
export const tooltipArrowOuterColor = _var('tooltipArrowOuterColor', tooltipBg);
export const tooltipArrowScaleX = _var('tooltipArrowScaleX', 'scaleX(1.6)');
export const tooltipArrowScaleY = _var('tooltipArrowScaleY', 'scaleY(1.6)');
export const tooltipArrowPosition = _var('tooltipArrowPosition', `- ${math(`${tooltipArrowOuterWidth} / 2`)}`);
export const tooltipArrowOffset = _var('tooltipArrowOffset', math(`(${tooltipArrowOuterWidth} * 1.6) + 30px`));

export const tooltipPadding = _var('tooltipPadding', tooltipArrowWidth);

export const tooltipBorder = _var('tooltipBorder', tooltipBg);
export const tooltipBorderWidth = _var('tooltipBorderWidth', '1px');

export const tooltipInverseColor = _var('tooltipInverseColor', bodyColor);
export const tooltipInverseBg = _var('tooltipInverseBg', palette('white'));
export const tooltipInverseBorder = _var('tooltipInverseBorder', palette('gray', 'light'));

export const tooltipInverseArrowColor = _var('tooltipInverseArrowColor', tooltipInverseBg);
export const tooltipInverseArrowOuterColor = _var('tooltipInverseArrowOuterColor', palette('gray', 'light'));


// Modals

// Padding applied to the modal body
export const modalInnerPadding = _var('modalInnerPadding', remSpacer3);
export const modalInnerPaddingD = _var('modalInnerPaddingD', `calc(${remSpacer} * 4)`); // 2rem

export const modalTitlePadding = _var('modalTitlePadding', `${remSpacer4} ${modalInnerPadding} ${remSpacer2}`); // ++
export const modalTitlePaddingD = _var('modalTitlePaddingD', `${remSpacer5} ${modalInnerPaddingD} ${remSpacer3}`);

export const modalNavPadding = _var('modalNavPadding', `0 ${modalInnerPadding} ${modalInnerPadding}`);
export const modalNavPaddingD = _var('modalNavPaddingD', `0 ${modalInnerPaddingD} ${modalInnerPadding}`);

export const modalBodyPaddingD = _var('modalBodyPaddingD', `0 ${modalInnerPaddingD} ${remSpacer5}`);
export const modalBodyPadding = _var('modalBodyPadding', `0 ${modalInnerPadding} ${remSpacer4}`);

export const modalFooterPadding = _var('modalFooterPadding', `0 ${modalInnerPadding} ${remSpacer4}`);
export const modalFooterPaddingD = _var('modalFooterPaddingD', `0 ${modalInnerPaddingD} ${remSpacer4}`);

export const modalContentBg = _var('modalContentBg', palette('white'));
export const modalContentBorderColor = _var('modalContentBorderColor', grayDark);

export const modalBackdropBg = _var('modalBackdropBg', rgba(palette('black', 'dark'), 0.1));
export const modalBackdropOpacity = _var('modalBackdropOpacity', '1');

export const modalLg = _var('modalLg', 'auto');
export const modalSm = _var('modalSm', 'auto');

export const modalFixedZ = _var('modalFixedZ', '1');

export const modalTransition = _var('modalTransition', `transform .3s ease-out`);

// Grid (cards, modals)
//
export const fixedColSm = _var('fixedColSm', math(`(${containerMaxWidths.sm} - (${gridGutterWidth} * 12)) / 12`));
export const fixedColMd = _var('fixedColMd', math(`(${containerMaxWidths.md} - (${gridGutterWidth} * 12)) / 12`));
export const fixedColLg = _var('fixedColLg', math(`(${containerMaxWidths.lg} - (${gridGutterWidth} * 12)) / 12`));
export const fixedColXl = _var('fixedColXl', math(`(${containerMaxWidths.xl} - (${gridGutterWidth} * 12)) / 12`));


// Alerts
//
// Define alert colors, border radius, and padding.

export const alertPadding = _var('alertPadding', '1.25rem');
export const alertPaddingY = _var('alertPaddingY', alertPadding);
export const alertPaddingX = _var('alertPaddingX', '1rem');
export const alertMarginBottom = _var('alertMarginBottom', '1rem');
export const alertBorderRadius = _var('alertBorderRadius', borderRadius);
export const alertLinkFontWeight = _var('alertLinkFontWeight', fontWeightNormal);
export const alertActionPadding = _var('alertActionPadding', '3rem');
export const alertIconPadding = _var('alertIconPadding', '3.5rem');
export const alertIconSize = _var('alertIconSize', '1.5rem');
export const alertBorderWidth = _var('alertBorderWidth', '.125rem');

export const alertOfferBg = _var('alertOfferBg', palette('primary', 'highlight'));
export const alertOfferText = _var('alertOfferText', palette('primary', 'highlight', 'contrast'));
export const alertOfferBorder = _var('alertOfferBorder', palette('primary', 'highlight'));
export const alertOfferToggle = _var('alertOfferToggle', alertOfferBorder);
export const alertOfferToggleIcon = _var('alertOfferToggleIcon', palette('primary', 'highlight', 'contrast'));

export const alertSuccessBg = _var('alertSuccessBg', palette('success', 'highlight'));
export const alertSuccessText = _var('alertSuccessText', palette('success', 'highlight', 'contrast'));
export const alertSuccessBorder = _var('alertSuccessBorder', palette('success', 'highlight'));
export const alertSuccessToggle = _var('alertSuccessToggle', alertSuccessBorder);
export const alertSuccessToggleIcon = _var('alertSuccessToggleIcon', palette('success', 'highlight', 'contrast'));

export const alertInfoBg = _var('alertInfoBg', palette('info', 'highlight'));
export const alertInfoText = _var('alertInfoText', palette('info', 'highlight', 'contrast'));
export const alertInfoBorder = _var('alertInfoBorder', palette('info', 'highlight'));
export const alertInfoToggle = _var('alertInfoToggle', alertInfoBorder);
export const alertInfoToggleIcon = _var('alertInfoToggleIcon', palette('info', 'highlight', 'contrast'));

export const alertWarningBg = _var('alertWarningBg', palette('warning', 'highlight'));
export const alertWarningText = _var('alertWarningText', palette('warning', 'highlight', 'contrast'));
export const alertWarningBorder = _var('alertWarningBorder', palette('warning', 'highlight'));
export const alertWarningToggle = _var('alertWarningToggle', alertWarningBorder);
export const alertWarningToggleIcon = _var('alertWarningToggleIcon', palette('warning', 'highlight', 'contrast'));

export const alertDangerBg = _var('alertDangerBg', palette('danger', 'highlight'));
export const alertDangerText = _var('alertDangerText', palette('danger', 'highlight', 'contrast'));
export const alertDangerBorder = _var('alertDangerBorder', palette('danger', 'highlight'));
export const alertDangerToggle = _var('alertDangerToggle', alertDangerBorder);
export const alertDangerToggleIcon = _var('alertDangerToggleIcon', palette('danger', 'highlight', 'contrast'));

export const alertNoteBg = _var('alertNoteBg', palette('secondary', 'pastel'));
export const alertNoteText = _var('alertNoteText', palette('secondary', 'pastel', 'contrast'));
export const alertNoteBorder = _var('alertNoteBorder', palette('secondary', 'base'));
export const alertNoteToggle = _var('alertNoteToggle', alertNoteBorder);
export const alertNoteToggleIcon = _var('alertNoteToggleIcon', palette('secondary', 'base', 'contrast'));

export const alertC3Bg = _var('alertC3Bg', palette('feature', 'pastel'));
export const alertC3Text = _var('alertC3Text', palette('feature', 'pastel', 'contrast'));
export const alertC3Border = _var('alertC3Border', palette('feature', 'base'));
export const alertC3Toggle = _var('alertC3Toggle', alertC3Border);
export const alertC3ToggleIcon = _var('alertC3ToggleIcon', palette('feature', 'base', 'contrast'));


// Progress bars

export const progressHeight = _var('progressHeight', '1rem');
export const progressFontSize = _var('progressFontSize', '.75rem');
export const progressBg = _var('progressBg', palette('product', 'dark'));
export const progressBorderRadius = _var('progressBorderRadius', borderRadius);
export const progressBoxShadow = _var('progressBoxShadow', `inset 0 .1rem .1rem ${rgba(black, 0.1)}`);
export const progressBarColor = _var('progressBarColor', white);
export const progressBarBg = _var('progressBarBg', palette('primary-o'));
export const progressBarAnimationTiming = _var('progressBarAnimationTiming', '1s linear infinite');
export const progressBarTransition = _var('progressBarTransition', 'width .6s ease');
export const progressY = _var('progressY', '1.25rem');

export const progressBarStripeAngle = _var('progressBarStripeAngle', '135deg');
export const progressBarStripeSize = _var('progressBarStripeSize', '1.5rem');
export const progressBarStripeColor = _var('progressBarStripeColor', transparentize(0.9, palette('black', 'dark')));

export const progressBarHeight = _var('progressBarHeight', '1.5rem');
export const progressBarBorderRadius = _var('progressBarBorderRadius', '.75rem');
export const progressBarSmHeight = _var('progressBarSmHeight', '.75rem');
export const progressBarSmBorderRadius = _var('progressBarSmBorderRadius', borderRadiusLg);
export const progressBarXsHeight = _var('progressBarXsHeight', '.375rem');
export const progressBarXsBorderRadius = _var('progressBarXsBorderRadius', borderRadiusSm);

export const progressCircleXsSize = _var('progressCircleXsSize', '3.25rem');
export const progressCircleSmSize = _var('progressCircleSmSize', '6.25rem');
export const progressCircleMdSize = _var('progressCircleMdSize', '9.5rem');
export const progressCircleLgSize = _var('progressCircleLgSize', '15.5rem');


// List group

export const listGroupBg = _var('listGroupBg', 'white');
export const listGroupBorderColor = _var('listGroupBorderColor', rgba(black, 0.125));
export const listGroupBorderWidth = _var('listGroupBorderWidth', borderWidth);
export const listGroupBorderRadius = _var('listGroupBorderRadius', borderRadius);

export const listGroupItemPaddingY = _var('listGroupItemPaddingY', '.75rem');
export const listGroupItemPaddingX = _var('listGroupItemPaddingX', '1.25rem');

export const listGroupHoverBg = _var('listGroupHoverBg', gray100);
export const listGroupActiveColor = _var('listGroupActiveColor', componentActiveColor);
export const listGroupActiveBg = _var('listGroupActiveBg', componentActiveBg);
export const listGroupActiveBorderColor = _var('listGroupActiveBorderColor', listGroupActiveBg);

export const listGroupBorder = _var('listGroupBorder', palette('gray', 'light'));
export const listGroupDisabledColor = _var('listGroupDisabledColor', palette('gray'));
export const listGroupDisabledBg = _var('listGroupDisabledBg', listGroupBg);

export const listGroupActionColor = _var('listGroupActionColor', gray700);
export const listGroupActionHoverColor = _var('listGroupActionHoverColor', listGroupActionColor);

export const listGroupActionActiveColor = _var('listGroupActionActiveColor', bodyColor);
export const listGroupActionActiveBg = _var('listGroupActionActiveBg', gray200);

export const listGroupActiveTextColor = _var('listGroupActiveTextColor', desaturate('0.55', lighten('0.55', componentActiveBg)));



// Image thumbnails

export const thumbnailPadding = _var('thumbnailPadding', '.25rem');
export const thumbnailBg = _var('thumbnailBg', bodyBg);
export const thumbnailBorderWidth = _var('thumbnailBorderWidth', borderWidth);
export const thumbnailBorderColor = _var('thumbnailBorderColor', '#ddd');
export const thumbnailBorderRadius = _var('thumbnailBorderRadius', borderRadius);
export const thumbnailBoxShadow = _var('thumbnailBoxShadow', `0 1px 2px ${rgba(black, 0.075)}`);
export const thumbnailTransition = _var('thumbnailTransition', 'all .2s ease-in-out');


// Figures

export const figureCaptionFontSize = _var('figureCaptionFontSize', '90%');
export const figureCaptionColor = _var('figureCaptionColor', gray600);


// Breadcrumbs

export const breadcrumbPaddingY = _var('breadcrumbPaddingY', '0');
export const breadcrumbPaddingX = _var('breadcrumbPaddingX', '0');
export const breadcrumbItemPadding = _var('breadcrumbItemPadding', remSpacer2);
export const breadcrumbIconMargin = _var('breadcrumbIconMargin', '.1875rem');

export const breadcrumbMarginBottom = _var('breadcrumbMarginBottom', remSpacer2);

export const breadcrumbBg = _var('breadcrumbBg', 'transparent');
export const breadcrumbDividerColor = _var('breadcrumbDividerColor', palette('gray'));
export const breadcrumbActiveColor = _var('breadcrumbActiveColor', palette('gray'));
export const breadcrumbDivider = _var('breadcrumbDivider', '/');

export const breadcrumbBorderRadius = _var('breadcrumbBorderRadius', 0);


// Media objects // ++

export const mediaHeadingMarginBottom = _var('mediaHeadingMarginBottom', '.5rem'); // ++
export const mediaAlignmentPaddingX = _var('mediaAlignmentPaddingX', '.625rem'); // ++

// Close

export const closeFontSize = _var('closeFontSize', math(`${fontSizeBase} * 1.5`));
export const closeFontWeight = _var('closeFontWeight', fontWeightBold);
export const closeColor = _var('closeColor', black);
export const closeTextShadow = _var('closeTextShadow', 'none');

// Code

export const codeFontSize = _var('codeFontSize', `90%`);
export const codePaddingY = _var('codePaddingY', `.2rem`);
export const codePaddingX = _var('codePaddingX', `.4rem`);
export const codeColor = _var('codeColor', bodyColor);
export const codeBg = _var('codeBg', palette('gray', 'faint'));

export const kbdColor = _var('kbdColor', white);
export const kbdBg = _var('kbdBg', gray900);

export const preBg = _var('preBg', codeBg);
export const preColor = _var('preColor', codeColor);
export const preScrollableMaxHeight = _var('preScrollableMaxHeight', '21.25rem');


// Slider Variables
export const sliderThumbColor = _var('sliderThumbColor', palette('white'));
export const sliderThumbBorderColor = _var('sliderThumbBorderColor', palette('black'));
export const sliderLabelColor = _var('sliderLabelColor', brandBlack);
export const sliderLeftIconSize = _var('sliderLeftIconSize', '1.125rem');
export const sliderRightIconSize = _var('sliderRightIconSize', '1.25rem');


// Wizard
//
export const wizCircleSize = _var('wizCircleSize', '2rem');
export const wizNumSize = _var('wizNumSize', '1.25em');
export const wizLineSize = _var('wizLineSize', '.5rem');

// Accordion Variables
export const uxAccordionBasePadding = _var('uxAccordionBasePadding', '2rem');
export const uxAccordionBaseMargin = _var('uxAccordionBaseMargin', '2rem 2.5rem');

// Arrow font size
export const dropArrowSize = _var('dropArrowSize', '1rem');
export const dropArrowSizeLg = _var('dropArrowSizeLg', '1.375rem');

// Pivots
export const pivotX = _var('pivotX', '1.25rem');
export const pivotY = _var('pivotY', '1.5rem');
export const pivotChevron = _var('pivotChevron', '1.5rem');
export const pivotGraphic = _var('pivotGraphic', '2rem');
export const pivotGraphicLeft = _var('pivotGraphicLeft', '1rem');

// Spinner
export const uxSpinnerSmSize = _var('uxSpinnerSmSize', '1rem');
export const uxSpinnerMdSize = _var('uxSpinnerMdSize', '2.25rem');
export const uxSpinnerLgSize = _var('uxSpinnerLgSize', '4.5rem');

export const uxSpinnerSmStrokeWidth = _var('uxSpinnerSmStrokeWidth', '2');
export const uxSpinnerMdStrokeWidth = _var('uxSpinnerMdStrokeWidth', '4');
export const uxSpinnerLgStrokeWidth = _var('uxSpinnerLgStrokeWidth', '6');

export const uxSpinnerDuration = _var('uxSpinnerDuration', '1.2s');

// BoxShadows
export const shadow1Size = _var('shadow1Size', '1px');
export const shadow1Opacity = _var('shadow1Opacity', 0.25);
export const shadow1Blur = _var('shadow1Blur', '6px');
export const shadow1Spread = _var('shadow1Spread', '0');

export const shadow2Size = _var('shadow2Size', ' 1px');
export const shadow2Opacity = _var('shadow2Opacity', 0.3);
export const shadow2Blur = _var('shadow2Blur', '8px');
export const shadow2Spread = _var('shadow2Spread', '0');

export const shadow3Size = _var('shadow3Size', '4px');
export const shadow3Opacity = _var('shadow3Opacity', 0.4);
export const shadow3Blur = _var('shadow3Blur', '12px');
export const shadow3Spread = _var('shadow3Spread', '0');

export const shadow4Size = _var('shadow4Size', '6px');
export const shadow4Opacity = _var('shadow4Opacity', 0.5);
export const shadow4Blur = _var('shadow4Blur', '20px');
export const shadow4Spread = _var('shadow4Spread', '0');

// Toggle variables
export const toggleTransition = _var('toggleTransition', '100ms ease-in'); // Handle transition
export const toggleBgTransition = _var('toggleBgTransition', '100ms ease-out'); // Background transition

// Toggle
export const toggleHandleSize = _var('toggleHandleSize', '1.25rem');
export const toggleBorderRadius = _var('toggleBorderRadius', '1rem');

export const toggleBgColorUnchecked = _var('toggleBgColorUnchecked', palette('white'));
export const toggleBgColorChecked = _var('toggleBgColorChecked', palette('primary', 'base'));

export const toggleBorderColorUnchecked = _var('toggleBorderColorUnchecked', palette('gray', 'light'));
export const toggleBorderColorChecked = _var('toggleBorderColorChecked', palette('primary', 'base'));

export const toggleHandleColorUnchecked = _var('toggleHandleColorUnchecked', palette('gray', 'light'));
export const toggleHandleColorChecked = _var('toggleHandleColorChecked', palette('white'));

export const toggleBtnColor = _var('toggleBtnColor', palette('gray'));
export const toggleBtnBgColor = _var('toggleBtnBgColor', palette('gray', 'faint'));
export const toggleBtnBgColorActive = _var('toggleBtnBgColorActive', palette('primary'));
export const toggleBtnBorderColor = _var('toggleBtnBorderColor', palette('gray', 'light'));
export const toggleBtnBorderColorActive = _var('toggleBtnBorderColorActive', palette('primary'));

// Stars
export const starsColorChecked = _var('starsColorChecked', palette('primary'));
export const starsColorUnchecked = _var('starsColorUnchecked', palette('grey', 'light'));
export const starsIconSize = _var('starsIconSize', '1.25rem');

// Growl
export const growlCloseIconSize = _var('growlCloseIconSize', '1.875rem');

// Focus visible a11y
export const focusVisibleOutline = _var('focusVisibleOutline', `px dashed ${palette('nav')}`);

// Footer
//
export const footerHeight = _var('footerHeight', '2.75rem');

// Search
export const searchBtnIconSize = _var('searchBtnIconSize', formClearIconSize);
export const searchBtnIconSizeSm = _var('searchBtnIconSizeSm', '.85rem');
