[
  {
    "description": "A table body component\n\n@displayName Tbody\n@class Tbody\n@extends {React.Component}",
    "displayName": "Tbody",
    "methods": [
      {
        "name": "components",
        "docblock": "Getter that returns the allowed children.\n\n@returns {Object} Components\n@private",
        "modifiers": [
          "get"
        ],
        "params": [],
        "returns": {
          "description": "Components",
          "type": {
            "name": "Object"
          }
        },
        "description": "Getter that returns the allowed children."
      },
      {
        "name": "compose",
        "docblock": "Iterate over each data row while using the iterator. A predefined ordered\nlist of property references is used by default if it is available, otherwise\ncolumns are rendered in the order of properties on the object.\n\n@param {Function} iterator Function that generates the content.\n@param {Object} data Reference to the dataset.\n@returns {Array} Collection of ReactDOM elements.\n@private",
        "modifiers": [],
        "params": [
          {
            "name": "iterator",
            "description": "Function that generates the content.",
            "type": {
              "name": "Function"
            },
            "optional": false
          },
          {
            "name": "data",
            "description": "Reference to the dataset.",
            "type": {
              "name": "Object"
            },
            "optional": false
          }
        ],
        "returns": {
          "description": "Collection of ReactDOM elements.",
          "type": {
            "name": "Array"
          }
        },
        "description": "Iterate over each data row while using the iterator. A predefined ordered\nlist of property references is used by default if it is available, otherwise\ncolumns are rendered in the order of properties on the object."
      },
      {
        "name": "row",
        "docblock": "Return a row iterator.\n\n@returns {Function} Iterator that maps children into Tr elements.\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "Iterator that maps children into Tr elements.",
          "type": {
            "name": "Function"
          }
        },
        "description": "Return a row iterator."
      },
      {
        "name": "cell",
        "docblock": "Return a cell iterator.\n\n@returns {Function} Iterator that maps children into Td elements.\n@private",
        "modifiers": [],
        "params": [],
        "returns": {
          "description": "Iterator that maps children into Td elements.",
          "type": {
            "name": "Function"
          }
        },
        "description": "Return a cell iterator."
      },
      {
        "name": "renderRows",
        "docblock": "Render rows from a data collection.\n\n@param {Object} data Optional collection of rows that can be rendered.\n@returns {Array} Collection of ReactDOM elements.\n@public",
        "modifiers": [],
        "params": [
          {
            "name": "data",
            "description": "Optional collection of rows that can be rendered.",
            "type": {
              "name": "Object"
            },
            "optional": false
          }
        ],
        "returns": {
          "description": "Collection of ReactDOM elements.",
          "type": {
            "name": "Array"
          }
        },
        "description": "Render rows from a data collection."
      },
      {
        "name": "renderCells",
        "docblock": "Render a set of cells in a single row.\n\n@param {Object} data Single object where each property will become a cell.\n@returns {Array} Collection of ReactDOM elements.\n@private",
        "modifiers": [],
        "params": [
          {
            "name": "data",
            "description": "Single object where each property will become a cell.",
            "type": {
              "name": "Object"
            },
            "optional": false
          }
        ],
        "returns": {
          "description": "Collection of ReactDOM elements.",
          "type": {
            "name": "Array"
          }
        },
        "description": "Render a set of cells in a single row."
      }
    ],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The child rows"
      },
      "click": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Called when a row is clicked"
      },
      "data": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "The data to fill the table"
      },
      "enableKeyboard": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "When false, tabbing is disabled between rows, and enabled between individual table cells,\nthough there is no handler for Enter"
      },
      "order": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "The column order for the rows"
      },
      "style": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Styles to apply to the element"
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "ClassName to apply to the element"
      }
    }
  }
]