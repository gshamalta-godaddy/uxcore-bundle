@import '~@ux/icon/chevron-down/index.css';

@import '~@ux/icon/chevron-up/index.css';
  
/* stylelint-disable max-nesting-depth */

.ux-table,
  .basegrid {
  width: 100%;
  max-width: 100%;
  margin-bottom: calc(var(--ux-1sbfig8, .25rem) * 4);
  word-wrap: break-word;
  border-collapse: collapse;
}

.ux-table tr,
.basegrid tr {
  background-color: var(--ux-6e5bb1, var(--ux-cao06b, white));
}

.ux-table tr:last-child,
.basegrid tr:last-child {
  border-bottom: 1px solid var(--ux-vy7am7, var(--ux-97h3vl, lightgray));
}

.ux-table th,
    .ux-table td,
    .basegrid th,
    .basegrid td {
  padding: calc(var(--ux-1sbfig8, .25rem) * 4);
  vertical-align: top;
  font-size: var(--ux-1ky7gs8, var(--ux-vvspv2, 1rem));
  line-height: var(--ux-b36u3j, var(--ux-1w31hux, 1.5));
  font-family: var(--ux-1impf0r, var(--ux-1067ph9, sans-serif));
  font-weight: var(--ux-u5dvr1, var(--ux-sm2he3, 400));
  color: var(--ux-15i6e94, var(--ux-1leynsm, black));
  border-top: 1px solid var(--ux-vy7am7, var(--ux-97h3vl, lightgray));
}
  
/* Bottom align for column headings */

.ux-table > thead > tr > th,
.basegrid > thead > tr > th {
  font-size: var(--ux-14qf2bv, var(--ux-16aixzc, 1rem));
  line-height: var(--ux-8llg3w, var(--ux-h93mi7, 1.5));
  font-family: var(--ux-1ic9azc, var(--ux-15ks663, sans-serif));
  font-weight: var(--ux-1eyzgq6, var(--ux-aarlu5, 400));
  vertical-align: middle;
  color: var(--ux-1fp2n4r, var(--ux-1leynsm, black));
  background-color: var(--ux-1ccdbse, var(--ux-cao06b, white));
}
  
/* Remove top border from thead by default */

.ux-table > caption + thead > tr:first-child > th,
        .ux-table > caption + thead > tr:first-child > td,
        .ux-table > colgroup + thead > tr:first-child > th,
        .ux-table > colgroup + thead > tr:first-child > td,
        .ux-table > thead:first-child > tr:first-child > th,
        .ux-table > thead:first-child > tr:first-child > td,
        .basegrid > caption + thead > tr:first-child > th,
        .basegrid > caption + thead > tr:first-child > td,
        .basegrid > colgroup + thead > tr:first-child > th,
        .basegrid > colgroup + thead > tr:first-child > td,
        .basegrid > thead:first-child > tr:first-child > th,
        .basegrid > thead:first-child > tr:first-child > td {
  border-top: 0 !important;
}
  
/* Account for multiple tbody instances */

.ux-table > tbody + tbody,
.basegrid > tbody + tbody {
  border-top: 2px solid var(--ux-vy7am7, var(--ux-97h3vl, lightgray));
}

.ux-table svg,
.basegrid svg {
  width: 1.375rem;
}
  
/* Expanded table w/ double padding */

.ux-table.table-expanded > thead > tr > th,
        .ux-table.table-expanded > thead > tr > td,
        .ux-table.table-expanded > tbody > tr > th,
        .ux-table.table-expanded > tbody > tr > td,
        .ux-table.table-expanded > tfoot > tr > th,
        .ux-table.table-expanded > tfoot > tr > td {
  padding-top: calc(var(--ux-1sbfig8, .25rem) * 8);
  padding-bottom: calc(var(--ux-1sbfig8, .25rem) * 8);
}
  
/* Condensed table w/ half padding */

.ux-table.table-sm th,
    .ux-table.table-sm td {
  padding: calc(var(--ux-1sbfig8, .25rem) * 1);
}
  
/* Zebra-striping */
  
/* Default zebra-stripe styles (alternating gray and transparent backgrounds) */

.ux-table.table-striped tbody tr:nth-of-type(odd),
.basegrid tbody tr:nth-of-type(odd) {
  background-color: var(--ux-1h6juze, var(--ux-l7zq7p, white));
}
  
/* Responsive tables */
  
/* Generate series of '.table-responsive-*' classes for configuring the screen */
  
/* size of where your table will overflow. */
  
/* Do we really need these going to uxcore(3) next? */

@media (max-width: 519px) {
  .ux-table.table-responsive-sm {
    display: block;
    width: 100%;
    overflow-x: auto;
    margin-bottom: 1rem;
  }
  .ux-table.table-responsive-sm.table-bordered {
    border: 0;
  }
}

@media (max-width: 767px) {
  .ux-table.table-responsive-md {
    display: block;
    width: 100%;
    overflow-x: auto;
    margin-bottom: 1rem;
  }
  .ux-table.table-responsive-md.table-bordered {
    border: 0;
  }
}

@media (max-width: 991px) {
  .ux-table.table-responsive-lg {
    display: block;
    width: 100%;
    overflow-x: auto;
    margin-bottom: 1rem;
  }
  .ux-table.table-responsive-lg.table-bordered {
    border: 0;
  }
}

@media (max-width: 1199px) {
  .ux-table.table-responsive-xl {
    display: block;
    width: 100%;
    overflow-x: auto;
    margin-bottom: 1rem;
  }
  .ux-table.table-responsive-xl.table-bordered {
    border: 0;
  }
}

@media (max-width: 1719px) {
  .ux-table.table-responsive-xxl {
    display: block;
    width: 100%;
    overflow-x: auto;
    margin-bottom: 1rem;
  }
  .ux-table.table-responsive-xxl.table-bordered {
    border: 0;
  }
}

.ux-table.table-responsive {
  display: block;
  width: 100%;
  overflow-x: auto;
  margin-bottom: 1rem;
}

.ux-table.table-responsive.table-bordered {
  border: 0;
}

.ux-table.table-responsive > .table {
  margin-bottom: 0;
}

@media (max-width: 991px) {
  .ux-table.table-responsive {
    width: 100%;
    margin-bottom: calc(var(--ux-1sbfig8, .25rem) * 6);
    overflow-y: hidden;
    border: 1px solid undefined;       /* Special overrides for the bordered tables */
  }
  .ux-table.table-responsive > .table { /* GD! */
    border: 0;         /* Only nuke the last row's bottom-border in 'tbody' and 'tfoot' since */         /* chances are there will be only one 'tr' in a 'thead' and that would */
  }         /* Nuke the appropriate borders so that the parent can handle them */
  .ux-table.table-responsive > .table > thead > tr > th:first-child,
            .ux-table.table-responsive > .table > thead > tr > td:first-child,
            .ux-table.table-responsive > .table > tbody > tr > th:first-child,
            .ux-table.table-responsive > .table > tbody > tr > td:first-child,
            .ux-table.table-responsive > .table > tfoot > tr > th:first-child,
            .ux-table.table-responsive > .table > tfoot > tr > td:first-child {
    border-left: 0;
  }
  .ux-table.table-responsive > .table > thead > tr > th:last-child,
            .ux-table.table-responsive > .table > thead > tr > td:last-child,
            .ux-table.table-responsive > .table > tbody > tr > th:last-child,
            .ux-table.table-responsive > .table > tbody > tr > td:last-child,
            .ux-table.table-responsive > .table > tfoot > tr > th:last-child,
            .ux-table.table-responsive > .table > tfoot > tr > td:last-child {
    border-right: 0;
  }         /* remove the border altogether. */
  .ux-table.table-responsive > .table > tbody > tr:last-child > th,
            .ux-table.table-responsive > .table > tbody > tr:last-child > td,
            .ux-table.table-responsive > .table > tfoot > tr:last-child > th,
            .ux-table.table-responsive > .table > tfoot > tr:last-child > td {
    border-bottom: 0;
  }
}
  
/* GD Basegrid */
  
/* Makes a striped, hovered, and bordered table */
  
/* without all the classes */

.basegrid {
  table-layout: fixed;
}

.basegrid > thead > tr > th {
  height: 5.714rem;
}

@media (min-width: 768px) {
  .basegrid > thead > tr > th {
    height: 5rem;
  }
}
  
/* GD Responsive Tables */

@media (max-width: 991px) {
  .ux-table.table-responsive .basegrid {
    max-width: none;
    border: 0;
  }
}

@media (min-width: 992px) {
  .ux-table.table-responsive .basegrid {
    width: 100% !important; /* to override mobile in page style */
  }
}
  
/* GD Features */
  
/* Sets all content centered horizontally and vertically */

.ux-table.table-features > thead > tr > th,
      .ux-table.table-features > thead > tr > td,
      .ux-table.table-features > tbody > tr > th,
      .ux-table.table-features > tbody > tr > td {
  text-align: center;
  vertical-align: middle;
}

.ux-table.table-features > thead > tr .table-feature,
.ux-table.table-features > tbody > tr .table-feature {
  text-align: left;
}

@media (max-width: 991px) {              /* makes td/th stack on top of each other */
  .ux-table.table-stacking,
      .ux-table.table-stacking > tbody,
      .ux-table.table-stacking > tbody > tr,
      .ux-table.table-stacking > tbody > tr > td {
    display: block !important;
    width: 100%;
  }
  .ux-table.table-stacking > thead {
    display: none;
  }
  .ux-table.table-stacking > tbody > tr:first-child > td:first-child {
    border-top: 0;
  }
  .ux-table.table-stacking > tbody > tr > td {
    padding-left: 10rem;
    text-align: left;
    vertical-align: top;
    border-right: 0;
    border-bottom: 0;
    border-left: 0;
  }
  .ux-table.table-stacking > tbody > tr > td:before {
    display: block;
    float: left;
    width: 10rem;
    padding-right: calc(var(--ux-1sbfig8, .25rem) * 4);
    padding-left: calc(var(--ux-1sbfig8, .25rem) * 4);
    margin-left: -10rem;
    content: attr(data-th);
    font-family: var(--ux-1ic9azc, var(--ux-15ks663, sans-serif));
    font-weight: var(--ux-1eyzgq6, var(--ux-aarlu5, 400));
  }
}

.ux-table-sort {
  padding-right: 15px;
}

.ux-table-sort,
    .ux-table-sort:hover,
    .ux-table-sort:focus {
  color: inherit;
  text-decoration: none;
}

.ux-table-sort:hover {
  cursor: pointer;
}

.ux-table-sort:hover .drop-up-down-icon {
  visibility: visible !important;
}

.ux-table-sort .drop-up-down-icon svg {
  position: relative;
  margin-top: -1px;
  margin-left: 0.5em;
  vertical-align: top;
}

