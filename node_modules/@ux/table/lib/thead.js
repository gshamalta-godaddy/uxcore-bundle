"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _collection = _interopRequireDefault(require("./collection"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _tr = _interopRequireDefault(require("./tr"));

//
// Set of allowed child Components for the Table Body.
//
const COMPONENTS = {
  tr: _tr.default
};
/**
 * A component representing the THEAD element
 *
 * @displayName Thead
 * @class Thead
 * @extends {Collection}
 */

class Thead extends _collection.default {
  /**
   * Getter that returns the allowed children.
   *
   * @returns {Object} Components
   * @private
   */
  get components() {
    return COMPONENTS;
  }
  /**
   * Sets options.sortable if appropriate for the instance & child-type
   *
   * @param {Object} options The options object to set sortable on
   * @param {Boolean|Function} sort The sort value from props
   * @param {string} childElementType The child element type that is being considered
   * @private
   */


  setSortableOptionsForChild(options, sort, childElementType) {
    if (childElementType === 'tr') {
      options.sortable = sort;
    }
  }
  /**
   * Render a table head.
   *
   * @returns {ReactElement} Table head.
   * @public
   */


  render() {
    const {
      style,
      children,
      className
    } = this.props;
    return /*#__PURE__*/_react.default.createElement("thead", {
      style: style,
      className: className
    }, _react.default.Children.map(children, this.renderChildren, this));
  }

}

exports.default = Thead;
Thead.propTypes = {
  /** Child row */
  children: _propTypes.default.node,

  /** Styles to apply to the element */
  style: _propTypes.default.object,

  /** ClassName to apply to the element */
  className: _propTypes.default.string
};