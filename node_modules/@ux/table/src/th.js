import React, { Component } from 'react';
import PropTypes from 'prop-types';
import classNames from '@ux/component-utilities/lib/classNames';
import ChevronDown from '@ux/icon/chevron-down';
import ChevronUp from '@ux/icon/chevron-up';
import rip from 'rip-out';
//
// Create a table header Component.
//
/**
 * A table header column component
 *
 * @displayName Th
 * @class Th
 * @extends {Component}
 */
export default class Th extends Component {
  constructor() {
    super(...arguments);
    this.handleKeyDown = this.handleKeyDown.bind(this);
    this.sort = this.sort.bind(this);
  }

  /**
   * Call the sort method on the parent Table Component. The
   * method sorts the current state by the property column.
   *
   * @param {Event} event Mouse click.
   * @private
   */
  sort(event) {
    const { sortable, column } = this.props;
    sortable(column, event);
  }

  /**
   * Call the sort method on the parent Table Component. The
   * method sorts the current state by the property column.
   *
   * @param {Event} event onKeyDown.
   * @private
   */
  handleKeyDown(event) {
    const key = event.key;
    const { sortable, column } = this.props;

    if (key === 'Enter') {
      sortable(column, event);
    }
  }

  /**
   * Create a plain table header.
   *
   * @returns {ReactElement} Table header cell.
   * @private
   */
  plain() {
    const props = rip(this.props, 'sortable');

    return <th { ...props }></th>;
  }

  /**
   * Create a table header with click event handling.
   *
   * @returns {ReactElement} Table header cell.
   * @private
   */
  sortable() {
    const {
      active,
      column,
      direction,
      className,
      children,
      showIcon,
      style
    } = this.props;
    const dir = ~direction ? 'down' : 'up';
    const iconVisible = (active && active === column) || showIcon;
    const visibleClass = iconVisible ? 'visible' : 'invisible';
    //
    // Show sorting icon with the proper direction.
    //

    return <th
      role='button'
      className={ classNames(className, 'ux-table-sort') }
      tabIndex='0'
      onKeyDown={ this.handleKeyDown }
      onClick={ this.sort }
      style={ style }>
      { children }
      <span className={ `drop-up-down-icon ${visibleClass}` }>
        { dir === 'down' ? <ChevronDown /> : <ChevronUp />}
      </span>
    </th>;
  }

  /**
   * Render the sortable header with an optional click event
   * that will sort the current column.
   *
   * @returns {ReactElement} Table header cell.
   * @public
   */
  render() {
    const { sortable, column } = this.props;
    return sortable && column ? this.sortable() : this.plain();
  }
}

/**
 * Allowed properties for Th.
 *
 * @enum {Object} Properties.
 * @public
 */
Th.propTypes = {
  /** Function to sort the data by the given column */
  sortable: PropTypes.func,
  /** Child components */
  children: PropTypes.node,
  /** The name of this column, gets passed to the sortable function */
  column: PropTypes.string,
  /** The name of the actively sorted column */
  active: PropTypes.string,
  /** The direction of the current sort */
  direction: PropTypes.number,
  /** The css classname to apply to the raw th element */
  className: PropTypes.string,
  /** Show the sorting indicator for sortable columns */
  showIcon: PropTypes.bool,
  /** Styles to apply to the element */
  style: PropTypes.object
};
