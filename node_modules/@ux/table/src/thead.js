import Collection from './collection';
import React from 'react';
import PropTypes from 'prop-types';
import Tr from './tr';

//
// Set of allowed child Components for the Table Body.
//
const COMPONENTS = {
  tr: Tr
};

/**
 * A component representing the THEAD element
 *
 * @displayName Thead
 * @class Thead
 * @extends {Collection}
 */
export default class Thead extends Collection {
  /**
   * Getter that returns the allowed children.
   *
   * @returns {Object} Components
   * @private
   */
  get components() {
    return COMPONENTS;
  }

  /**
   * Sets options.sortable if appropriate for the instance & child-type
   *
   * @param {Object} options The options object to set sortable on
   * @param {Boolean|Function} sort The sort value from props
   * @param {string} childElementType The child element type that is being considered
   * @private
   */
  setSortableOptionsForChild(options, sort, childElementType) {
    if (childElementType === 'tr') {
      options.sortable = sort;
    }
  }

  /**
   * Render a table head.
   *
   * @returns {ReactElement} Table head.
   * @public
   */
  render() {
    const { style, children, className } = this.props;
    return <thead style={ style } className={ className }>
      { React.Children.map(children, this.renderChildren, this) }
    </thead>;
  }
}

Thead.propTypes = {
  /** Child row */
  children: PropTypes.node,
  /** Styles to apply to the element */
  style: PropTypes.object,
  /** ClassName to apply to the element */
  className: PropTypes.string
};
