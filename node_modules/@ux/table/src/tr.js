import Collection from './collection';
import React from 'react';
import PropTypes from 'prop-types';
import Td from './td';
import Th from './th';

//
// Set of allowed child Components for the Table row.
//
const COMPONENTS = {
  td: Td,
  th: Th
};

/**
 * A table row component
 *
 * @displayName Tr
 * @class Tr
 * @extends {Collection}
 */
export default class Tr extends Collection {
  constructor() {
    super(...arguments);
    this.onKeyDown = this.onKeyDown.bind(this);
  }

  /**
   * Getter that returns the allowed children.
   *
   * @returns {Object} Components
   * @private
   */
  get components() {
    return COMPONENTS;
  }

  /**
   * Private keydown event handler that translates `Enter` keypresses into click events
   *
   * @param {any} event The event of the keydown
   * @private
   */
  onKeyDown(event) {
    if (!this.props.enableKeyboard) return;
    if (event.key === 'Enter') {
      this.props.click(event);
    }
  }

  /**
   * Render a table row.
   *
   * @returns {ReactElement} Table row.
   * @public
   */
  render() {
    const { click, className, children, tabIndex, style } = this.props;
    return <tr
      onKeyDown={ this.onKeyDown }
      onClick={ click }
      className={ className }
      tabIndex={ tabIndex }
      style={ style }>
      { React.Children.map(children, this.renderChildren, this) }
    </tr>;
  }
}


Tr.propTypes = {
  /** Child cells */
  children: PropTypes.node,
  /** Called when the row is clicked */
  click: PropTypes.func,
  /** Styles to apply to the element */
  style: PropTypes.object,
  /** ClassName to apply to the element */
  className: PropTypes.string
};
