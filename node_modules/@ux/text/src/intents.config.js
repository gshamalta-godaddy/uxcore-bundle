import Intents, { enums, feedbackExpressions } from '@ux/intents';

const styleProperties = [
  enums.properties.FONT_FAMILY,
  enums.properties.FONT_SIZE,
  enums.properties.FONT_WEIGHT,
  enums.properties.LINE_HEIGHT
];

// eslint-disable-next-line max-statements
export default (function () {

  const intents = new Intents();

  intents.create('@ux/text', {
    styleProperties: [...styleProperties, enums.properties.FOREGROUND_COLOR],
    expressions: Object.values(feedbackExpressions),
    features: {
      scaleFactor: {
        styleProperties: [
          enums.properties.FONT_SIZE,
          enums.properties.LINE_HEIGHT
        ]
      },
      scaleOperation: {
        styleProperties: [
          enums.properties.FONT_SIZE,
          enums.properties.LINE_HEIGHT
        ]
      },
      scaleOperationInverse: {
        styleProperties: [
          enums.properties.FONT_SIZE
        ]
      },
      title: { styleProperties },
      heading: { styleProperties },
      paragraph: { styleProperties },
      action: { styleProperties },
      caption: { styleProperties },
      input: { styleProperties },
      label: { styleProperties }
    }
  });

  Object.values(feedbackExpressions).forEach((expression) => {
    intents[`uxText${expression}`].foregroundColor = intents.ux[`feedbackHighContrast${expression}`].feedbackColor;
  });

  intents.uxText.scaleFactor.fontSize = 1.125; // Major second
  intents.uxText.scaleOperation.fontSize = '*';
  intents.uxText.scaleOperationInverse.fontSize = '/';

  intents.uxText.fontSize = intents.ux.text.fontSize;
  intents.uxText.title.fontSize = intents.ux.textTitle.fontSize;
  intents.uxText.heading.fontSize = intents.ux.textHeading.fontSize;
  intents.uxText.paragraph.fontSize = intents.ux.textParagraph.fontSize;
  intents.uxText.action.fontSize = intents.ux.textAction.fontSize;
  intents.uxText.caption.fontSize = intents.ux.textCaption.fontSize;
  intents.uxText.input.fontSize = intents.ux.textInput.fontSize;
  intents.uxText.label.fontSize = intents.ux.textLabel.fontSize;

  intents.uxText.scaleFactor.lineHeight = 1;
  intents.uxText.scaleOperation.lineHeight = '*';

  intents.uxText.lineHeight = intents.ux.text.lineHeight;
  intents.uxText.title.lineHeight = intents.ux.textTitle.lineHeight;
  intents.uxText.heading.lineHeight = intents.ux.textHeading.lineHeight;
  intents.uxText.paragraph.lineHeight = intents.ux.textParagraph.lineHeight;
  intents.uxText.action.lineHeight = intents.ux.textAction.lineHeight;
  intents.uxText.caption.lineHeight = intents.ux.textCaption.lineHeight;
  intents.uxText.input.lineHeight = intents.ux.textInput.lineHeight;
  intents.uxText.label.lineHeight = intents.ux.textLabel.lineHeight;

  intents.uxText.fontFamily = intents.ux.text.fontFamily;
  intents.uxText.title.fontFamily = intents.ux.textTitle.fontFamily;
  intents.uxText.heading.fontFamily = intents.ux.textHeading.fontFamily;
  intents.uxText.paragraph.fontFamily = intents.ux.textParagraph.fontFamily;
  intents.uxText.action.fontFamily = intents.ux.textAction.fontFamily;
  intents.uxText.caption.fontFamily = intents.ux.textCaption.fontFamily;
  intents.uxText.input.fontFamily = intents.ux.textInput.fontFamily;
  intents.uxText.label.fontFamily = intents.ux.textLabel.fontFamily;

  intents.uxText.fontWeight = intents.ux.text.fontWeight;
  intents.uxText.title.fontWeight = intents.ux.textTitle.fontWeight;
  intents.uxText.heading.fontWeight = intents.ux.textHeading.fontWeight;
  intents.uxText.paragraph.fontWeight = intents.ux.textParagraph.fontWeight;
  intents.uxText.action.fontWeight = intents.ux.textAction.fontWeight;
  intents.uxText.caption.fontWeight = intents.ux.textCaption.fontWeight;
  intents.uxText.input.fontWeight = intents.ux.textInput.fontWeight;
  intents.uxText.label.fontWeight = intents.ux.textLabel.fontWeight;

  return intents;

}());
