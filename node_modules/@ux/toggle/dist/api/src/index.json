[
  {
    "description": "Class representing a 2-state switch.\n\n@displayName Toggle (web)\n@class Toggle\n@public",
    "displayName": "Toggle",
    "methods": [],
    "props": {
      "type": {
        "type": {
          "name": "enum",
          "computed": true,
          "value": "Base.allowedTypes"
        },
        "required": false,
        "description": "Defines the type of behavior for the toggle"
      },
      "htmlFor": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Identifies the toggle label on the page (used for aria references)"
      },
      "label": {
        "type": {
          "name": "custom",
          "raw": "Base.validatePropTypeLabel"
        },
        "required": false,
        "description": "Label for the toggle"
      },
      "small": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flag dictating the toggle should be rendered smaller"
      },
      "disabled": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flag dictating if the toggle is disabled"
      },
      "checked": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flag dictating the checked state of the toggle"
      },
      "hideLabel": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flag dictating if the toggle should hide its label"
      },
      "onChange": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "onChange callback"
      },
      "onKeyDown": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "onKeyDown override, (default allows Enter and Space to flip the toggle)"
      },
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Identifies the toggle on the page, must be unique if multiple component share the same label"
      },
      "tabIndex": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "-1",
              "computed": true
            },
            {
              "value": "0",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Developer indicates tabIndex"
      }
    }
  }
]