import Intents, { enums } from '@ux/intents';

export default (function () {
  const intents = new Intents();

  intents.create('@ux/toggle', {
    expressions: [
      enums.interactions.CHOSEN
    ],
    features: {
      [enums.features.BODY]: {
        styleProperties: [
          enums.properties.BACKGROUND_COLOR,
          enums.properties.BORDER_COLOR
        ]
      },
      [enums.features.KNOB]: {
        styleProperties: [
          enums.properties.BACKGROUND_COLOR
        ]
      },
      [enums.features.LABEL]: {
        styleProperties: [
          enums.properties.FONT_FAMILY,
          enums.properties.FONT_SIZE,
          enums.properties.FONT_WEIGHT,
          enums.properties.LINE_HEIGHT,
          enums.properties.FOREGROUND_COLOR
        ]
      }
    }
  });

  // Label
  intents.uxToggle.label.fontFamily = intents.ux.textLabel.fontFamily;
  intents.uxToggle.label.fontSize = intents.ux.textLabel.fontSize;
  intents.uxToggle.label.fontWeight = intents.ux.textLabel.fontWeight;
  intents.uxToggle.label.lineHeight = intents.ux.textLabel.lineHeight;
  intents.uxToggle.label.foregroundColor = intents.ux.box.foregroundColor;

  // Knob
  intents.uxToggle.knob.backgroundColor = intents.ux.control.borderColor;
  intents.uxToggleChosen.knob.backgroundColor = intents.ux.feedback.onFeedbackColor;

  // Toggle container
  intents.uxToggle.body.backgroundColor = intents.ux.control.backgroundColor;
  intents.uxToggle.body.borderColor = intents.ux.control.borderColor;

  intents.uxToggleChosen.body.backgroundColor = intents.ux.feedback.feedbackColor;
  intents.uxToggleChosen.body.borderColor = intents.ux.feedback.feedbackColor;

  return intents;
}());
