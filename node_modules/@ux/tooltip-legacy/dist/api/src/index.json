[
  {
    "description": "Display a Tooltip.\n\n@displayName Tooltip (Web)\n@class Tooltip\n@public",
    "displayName": "Tooltip",
    "methods": [
      {
        "name": "toggle",
        "docblock": "Getter to return a handler to toggle the tooltip. If no tooltip instance\nis available, it will be opened. Otherwise it will be closed.\n\nPropagation cannot be stopped here as other tooltips need to be closed with\nthe same click event.\n\n@param {React.SyntheticEvent} event React SyntheticClick event.\n@public",
        "modifiers": [
          "get"
        ],
        "params": [],
        "returns": null,
        "description": "Getter to return a handler to toggle the tooltip. If no tooltip instance\nis available, it will be opened. Otherwise it will be closed.\n\nPropagation cannot be stopped here as other tooltips need to be closed with\nthe same click event."
      },
      {
        "name": "dismiss",
        "docblock": "Getter to return a handler that closes the tooltip and calls the `onDismiss`\nproperty.\n\nThis function is supposed to be called only when the user clicks the\n`close` button, representing that the user had a clear intent to close\nthe tooltip.\n\n@private",
        "modifiers": [
          "get"
        ],
        "params": [],
        "returns": null,
        "description": "Getter to return a handler that closes the tooltip and calls the `onDismiss`\nproperty.\n\nThis function is supposed to be called only when the user clicks the\n`close` button, representing that the user had a clear intent to close\nthe tooltip."
      },
      {
        "name": "anchorMouseEnter",
        "docblock": "Handles mouse enter event for the anchor element\n\n@param {Event} event React SyntheticMouseEnter event.\n@private",
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "description": "React SyntheticMouseEnter event.",
            "type": {
              "name": "Event"
            },
            "optional": false
          }
        ],
        "returns": null,
        "description": "Handles mouse enter event for the anchor element"
      },
      {
        "name": "anchorMouseLeave",
        "docblock": "Handles mouse leave event for the anchor element\n\n@private",
        "modifiers": [],
        "params": [],
        "returns": null,
        "description": "Handles mouse leave event for the anchor element"
      },
      {
        "name": "startAutoHideTimer",
        "docblock": "Starts or restarts auto hide timer using `autoHideTimeout` prop\n\n@private",
        "modifiers": [],
        "params": [],
        "returns": null,
        "description": "Starts or restarts auto hide timer using `autoHideTimeout` prop"
      },
      {
        "name": "stopAutoHideTimer",
        "docblock": "Stops (clears) auto hide timer\n\n@private",
        "modifiers": [],
        "params": [],
        "returns": null,
        "description": "Stops (clears) auto hide timer"
      },
      {
        "name": "onKeyDown",
        "docblock": "Handle keyboard events for escape key on the tooltip, this can be\nused to augment the default behavior if you want to have manual control\nover closing of the tooltip.\n\n@param {Event} event Browser event.\n@private",
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "description": "Browser event.",
            "type": {
              "name": "Event"
            },
            "optional": false
          }
        ],
        "returns": null,
        "description": "Handle keyboard events for escape key on the tooltip, this can be\nused to augment the default behavior if you want to have manual control\nover closing of the tooltip."
      },
      {
        "name": "close",
        "docblock": "Unmount and remove the Content Component. This methods is used as\nevent handler and therefore follows the getter pattern.\n\n@public",
        "modifiers": [],
        "params": [],
        "returns": null,
        "description": "Unmount and remove the Content Component. This methods is used as\nevent handler and therefore follows the getter pattern."
      },
      {
        "name": "closeFromClickOutside",
        "docblock": "Close event handler specifically for when a close was triggered by clicking\noutside of the tooltip\n\n@param {Event} event React SyntheticMouseEnter event.\n@private",
        "modifiers": [],
        "params": [
          {
            "name": "event",
            "description": "React SyntheticMouseEnter event.",
            "type": {
              "name": "Event"
            },
            "optional": false
          }
        ],
        "returns": null,
        "description": "Close event handler specifically for when a close was triggered by clicking\noutside of the tooltip"
      },
      {
        "name": "open",
        "docblock": "This method is called from `toggle` to open the tooltip.\n\n@public",
        "modifiers": [],
        "params": [],
        "returns": null,
        "description": "This method is called from `toggle` to open the tooltip."
      },
      {
        "name": "Close",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "{ close, className, ariaLabels }",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "Title",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "{ children, className }",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "Close",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "{ close, className, ariaLabels }",
            "type": null
          }
        ],
        "returns": null
      },
      {
        "name": "Title",
        "docblock": null,
        "modifiers": [
          "static"
        ],
        "params": [
          {
            "name": "{ children, className }",
            "type": null
          }
        ],
        "returns": null
      }
    ],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "HTML element id to use for the anchor element"
      },
      "persistent": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flag for whether a tooltip is persistent",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "openOnHover": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "(Desktop/Mouse use only) Flag for whether the tooltip should open when the anchor is hovered",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "autoHideTimeout": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The number of milliseconds before a tooltip auto-hides"
      },
      "hideClose": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "(Desktop/Mouse use only) Hides the close button for use as a hover only tooltip *",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "className": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "className for styling"
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Children to use as the tooltip anchor"
      },
      "message": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Tooltip message content"
      },
      "root": {
        "type": {
          "name": "union",
          "value": [
            {
              "name": "node"
            },
            {
              "name": "shape",
              "value": {
                "current": {
                  "name": "object",
                  "required": false
                }
              }
            }
          ]
        },
        "required": false,
        "description": "The root document to attach the tooltip, defaults to document.documentElement. Used to support Shadow DOM"
      },
      "title": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Content for the tooltip title"
      },
      "text": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Text content for the tooltip anchor"
      },
      "open": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flag for if the tooltip should open at start",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "onClose": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Handler for when a tooltip is closed"
      },
      "onOpen": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Handler for when a tooltip is opened"
      },
      "onDismiss": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Handler for when a tooltip is closed explicitly by the user"
      },
      "tabIndex": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "The accessibility tab index value",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "data-eid": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The eid to identify click origin"
      },
      "ariaLabels": {
        "type": {
          "name": "shape",
          "value": {
            "close": {
              "name": "string",
              "description": "Screen reader label for close button",
              "required": false
            },
            "tooltipClick": {
              "name": "string",
              "description": "Screen reader label for icon button",
              "required": false
            }
          }
        },
        "required": false,
        "description": "The aria-label to identify the button",
        "defaultValue": {
          "value": "{\n  close: 'Close Tooltip',\n  tooltipClick: 'Click here for more information'\n}",
          "computed": false
        }
      }
    }
  }
]