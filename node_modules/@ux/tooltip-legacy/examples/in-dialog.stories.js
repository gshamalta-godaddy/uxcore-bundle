import React, { useRef } from 'react';
import Tooltip from '../src';

const containerStyle = {
  border: '2px solid #eee',
  height: 160,
  margin: '20px auto',
  overflow: 'auto',
  padding: 20,
  position: 'relative',
  width: 600
};

export default function InDialog(args) {
  const dialogRef = useRef();

  return (
    <div style={ containerStyle } ref={ dialogRef }>
      {dialogRef && <div>
        This example shows how you could place a tooltip inside a dialog.
        In this case, a tooltip&apos;s position is absolute
        <Tooltip id='second-tooltip-1' root={ dialogRef.current } { ...args } />.
        You should provide <b> root </b> property, that is, parent, not <i> static </i> element.
        In this case, the dialog content contains tooltips inside it.
        This approach prevents disconnecting issues while scrolling.
        For this case position calculation method is different.
        It is measures offset to the closest parent instead of using window boundaries
        <Tooltip id='second-tooltip-2' root={ dialogRef.current } { ...args } />.
        You could test it by scrolling this dialog. Please pay attention that tooltips follow your scrolling.
        I recommend using this approach if you need to place this component in the scrollable area.
      </div> }
    </div>
  );

}

InDialog.args = {
  message: 'Tooltip'
};
