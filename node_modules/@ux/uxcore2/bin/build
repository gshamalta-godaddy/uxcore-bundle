#!/usr/bin/env bash

# Functional qquivalent to __dirname in Node.js for Bash.
DIRNAME="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

#
# function verify_step (CODE, [PREFIX])
# Verifies that CODE is 0 representing a valid
# execution for the most recent build step.
#
verify_step () {
  LAST_CODE=$1
  [ -z "$2" ] && PREFIX='' || PREFIX=$2

  if [ $LAST_CODE -eq 0 ]; then
    printf "$PREFIX ... [\x1b[32mok\x1b[39m] \n\n";
  else
    echo "Error code: $LAST_CODE. Stopping";
    exit $LAST_CODE;
  fi
}

# Generate versions JSON
printf "Cleaning and creating working directories: ./{dist,lib}"
rm -rf $DIRNAME/../dist $DIRNAME/../lib
mkdir -p $DIRNAME/../dist/css $DIRNAME/../dist/js $DIRNAME/../lib
verify_step $?

# Transpile { index.js }
printf "Transpile ./js/{index.js}"
babel ./js -d ./lib --ignore 'build,external'
verify_step $?

# New CSS is always generated.
# New JS is always generated.

printf "Webpack execution \n\n"
DEBUG="ux-webpack*" webpack --config=$DIRNAME/../webpack.config.js --bail
verify_step $? "\nWebpack execution"

printf "Compress JavaScript"
$DIRNAME/compress-js

verify_step $?

printf "Compress CSS"
$DIRNAME/compress-css
verify_step $?
