const { externals } = require('../index.js');
const MetaData = require('./metadata');
const extract = require('./extract');
const path = require('path');

/**
 * Generate a common WebPack configuration that is used to expose our
 * components under the `ux` namespace
 *
 * @param {String} name Name of the Component. Should match externals name.
 * @param {String} [main='./src/index.js' } = {}] Entry point of the WebPack.
 * @returns {Object} WebPack configuration.
 * @public
 */
function create(name, {
  root = process.cwd(),
  main = './src/index.js',
  dependent = extract
} = {}) {
  const output = path.join(root, 'dist');

  //
  // Return the WebPack config so it can be consumed by WebPack.
  //
  return {
    mode: 'production',
    entry: main,
    externals,
    output: {
      path: output,
      filename: 'bundle-service.js',

      //
      // This library configuration is needed to make sure that the exported
      // component lives under the ux.{name} namespace in the window, and that
      // we use the exposed `default` property exported library so we don't
      // have a `ux.{name}.default`.
      //
      library: ['ux', name],
      libraryExport: ['default'],
      libraryTarget: 'umd'
    },
    module: {
      rules: [{
        test: /\.jsx?$/,
        use: [{ loader: 'babel-loader' }]
      }]
    },
    plugins: [
      new MetaData({ root, dependent })
    ]
  };
}

//
// Expose the API.
//
module.exports = { create, extract, MetaData };
