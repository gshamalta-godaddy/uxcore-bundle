/* eslint no-console: 0 */
const assume = require('assume');
const ensure = require('../ensure');

/**
 * Helper function that collects console.error output and returns
 * an object that can manipulate the listener.
 * @returns {Object} API to collect stderr output.
 */
function collectStderr() {
  let lines = '';
  const error = console.error;
  console.error = function (line) {
    lines += line + '\n';
  };

  return {
    get output() { return lines; },
    off: () => { console.error = error; }
  };
}

describe('ensuring require', function () {
  it('ensure(single) – when installed', function () {
    assume(true).true();
  });

  it('ensure(single) – when missing', function () {
    const stderr = collectStderr();
    assume(function () { ensure('single-module'); }).throws('Missing module(s)');
    stderr.off();
    assume(stderr.output).includes('npm install single-module');
  });

  it('ensure([array, of, modules]) – all missing', function () {
    const stderr = collectStderr();
    assume(function () { ensure(['first', 'second', 'third']); }).throws('Missing module(s)');
    stderr.off();
    assume(stderr.output).includes('npm install first second third');
  });
});
