{"version":3,"sources":["../src/outputCssLoader.ts"],"names":["loaderUtils","getCacheInstance","outputCssLoader","async","cacheProvider","getOptions","then","cacheInstance","get","resourcePath","result","callback","catch","err"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,cAAxB;AACA,SAASC,gBAAT,QAAiC,SAAjC;AAIA,eAAe,SAASC,eAAT,GAA8C;AAC3D,OAAKC,KAAL;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAoBJ,WAAW,CAACK,UAAZ,CAAuB,IAAvB,KAAgC,EAA1D;AACAJ,EAAAA,gBAAgB,CAACG,aAAD,CAAhB,CACGE,IADH,CACSC,aAAD,IAAmBA,aAAa,CAACC,GAAd,CAAkB,KAAKC,YAAvB,CAD3B,EAEGH,IAFH,CAESI,MAAD,IAAY,KAAKC,QAAL,CAAc,IAAd,EAAoBD,MAApB,CAFpB,EAGGE,KAHH,CAGUC,GAAD,IAAgB,KAAKF,QAAL,CAAcE,GAAd,CAHzB;AAID","sourcesContent":["import loaderUtils from 'loader-utils';\nimport { getCacheInstance } from './cache';\n\ntype LoaderContext = Parameters<typeof loaderUtils.getOptions>[0];\n\nexport default function outputCssLoader(this: LoaderContext) {\n  this.async();\n  const { cacheProvider } = loaderUtils.getOptions(this) || {};\n  getCacheInstance(cacheProvider)\n    .then((cacheInstance) => cacheInstance.get(this.resourcePath))\n    .then((result) => this.callback(null, result))\n    .catch((err: Error) => this.callback(err));\n}\n"],"file":"outputCssLoader.js"}